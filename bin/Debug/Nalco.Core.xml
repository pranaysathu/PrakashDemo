<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nalco.Core</name>
    </assembly>
    <members>
        <member name="T:Nalco.Core.ArrayExt">
            <summary>
            Extension methods for Array class.
            </summary>
        </member>
        <member name="M:Nalco.Core.ArrayExt.ToHex(System.Byte[])">
            <summary>
            Converts a byte array to a hexidecimal string.
            </summary>
            <param name="bytes">A byte array.</param>
            <returns>A hexidecimal string.</returns>
        </member>
        <member name="M:Nalco.Core.ArrayExt.Slice``1(``0[],System.Int32)">
            <summary>
            Slice the source array from the start element to the end.
            </summary>
            <typeparam name="T">Type of element in the array.</typeparam>
            <param name="source">Source array to slice.</param>
            <param name="start">Starting element of the slice.</param>
            <returns>Slice of the source array.</returns>
        </member>
        <member name="M:Nalco.Core.ArrayExt.Slice``1(``0[],System.Int32,System.Int32)">
            <summary>
            Slice the source array from the start element up to, but not
            including the end element.
            </summary>
            <typeparam name="T">Type of element in the array.</typeparam>
            <param name="source">Source array to slice.</param>
            <param name="start">Starting element of the slice.</param>
            <param name="end">First element to not be included in the slice.</param>
            <returns>Slice of the source array.</returns>
        </member>
        <member name="M:Nalco.Core.ArrayExt.StartsWith``1(``0[],``0[])">
            <summary>
            Determines if the begining of the source array matches the prefix
            array.
            </summary>
            <typeparam name="T">Array type.</typeparam>
            <param name="source">Source array.</param>
            <param name="prefix">Prefix array.</param>
            <returns>True if source starts with prefix.</returns>
        </member>
        <member name="M:Nalco.Core.ArrayExt.StartsWith``1(``0[],``0[],System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Determines if the begining of the source array matches the prefix
            array.
            </summary>
            <typeparam name="T">Array type.</typeparam>
            <param name="source">Source array.</param>
            <param name="prefix">Prefix array.</param>
            <param name="comparer">IEqualityComparer to compare instances of T.</param>
            <returns>True if source starts with prefix.</returns>
        </member>
        <member name="M:Nalco.Core.ArrayExt.StartsWith``1(``0[],``0[],System.Func{``0,``0,System.Boolean})">
            <summary>
            Determines if the begining of the source array matches the prefix
            array.
            </summary>
            <typeparam name="T">Array type.</typeparam>
            <param name="source">Source array.</param>
            <param name="prefix">Prefix array.</param>
            <param name="predicate">Predicate to compare instances of T for
            equality.</param>
            <returns>True if source starts with prefix.</returns>
        </member>
        <member name="T:Nalco.Core.DateTimeExt">
            <summary>
            Extension methods for DataTime structure.
            </summary>
        </member>
        <member name="M:Nalco.Core.DateTimeExt.GetWeekdays(System.DateTime,System.DateTime)">
            <summary>
            Calculates the number of weekdays (inclusive) between two dates.
            </summary>
            <param name="start">Lower bound of range.</param>
            <param name="end">Upper bound of range.</param>
            <returns>Number of weekdays between date range.</returns>
        </member>
        <member name="M:Nalco.Core.DateTimeExt.Round(System.DateTime,System.TimeSpan)">
            <summary>
            Returns the datetime value rounded to the nearest timeSpan interval.
            </summary>
            <param name="value">Value.</param>
            <param name="timeSpan">Time span.</param>
            <returns>The datetime rounded to the nearest timeSpan interval.</returns>
        </member>
        <member name="M:Nalco.Core.DateTimeExt.Floor(System.DateTime,System.TimeSpan)">
            <summary>
            Returns the largest datetime value that is less than or equal to
            the given value based on the specified time span.
            </summary>
            <param name="value">Value.</param>
            <param name="timeSpan">Time span.</param>
            <returns>The largest datetime that is less than or equal to
            the given value.</returns>
        </member>
        <member name="M:Nalco.Core.DateTimeExt.Ceiling(System.DateTime,System.TimeSpan)">
            <summary>
            Returns the smallest datetime value that is greater than or equal
            to the given value based on the specified time span.
            </summary>
            <param name="value">Value.</param>
            <param name="timeSpan">Time span.</param>
            <returns>The smallest datetime value that is greater than or equal
            to the given value.</returns>
        </member>
        <member name="T:Nalco.Core.ElideMode">
            <summary>
            Specifies how strings should be elided by the StringExt.Elide method.
            </summary>
        </member>
        <member name="F:Nalco.Core.ElideMode.WordAware">
            <summary>
            Elide a string just before a space, if possible.
            </summary>
        </member>
        <member name="F:Nalco.Core.ElideMode.WordUnaware">
            <summary>
            Allow eliding mid-word.
            </summary>
        </member>
        <member name="T:Nalco.Core.EventHandlerExt">
            <summary>
            Extension methods for EventHandler&lt;T&gt; class.
            </summary>
        </member>
        <member name="M:Nalco.Core.EventHandlerExt.Raise(System.EventHandler{System.EventArgs},System.Object)">
            <summary>
            Raise the event from sender with no arguments.
            </summary>
            <param name="handler">Method that will handle the event.</param>
            <param name="sender">The source of the event.</param>
        </member>
        <member name="M:Nalco.Core.EventHandlerExt.Raise(System.EventHandler{Nalco.Core.StatusMessageEventArgs},System.Object,System.String)">
            <summary>
            Raise the event from sender with the given message.
            </summary>
            <param name="handler">Method that will handle the event.</param>
            <param name="sender">The source of the event.</param>
            <param name="message">Status message.</param>
        </member>
        <member name="M:Nalco.Core.EventHandlerExt.Raise``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Raise the event from sender with event arguments of T.
            </summary>
            <typeparam name="T">The type of the event data generated by the
            event.</typeparam>
            <param name="handler">Method that will handle the event.</param>
            <param name="sender">The source of the event.</param>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="T:Nalco.Core.MathExceptions">
            <summary>
            Possibly exceptions held in results from MathExt.QuadraticFormula.
            </summary>
        </member>
        <member name="F:Nalco.Core.MathExceptions.None">
            <summary>
            No exceptions.
            </summary>
        </member>
        <member name="F:Nalco.Core.MathExceptions.Imaginary">
            <summary>
            The result is an imaginary number.
            </summary>
        </member>
        <member name="F:Nalco.Core.MathExceptions.DivByZero">
            <summary>
            The result would cause a division by zero.
            </summary>
        </member>
        <member name="T:Nalco.Core.MathExt">
            <summary>
            Extension methods for Math class.
            </summary>
        </member>
        <member name="F:Nalco.Core.MathExt.Navg">
            <summary>
            Avogadro's Number, the number of atoms in a gram-mole.
            </summary>
        </member>
        <member name="M:Nalco.Core.MathExt.QuadraticFormula(System.Double,System.Double,System.Double)">
            <summary>
            Run the quadratic formula to solve the quadratic equation:
            ax^2 + bx + c = 0
            </summary>
            <param name="a">Quadratic coefficient.</param>
            <param name="b">Linear coefficient.</param>
            <param name="c">Constant term.</param>
            <returns>Quadratic results.</returns>
        </member>
        <member name="M:Nalco.Core.MathExt.Max``1(``0,``0)">
            <summary>
            Returns the Max of two Ts where T implements IComparable of T.
            </summary>
            <typeparam name="T">Type to compare.</typeparam>
            <param name="l">Left compare item.</param>
            <param name="r">Right compare item.</param>
            <returns>Largest item of type T.</returns>
        </member>
        <member name="M:Nalco.Core.MathExt.Min``1(``0,``0)">
            <summary>
            Returns the Min of two Ts where T implements IComparable of T.
            </summary>
            <typeparam name="T">Type to compare.</typeparam>
            <param name="l">Left compare item.</param>
            <param name="r">Right compare item.</param>
            <returns>Smallest item of type T.</returns>
        </member>
        <member name="M:Nalco.Core.MathExt.Round(System.Double,System.Double)">
            <summary>
            Round the given value to the nearest interval.
            </summary>
            <param name="value">Value to round.</param>
            <param name="interval">Interval.</param>
            <returns>Value rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Core.MathExt.Round(System.Double,System.Double,System.MidpointRounding)">
            <summary>
            Round the given value to the nearest interval.
            </summary>
            <param name="value">Value to round.</param>
            <param name="interval">Interval.</param>
            <param name="mode">Rounding mode.</param>
            <returns>Value rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Core.MathExt.Round(System.Int32,System.Int32)">
            <summary>
            Round the given value to the nearest interval.
            </summary>
            <param name="value">Value to round.</param>
            <param name="interval">Interval.</param>
            <returns>Value rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Core.MathExt.Round(System.Int64,System.Int64)">
            <summary>
            Round the given value to the nearest interval.
            </summary>
            <param name="value">Value to round.</param>
            <param name="interval">Interval.</param>
            <returns>Value rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Core.MathExt.Floor(System.Double,System.Double)">
            <summary>
            Round the given value down to the nearest interval.
            </summary>
            <param name="value">Value to round.</param>
            <param name="interval">Interval.</param>
            <returns>Value rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Core.MathExt.Floor(System.Int32,System.Int32)">
            <summary>
            Round the given value down to the nearest interval.
            </summary>
            <param name="value">Value to round.</param>
            <param name="interval">Interval.</param>
            <returns>Value rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Core.MathExt.Floor(System.Int64,System.Int64)">
            <summary>
            Round the given value down to the nearest interval.
            </summary>
            <param name="value">Value to round.</param>
            <param name="interval">Interval.</param>
            <returns>Value rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Core.MathExt.Ceiling(System.Double,System.Double)">
            <summary>
            Round the given value up to the nearest interval.
            </summary>
            <param name="value">Value to round.</param>
            <param name="interval">Interval.</param>
            <returns>Value rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Core.MathExt.Ceiling(System.Int32,System.Int32)">
            <summary>
            Round the given value up to the nearest interval.
            </summary>
            <param name="value">Value to round.</param>
            <param name="interval">Interval.</param>
            <returns>Value rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Core.MathExt.Ceiling(System.Int64,System.Int64)">
            <summary>
            Round the given value up to the nearest interval.
            </summary>
            <param name="value">Value to round.</param>
            <param name="interval">Interval.</param>
            <returns>Value rounded up to the nearest interval.</returns>
        </member>
        <member name="T:Nalco.Core.NaturalStringComparer">
            <summary>
            Implements a natural string comparison.
            </summary>
        </member>
        <member name="M:Nalco.Core.NaturalStringComparer.#ctor">
            <summary>
            Construct a new <see cref="T:Nalco.Core.NaturalStringComparer"/>.
            </summary>
            <remarks>
            The comparer will use <see cref="F:System.StringComparison.Ordinal"/>.
            </remarks>
        </member>
        <member name="M:Nalco.Core.NaturalStringComparer.#ctor(System.StringComparison)">
            <summary>
            Construct a new <see cref="T:Nalco.Core.NaturalStringComparer"/> using the specified <see cref="T:System.StringComparison"/>.
            </summary>
            <param name="stringComparison">The type of <see cref="T:System.StringComparison"/> to use.</param>
        </member>
        <member name="P:Nalco.Core.NaturalStringComparer.Ordinal">
            <summary>
            A static instance of <see cref="T:Nalco.Core.NaturalStringComparer"/> using <see cref="F:System.StringComparison.Ordinal"/>.
            </summary>
        </member>
        <member name="P:Nalco.Core.NaturalStringComparer.OrdinalIgnoreCase">
            <summary>
            A static instance of <see cref="T:Nalco.Core.NaturalStringComparer"/> using <see cref="F:System.StringComparison.OrdinalIgnoreCase"/>.
            </summary>
        </member>
        <member name="M:Nalco.Core.NaturalStringComparer.Compare(System.Object,System.Object)">
            <summary>
            Compare the two specified objects using natural string comparison.
            </summary>
            <param name="x">The first <see cref="T:System.Object"/>.</param>
            <param name="y">The second <see cref="T:System.Object"/>.</param>
            <returns>A 32-bit signed integer indicating the natural relationship between the two comparands.</returns>
        </member>
        <member name="M:Nalco.Core.NaturalStringComparer.Compare(System.String,System.String)">
            <summary>
            Compare the two specified <see cref="T:System.String"/>s using natural string comparison.
            </summary>
            <param name="x">The first <see cref="T:System.String"/>.</param>
            <param name="y">The second <see cref="T:System.String"/>.</param>
            <returns>A 32-bit signed integer indicating the natural relationship between the two comparands.</returns>
        </member>
        <member name="T:Nalco.Core.NumberFormatter">
            <summary>
            Custom formatter to round numbers based on given dimensions.
            </summary>
        </member>
        <member name="M:Nalco.Core.NumberFormatter.GetFormat(System.Type)">
            <summary>
            Returns an object that provides formatting services for the
            specified type.
            </summary>
            <param name="formatType">An object that specifies the type of format
            object to return.</param>
            <returns>An instance of the object specified by formatType, if the
            System.IFormatProvider implementation can supply that type of
            object; otherwise, null.</returns>
        </member>
        <member name="M:Nalco.Core.NumberFormatter.Format(System.String,System.Object,System.IFormatProvider)">
            <summary>
            Formats a value by placing K, M or other power of ten indicator
            after it. 1000 -> 1K
            </summary>
            <remarks>
            This function performs pourly when combined with other number
            formatters. For example:
            10000 in exponential -> 1e1K
            </remarks>
            <param name="format">The format for the number. May not specify
            hexidecimal format.</param>
            <param name="arg">An object to format.</param>
            <param name="formatProvider">An object that supplies format
            information about the current instance.</param>
            <returns>The string representation of the value of arg, formatted as
            specified by format and formatProvider.</returns>
        </member>
        <member name="M:Nalco.Core.NumberFormatter.FormatRound(System.String,System.Object,System.IFormatProvider)">
            <summary>
            Formats a value by placing k, M or other power of ten indicator
            after it. 1000 -> 1k
            </summary>
            <remarks>
            This function performs poorly when combined with other number
            formatters. For example:
            10000 in exponential -> 1e1k
            </remarks>
            <param name="format">The format for the number. May not specify
            hexidecimal format.</param>
            <param name="arg">An object to format.</param>
            <param name="formatProvider">An object that supplies format
            information about the current instance.</param>
            <returns>The string representation of the value of arg, formatted as
            specified by format and formatProvider.</returns>
        </member>
        <member name="M:Nalco.Core.NumberFormatter.IsNumericType(System.Type)">
            <summary>
            Returns whether the passed in type is a numeric type.
            </summary>
            <param name="t">Type to check.</param>
            <returns>True if passed in type is a numeric type.</returns>
        </member>
        <member name="T:Nalco.Core.PortableObjectExt">
            <summary>
            Portable extension methods for object class.
            </summary>
        </member>
        <member name="M:Nalco.Core.PortableObjectExt.GetValue(System.Object,System.String)">
            <summary>
            Gets the value of the property.
            </summary>
            <param name="obj">Object.</param>
            <param name="propertyName">Property name.</param>
            <returns>Value of the property.</returns>
        </member>
        <member name="M:Nalco.Core.PortableObjectExt.GetValue(System.Object,System.Reflection.PropertyInfo[])">
            <summary>
            Gets the value of the property.
            </summary>
            <param name="obj">Object.</param>
            <param name="properties">Properties.</param>
            <returns>Value of the property.</returns>
        </member>
        <member name="T:Nalco.Core.ProgressManager">
            <summary>
            Progress manager base class.
            </summary>
        </member>
        <member name="P:Nalco.Core.ProgressManager.Max">
            <summary>
            The maximum value of the progress.
            </summary>
        </member>
        <member name="P:Nalco.Core.ProgressManager.Min">
            <summary>
            The minimum value of the progress.
            </summary>
        </member>
        <member name="P:Nalco.Core.ProgressManager.Value">
            <summary>
            The current value of the progress.
            </summary>
        </member>
        <member name="P:Nalco.Core.ProgressManager.Message">
            <summary>
            The current message displayed.
            </summary>
        </member>
        <member name="P:Nalco.Core.ProgressManager.Indeterminate">
            <summary>
            Whether the progress bar is indeterminate.
            </summary>
        </member>
        <member name="P:Nalco.Core.ProgressManager.IsCancellable">
            <summary>
            Whether the progress can be cancelled.
            </summary>
        </member>
        <member name="P:Nalco.Core.ProgressManager.Cancelled">
            <summary>
            Cancelled flag.
            </summary>
        </member>
        <member name="M:Nalco.Core.ProgressManager.Increment">
            <summary>
            Increments the value by 1.
            </summary>
        </member>
        <member name="M:Nalco.Core.ProgressManager.Cancel">
            <summary>
            Cancels the progress.
            </summary>
        </member>
        <member name="E:Nalco.Core.ProgressManager.ProgressCancelled">
            <summary>
            Event raised when the progress has been cancelled.
            </summary>
        </member>
        <member name="M:Nalco.Core.ProgressManager.OnProgressCancelled">
            <summary>
            Occurs when the progess has been cancelled.
            </summary>
        </member>
        <member name="T:Nalco.Core.QuadraticResults">
            <summary>
            Results from MathExt.QuadraticFormula.
            </summary>
        </member>
        <member name="F:Nalco.Core.QuadraticResults.Answer1">
            <summary>
            First quadratic formula answer.
            </summary>
        </member>
        <member name="F:Nalco.Core.QuadraticResults.Answer2">
            <summary>
            Second quadratic formula answer.
            </summary>
        </member>
        <member name="F:Nalco.Core.QuadraticResults.Exceptions">
            <summary>
            Possible formula exceptions.
            </summary>
        </member>
        <member name="T:Nalco.Core.SignificantFiguresExt">
            <summary>
            Double extension methods for displaying significant figures
            </summary>
        </member>
        <member name="M:Nalco.Core.SignificantFiguresExt.ToSigFigString(System.Double,System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Format double to a string with given number of significant figures
            </summary>
            <param name="value">Double value</param>
            <param name="significantFigures">Number of significant figures</param>
            <param name="displayCulture">Optional display culture parameter</param>
            <returns>String with given number of significant figures</returns>
        </member>
        <member name="M:Nalco.Core.SignificantFiguresExt.RoundSignificantFigures(System.Double,System.Int32,System.Int32@)">
            <summary>
            Round double value to a given number of significant figures
            </summary>
            <param name="value">Double value</param>
            <param name="significantFigures">Number of significant figures</param>
            <param name="roundingPosition">Position at which rounding happened</param>
            <returns>Rounded value</returns>
        </member>
        <member name="T:Nalco.Core.SignificantFiguresFormatter">
            <summary>
            Custom formatter to round numbers to N significant figures
            </summary>
        </member>
        <member name="F:Nalco.Core.SignificantFiguresFormatter.KEY">
            <summary>
            String format extension for displaying values with N significant figures
            </summary>
        </member>
        <member name="P:Nalco.Core.SignificantFiguresFormatter.Instance">
            <summary>
            Singleton instance
            </summary>
        </member>
        <member name="M:Nalco.Core.SignificantFiguresFormatter.#ctor">
            <summary>
            default ctor
            </summary>
        </member>
        <member name="M:Nalco.Core.SignificantFiguresFormatter.#ctor(System.Globalization.CultureInfo)">
            <summary>
            ctor with display culture param
            </summary>
            <param name="displayCulture">Display culture</param>
        </member>
        <member name="M:Nalco.Core.SignificantFiguresFormatter.System#ICustomFormatter#Format(System.String,System.Object,System.IFormatProvider)">
            <summary>
            Rounds numbers to N significant figures
            </summary>
            <param name="format">:SigFig&lt;N&gt; 
            where N is the number of significant figures to riund to</param>
            <param name="arg">Object to format</param>
            <param name="formatProvider">Format provider</param>
            <returns>Formatted value</returns>
        </member>
        <member name="M:Nalco.Core.SignificantFiguresFormatter.System#IFormatProvider#GetFormat(System.Type)">
            <summary>
            Returns an object that provides formatting services for the
            specified type.
            </summary>
            <param name="formatType">An object that specifies the type of format
            object to return.</param>
            <returns>An instance of the object specified by formatType, if the
            System.IFormatProvider implementation can supply that type of
            object; otherwise, null.</returns>
        </member>
        <member name="T:Nalco.Core.StatusMessageEventArgs">
            <summary>
            Provides data for a message event.
            </summary>
        </member>
        <member name="P:Nalco.Core.StatusMessageEventArgs.Message">
            <summary>
            Status message.
            </summary>
        </member>
        <member name="M:Nalco.Core.StatusMessageEventArgs.#ctor(System.String)">
            <summary>
            Create a new StatusMessageEventArgs with the given message.
            </summary>
            <param name="message">Status message.</param>
        </member>
        <member name="T:Nalco.Core.StringBuilderExt">
            <summary>
            Extension methods for <see cref="T:System.Text.StringBuilder"/>.
            </summary>
        </member>
        <member name="M:Nalco.Core.StringBuilderExt.AppendWith(System.Text.StringBuilder,System.Char,System.Object)">
            <summary>
            Append to a <see cref="T:System.Text.StringBuilder"/> using the specified delimiter if the builder is not empty.
            </summary>
            <param name="sb">The <see cref="T:System.Text.StringBuilder"/> to append onto.</param>
            <param name="delimiter">The delimiter to use.</param>
            <param name="toAppend">The value to append.</param>
            <returns>A reference to the <paramref name="sb"/>.</returns>
        </member>
        <member name="M:Nalco.Core.StringBuilderExt.AppendWith(System.Text.StringBuilder,System.String,System.Object)">
            <summary>
            Append to a <see cref="T:System.Text.StringBuilder"/> using the specified delimiter if the builder is not empty.
            </summary>
            <param name="sb">The <see cref="T:System.Text.StringBuilder"/> to append onto.</param>
            <param name="delimiter">The delimiter to use.</param>
            <param name="toAppend">The value to append.</param>
            <returns>A reference to the <paramref name="sb"/>.</returns>
        </member>
        <member name="T:Nalco.Core.StringExt">
            <summary>
            Extension methods for string class.
            </summary>
        </member>
        <member name="M:Nalco.Core.StringExt.Elide(System.String)">
            <summary>
            Elide the given string.
            </summary>
            <param name="value">String to elide.</param>
            <returns>Elided string.</returns>
        </member>
        <member name="M:Nalco.Core.StringExt.Elide(System.String,System.Int32)">
            <summary>
            Elide the given string.
            </summary>
            <param name="value">String to elide.</param>
            <param name="maxLength">Maximum number of characters.</param>
            <returns>Elided string.</returns>
        </member>
        <member name="M:Nalco.Core.StringExt.Elide(System.String,System.Int32,Nalco.Core.ElideMode)">
            <summary>
            Elide the given string.
            </summary>
            <param name="value">String to elide.</param>
            <param name="maxLength">Maximum number of characters.</param>
            <param name="mode">The mode for selecting a position.</param>
            <returns>Elided string.</returns>
        </member>
        <member name="M:Nalco.Core.StringExt.RemovePrefix(System.String,System.String)">
            <summary>
            Remove the given prefix from the string.
            </summary>
            <param name="value">String.</param>
            <param name="prefix">Prefix to remove.</param>
            <returns>String without the given prefix.</returns>
        </member>
        <member name="M:Nalco.Core.StringExt.RemovePrefix(System.String,System.String,System.StringComparison)">
            <summary>
            Remove the given prefix from the string.
            </summary>
            <param name="value">String.</param>
            <param name="prefix">Prefix to remove.</param>
            <param name="comparisonType">Comparison type to use.</param>
            <returns>String without the given prefix.</returns>
        </member>
        <member name="M:Nalco.Core.StringExt.RemoveSuffix(System.String,System.String)">
            <summary>
            Remove the given suffix from the string.
            </summary>
            <param name="value">String.</param>
            <param name="suffix">Suffix to remove.</param>
            <returns>String without the given suffix.</returns>
        </member>
        <member name="M:Nalco.Core.StringExt.RemoveSuffix(System.String,System.String,System.StringComparison)">
            <summary>
            Remove the given suffix from the string.
            </summary>
            <param name="value">String.</param>
            <param name="suffix">Suffix to remove.</param>
            <param name="comparisonType">Comparison type to use.</param>
            <returns>String without the given suffix.</returns>
        </member>
        <member name="M:Nalco.Core.StringExt.HexToByteArray(System.String)">
            <summary>
            Converts a hexidecimal string to a byte array.
            </summary>
            <param name="hexidecimal">A hexidecimal string.</param>
            <returns>A byte array.</returns>
        </member>
        <member name="T:Nalco.Core.TypeExt">
            <summary>
            Extension methods for Type class.
            </summary>
        </member>
        <member name="M:Nalco.Core.TypeExt.DefaultValue(System.Type)">
            <summary>
            Retrieve the default value for the type.
            </summary>
            <param name="type">Type.</param>
            <returns>Default value.</returns>
        </member>
        <member name="T:Nalco.Core.UriExt">
            <summary>
            Extension methods for Uri class.
            </summary>
        </member>
        <member name="M:Nalco.Core.UriExt.Combine(System.Uri,System.String)">
            <summary>
            Combine a base uri and a relative uri.
            </summary>
            <param name="uri">Base uri. Assumed to be a folder.</param>
            <param name="relative">Relative uri to combine with the base.</param>
            <returns>New absolute uri containing the combination of the base and
            relative parts.</returns>
        </member>
        <member name="T:Nalco.Collections.Generic.ArrayEqualityComparer`1">
            <summary>
            Defines methods to support the comparison of Arrays for equality of
            their contents.
            </summary>
            <typeparam name="T">The type of objects to compare.</typeparam>
        </member>
        <member name="M:Nalco.Collections.Generic.ArrayEqualityComparer`1.#ctor">
            <summary>
            Create an ArrayEqualityComparer which will use the default comparer
            for the items in the array.
            </summary>
        </member>
        <member name="M:Nalco.Collections.Generic.ArrayEqualityComparer`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Create an ArrayEqualityComparer which will use the Specified
            comparer for the items in the array.
            </summary>
            <param name="itemComparer">The comparer to use for comparing items
            in the array.</param>
        </member>
        <member name="M:Nalco.Collections.Generic.ArrayEqualityComparer`1.Equals(`0[],`0[])">
            <summary>
            Determines whether the specified Arrays are equal.
            </summary>
            <param name="x">The first Array of type T to compare.</param>
            <param name="y">The second Array of type T to compare.</param>
            <returns>True if the objects are both null or if their contents
            are equal; otherwise, false. Order matters.</returns>
        </member>
        <member name="M:Nalco.Collections.Generic.ArrayEqualityComparer`1.GetHashCode(`0[])">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="obj">The System.Object for which a hash code is to be
            returned.</param>
            <returns>A hash code for the specified object.</returns>
        </member>
        <member name="T:Nalco.Collections.Generic.HierarchyNode`1">
            <summary>
            A generic wrapper class to create a hierarical structure. Traversals of
            the structure are performed with recursion and may not be performant
            for large collections.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Nalco.Collections.Generic.HierarchyNode`1.Value">
            <summary>
            The value held by this node.
            </summary>
        </member>
        <member name="P:Nalco.Collections.Generic.HierarchyNode`1.ChildrenNodes">
            <summary>
            The children nodes below this node in the hierarchy.
            Empty if leaf.
            </summary>
        </member>
        <member name="P:Nalco.Collections.Generic.HierarchyNode`1.Children">
            <summary>
            The Values of the childred of this node. Empty is leaf.
            </summary>
        </member>
        <member name="P:Nalco.Collections.Generic.HierarchyNode`1.DescendantNodesDescending">
            <summary>
            The Nodes of the descendants of this node in descending order.
            Empty if leaf.
            </summary>
        </member>
        <member name="P:Nalco.Collections.Generic.HierarchyNode`1.DescendantsDescending">
            <summary>
            The Values of the descendants of this node in descending order.
            Empty if leaf.
            </summary>
        </member>
        <member name="P:Nalco.Collections.Generic.HierarchyNode`1.ParentNode">
            <summary>
            The parent node of this node. Or null if root.
            </summary>
        </member>
        <member name="P:Nalco.Collections.Generic.HierarchyNode`1.Parent">
            <summary>
            The parent value of this node. Will throw exception if root.
            </summary>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="P:Nalco.Collections.Generic.HierarchyNode`1.IsRoot">
            <summary>
            Indicates if the this is the root node.
            </summary>
        </member>
        <member name="P:Nalco.Collections.Generic.HierarchyNode`1.AncestorNodesAscending">
            <summary>
            The ancestor nodes of this node, in ascending order. Empty if root.
            </summary>
        </member>
        <member name="P:Nalco.Collections.Generic.HierarchyNode`1.AncestorsAscending">
            <summary>
            The anscestor values of this node, in ascending order.
            Empty if root.
            </summary>
        </member>
        <member name="P:Nalco.Collections.Generic.HierarchyNode`1.IsLeaf">
            <summary>
            Indicates if this node is a leaf node.
            </summary>
        </member>
        <member name="M:Nalco.Collections.Generic.HierarchyNode`1.#ctor(`0,System.Collections.Generic.IEnumerable{Nalco.Collections.Generic.HierarchyNode{`0}})">
            <summary>
            Creates a HierarchyNode with a specific value and child nodes.
            </summary>
            <param name="value">The value of this node.</param>
            <param name="childNodes">The child nodes of this node.</param>
        </member>
        <member name="M:Nalco.Collections.Generic.HierarchyNode`1.#ctor(`0,Nalco.Collections.Generic.HierarchyNode{`0}[])">
            <summary>
            Creates a HierarchyNode with a specific value and child nodes.
            </summary>
            <param name="value">The value of this node.</param>
            <param name="childNodes">The child nodes of this node.</param>
        </member>
        <member name="M:Nalco.Collections.Generic.HierarchyNode`1.AddChild(Nalco.Collections.Generic.HierarchyNode{`0})">
            <summary>
            Add a child HierarchyNode to this HierarchyNode.
            </summary>
            <param name="newChild"></param>
        </member>
        <member name="T:Nalco.Collections.Generic.IDictionaryExt">
            <summary>
            Extension methods for IDictionary interface.
            </summary>
        </member>
        <member name="M:Nalco.Collections.Generic.IDictionaryExt.ItemOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Gets the element with the specified key or the default value of if
            no element exists.
            </summary>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            <param name="dictionary">Dictionary to get the value from.</param>
            <param name="key">The key of the element to get.</param>
            <returns>The element with the specified key or the default value.</returns>
            <exception cref="T:System.ArgumentNullException">dictionary is null.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:Nalco.Collections.Generic.IDictionaryExt.TryGetSetValue``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Gets the value associated with the specified key or sets a default
            value if one does not currently exist.
            </summary>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            <param name="dictionary">Dictionary to get the value from.</param>
            <param name="key">The key whose value to get.</param>
            <returns>The value associated with the specified key or a default
            value if one does not currently exist.</returns>
            <exception cref="T:System.ArgumentNullException">dictionary is null.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:Nalco.Collections.Generic.IDictionaryExt.TryGetSetValue``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``1})">
            <summary>
            Gets the value associated with the specified key or sets a default
            value if one does not currently exist.
            </summary>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            <param name="dictionary">Dictionary to get the value from.</param>
            <param name="key">The key whose value to get.</param>
            <param name="defaultValue">Function to return a new default value.</param>
            <returns>The value associated with the specified key or a new value
            if one does not currently exist.</returns>
            <exception cref="T:System.ArgumentNullException">dictionary is null.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:Nalco.Collections.Generic.IDictionaryExt.TryGetSetValue``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})">
            <summary>
            Gets the value associated with the specified key or sets a default
            value if one does not currently exist.
            </summary>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            <param name="dictionary">Dictionary to get the value from.</param>
            <param name="key">The key whose value to get.</param>
            <param name="defaultValue">Function to return a new default value.</param>
            <returns>The value associated with the specified key or a new value
            if one does not currently exist.</returns>
            <exception cref="T:System.ArgumentNullException">dictionary is null.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:Nalco.Collections.Generic.IDictionaryExt.TryGetSetMergeValue``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,System.Func{``1,``1,``1})">
            <summary>
            Gets the aggregated value associated with the specified key or sets
            the value if one does not currently exist.
            </summary>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            <param name="dictionary">Dictionary to get the value from.</param>
            <param name="key">The key whose value to get.</param>
            <param name="value">The value to set.</param>
            <param name="aggregator">Aggregator.</param>
            <returns>The aggregated value associated with the specified key or
            the value if one does not currently exist.</returns>
            <exception cref="T:System.ArgumentNullException">dictionary is null.</exception>
            <exception cref="T:System.ArgumentNullException">aggregator is null.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="T:Nalco.Collections.Generic.IEnumerableExt">
            <summary>
            Extension methods for IEnumerable interface.
            </summary>
        </member>
        <member name="M:Nalco.Collections.Generic.IEnumerableExt.DropLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Drop the last n elements from the enumeration.
            </summary>
            <typeparam name="T">The type of elements of source.</typeparam>
            <param name="source">Enumeration to return elements from.</param>
            <param name="count">Number of elements to drop from the end of the
            enumeration.</param>
            <returns>Enumeration that contains all but the last n elements of
            source.</returns>
        </member>
        <member name="M:Nalco.Collections.Generic.IEnumerableExt.Partition``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Boolean})">
            <summary>
            Partition elements into an enumeration of enumeration of elements
            based on a seperator function. The order of the elements is kept.
            </summary>
            <typeparam name="T">The type of the elements of source.</typeparam>
            <param name="source">Input enumeration to partition.</param>
            <param name="isPartition">A function(first, second) to determine
            if there is a partition between two elements.</param>
            <returns>Partitioned IEnumeration of elements.</returns>
        </member>
        <member name="M:Nalco.Collections.Generic.IEnumerableExt.NextPartition``1(System.Collections.Generic.IEnumerator{``0},System.Func{``0,``0,System.Boolean},System.Action)">
            <summary>
            Gets the next partition from an enumerator.
            </summary>
            <typeparam name="T">The type of the elements of source.</typeparam>
            <param name="enumerator">An enumerator to get elements from.
            Enumeration must have already started and must not have finished.
            </param>
            <param name="isPartition">A function(first, second) to determine
            if there is a partition between two elements.</param>
            <param name="finish">An action to call when the enumerator has no
            more elements and the last partition has been returned.</param>
            <returns>An enumeration over the next partition of elements.
            </returns>
        </member>
        <member name="M:Nalco.Collections.Generic.IEnumerableExt.Permute``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Generate all permutations of the given sequence.
            </summary>
            <typeparam name="T">The type of the elements of source.</typeparam>
            <param name="source">Input enumeration to permute.</param>
            <returns>Enumeration of permutations.</returns>
        </member>
        <member name="M:Nalco.Collections.Generic.IEnumerableExt.PermuteWorker``1(``0[],System.Int32)">
            <summary>
            Destructively permute the given array and return all permutations.
            </summary>
            <typeparam name="T">The type of the elements of values.</typeparam>
            <param name="values">Array of values to permute.</param>
            <param name="start">Index array to start permutation at.</param>
            <returns>Enumeration of permutations.</returns>
        </member>
        <member name="M:Nalco.Collections.Generic.IEnumerableExt.StandardDeviation(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Calculate the standard deviation of a sequence of doubles.
            </summary>
            <param name="source">Sequence of doubles to calculate the standard
            deviation of.</param>
            <returns>Standard deviation of the sequence.</returns>
        </member>
        <member name="M:Nalco.Collections.Generic.IEnumerableExt.StandardDeviation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
            <summary>
            Calculate the standard deviation of a sequence.
            </summary>
            <typeparam name="T">Source sequence type.</typeparam>
            <param name="source">Sequence to calculate the standard deviation
            of.</param>
            <param name="selector">A transform function to apply to each
            element.</param>
            <returns>Standard deviation of the sequence.</returns>
        </member>
        <member name="M:Nalco.Collections.Generic.IEnumerableExt.ContainsDuplicates``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines if a sequence contains duplicate items.
            </summary>
            <typeparam name="T">Source sequence type.</typeparam>
            <param name="source">Sequence to look at for duplicates.</param>
            <returns>True if there are duplicates. Otherwise false.</returns>
        </member>
        <member name="M:Nalco.Collections.Generic.IEnumerableExt.ContainsDuplicates``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Determines if a sequence contains duplicate items given a comparer.
            </summary>
            <typeparam name="T">Source sequence type.</typeparam>
            <param name="source">Sequence to look at for duplicates.</param>
            <param name="comparer">The IEqualityComparer implementation to use
            when comparing values in the sequence, or null to use the default
            EqualityComparer.</param>
            <returns>True if there are duplicates. Otherwise false.</returns>
        </member>
        <member name="T:Nalco.Collections.Generic.ReferenceEqualityComparer`1">
            <summary>
            Defines methods to support the comparison of objects for reference
            equality.
            </summary>
            <typeparam name="T">The type of objects to compare.</typeparam>
        </member>
        <member name="F:Nalco.Collections.Generic.ReferenceEqualityComparer`1.Instance">
            <summary>
            Public instance.
            </summary>
        </member>
        <member name="M:Nalco.Collections.Generic.ReferenceEqualityComparer`1.#cctor">
            <summary>
            Static constructor to initialize Instance field.
            </summary>
        </member>
        <member name="M:Nalco.Collections.Generic.ReferenceEqualityComparer`1.#ctor">
            <summary>
            Private constructor to block public instance creation.
            </summary>
        </member>
        <member name="M:Nalco.Collections.Generic.ReferenceEqualityComparer`1.Equals(`0,`0)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type T to compare.</param>
            <param name="y">The second object of type T to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Collections.Generic.ReferenceEqualityComparer`1.GetHashCode(`0)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="obj">The System.Object for which a hash code is to be
            returned.</param>
            <returns>A hash code for the specified object.</returns>
        </member>
        <member name="T:Nalco.ComponentModel.DataAnnotations.EditFormatAttribute">
            <summary>
            Specifies how data fields are formatted in edit mode.
            </summary>
        </member>
        <member name="P:Nalco.ComponentModel.DataAnnotations.EditFormatAttribute.EditFormatString">
            <summary>
            Edit format string.
            </summary>
        </member>
        <member name="M:Nalco.ComponentModel.DataAnnotations.EditFormatAttribute.#ctor(System.String)">
            <summary>
            Initializes a new EditFormatAttribute with the given edit format
            string.
            </summary>
            <param name="editFormatString">Edit format string.</param>
        </member>
        <member name="T:Nalco.Globalization.DateTimeFormatInfoExt">
            <summary>
            Extension methods for DateTimeFormatInfo class.
            </summary>
        </member>
        <member name="M:Nalco.Globalization.DateTimeFormatInfoExt.DayOfWeek(System.Globalization.DateTimeFormatInfo,System.Int32)">
            <summary>
            Calculate the nth day of the week based on the given
            DateTimeFormatInfo.
            </summary>
            <param name="dtfi">DateTime format info.</param>
            <param name="n">0-based day of the week to calculate.</param>
            <returns>Day of week.</returns>
        </member>
        <member name="M:Nalco.Globalization.DateTimeFormatInfoExt.StartOfWeek(System.Globalization.DateTimeFormatInfo,System.DateTime)">
            <summary>
            Calculate the start of the week based on the given
            DateTimeFormatInfo.
            </summary>
            <param name="dtfi">DateTime format info.</param>
            <param name="date">Current date.</param>
            <returns>Date that starts the week.</returns>
        </member>
        <member name="M:Nalco.Globalization.DateTimeFormatInfoExt.StartOfWeek(System.DayOfWeek,System.DateTime)">
            <summary>
            Calculate the start of the week based on the given start day.
            </summary>
            <param name="day">Day that starts the week.</param>
            <param name="date">Current date.</param>
            <returns>Date that starts the week.</returns>
        </member>
        <member name="T:Nalco.IO.StreamExt">
            <summary>
            Extension methods for Stream class.
            </summary>
        </member>
        <member name="M:Nalco.IO.StreamExt.Write(System.IO.Stream,System.IO.Stream)">
            <summary>
            Write the contents of input to output.
            </summary>
            <param name="output">Output stream to write to.</param>
            <param name="input">Input stream to read from.</param>
        </member>
        <member name="T:Nalco.IO.TextReaderExt">
            <summary>
            Extension methods for TextReader class.
            </summary>
        </member>
        <member name="M:Nalco.IO.TextReaderExt.GetLineCount(System.IO.TextReader)">
            <summary>
            Get the number of lines from the current position to the end of the
            TextReader.
            </summary>
            <param name="reader">Input stream to read from.</param>
            <returns>Number of lines.</returns>
        </member>
        <member name="T:Nalco.IO.TextWriterExt">
            <summary>
            Extension methods for TextWriter class.
            </summary>
        </member>
        <member name="M:Nalco.IO.TextWriterExt.WriteStream(System.IO.TextWriter,System.IO.TextReader)">
            <summary>
            Write the contents of input to output.
            </summary>
            <param name="output">Output stream to write to.</param>
            <param name="input">Input stream to read from.</param>
        </member>
        <member name="T:Nalco.Net.Mime.MediaTypeNames">
            <summary>
            Specifies media type information.
            </summary>
        </member>
        <member name="T:Nalco.Net.Mime.MediaTypeNames.Application">
            <summary>
            Specifies application media type information.
            </summary>
        </member>
        <member name="F:Nalco.Net.Mime.MediaTypeNames.Application.Excel">
            <summary>
            Microsoft Office Excel workbook.
            </summary>
        </member>
        <member name="F:Nalco.Net.Mime.MediaTypeNames.Application.ExcelExtension">
            <summary>
            Microsoft Office Excel workbook file extension.
            </summary>
        </member>
        <member name="F:Nalco.Net.Mime.MediaTypeNames.Application.ExcelMacroEnabled">
            <summary>
            Office Excel macro-enabled workbook.
            </summary>
        </member>
        <member name="F:Nalco.Net.Mime.MediaTypeNames.Application.ExcelMacroEnabledExtension">
            <summary>
            Office Excel macro-enabled workbook file extension.
            </summary>
        </member>
        <member name="F:Nalco.Net.Mime.MediaTypeNames.Application.PowerPoint">
            <summary>
            Microsoft Office PowerPoint presentation.
            </summary>
        </member>
        <member name="F:Nalco.Net.Mime.MediaTypeNames.Application.PowerPointExtension">
            <summary>
            Microsoft Office PowerPoint presentation file extension.
            </summary>
        </member>
        <member name="F:Nalco.Net.Mime.MediaTypeNames.Application.PowerPointMacroEnabled">
            <summary>
            Office PowerPoint macro-enabled presentation.
            </summary>
        </member>
        <member name="F:Nalco.Net.Mime.MediaTypeNames.Application.PowerPointMacroEnabledExtension">
            <summary>
            Office PowerPoint macro-enabled presentation file extension.
            </summary>
        </member>
        <member name="F:Nalco.Net.Mime.MediaTypeNames.Application.SAPShortcut">
            <summary>
            SAP shortcut.
            </summary>
        </member>
        <member name="F:Nalco.Net.Mime.MediaTypeNames.Application.SAPShortcutExtension">
            <summary>
            SAP shortcut file extension.
            </summary>
        </member>
        <member name="F:Nalco.Net.Mime.MediaTypeNames.Application.Word">
            <summary>
            Microsoft Office Word document.
            </summary>
        </member>
        <member name="F:Nalco.Net.Mime.MediaTypeNames.Application.WordExtension">
            <summary>
            Microsoft Office Word document file extension.
            </summary>
        </member>
        <member name="F:Nalco.Net.Mime.MediaTypeNames.Application.WordMacroEnabled">
            <summary>
            Office Word macro-enabled document.
            </summary>
        </member>
        <member name="F:Nalco.Net.Mime.MediaTypeNames.Application.WordMacroEnabledExtension">
            <summary>
            Office Word macro-enabled document file extension.
            </summary>
        </member>
        <member name="T:Nalco.Net.Mime.MediaTypeNames.Multipart">
            <summary>
            Specifies multipart media type information.
            </summary>
        </member>
        <member name="F:Nalco.Net.Mime.MediaTypeNames.Multipart.FormData">
            <summary>
            Internet media type form data.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.NumericalAnalysis.LinearRegression(System.Double[],System.Double[],System.Double@,System.Double@,System.Double@)">
            <summary>
            Performs a linear regression analysis on the passed x and y data.
            </summary>
            <param name="x">
            An array of independent values containing at least 2 elements.</param>
            <param name="y">
            An array of dependent values containing an element to correspond
            to each independent value.</param>
            <param name="m">Returns the slope of the regression curve.</param>
            <param name="b">Returns the y-intercept of the regression curve.</param>
            <param name="r">Returns the correlation coefficient of the regression.</param>
            <returns>True if the regression was successful, False otherwise.</returns>
            <remarks>
            This method does not work for a vertical line and will return false in that case.
            A vertical line is described by the equation X = C, where C is a constant.
            In this case the slope is infinite, the y-intercept is undefined.
            </remarks>
        </member>
        <member name="T:Nalco.Numerics.Conversion`1">
            <summary>
            Abstract base class to model conversions between subunits and perform
            string formatting. Conversion factors should be taken from NIST special
            publication 811 "Guide for the Use of the International System of Units
            (SI)" http://physics.nist.gov/Pubs/SP811/appenB9.html.
            </summary>
            <typeparam name="TSubunit">Subunit enumeration.</typeparam>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.#ctor(System.Resources.ResourceManager,System.Resources.ResourceManager)">
            <summary>
            Constructor.
            </summary>
            <param name="abbreviations">Resource manager that contains
            abbreviations.</param>
            <param name="descriptions">Resource manager that contains
            descriptions.</param>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.ToBase(System.Double,System.Int32)">
            <summary>
            Convert the value from the given subunit to the base subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="from">Original subunit.</param>
            <returns>Value in the base subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.ToBase(System.Double,`0)">
            <summary>
            Convert the value from the given subunit to the base subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="from">Original subunit.</param>
            <returns>Value in the base subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.FromBase(System.Double,System.Int32)">
            <summary>
            Convert the value from the base subunit to the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="to">Result subunit.</param>
            <returns>Value in the result subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.FromBase(System.Double,`0)">
            <summary>
            Convert the value from the base subunit to the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="to">Result subunit.</param>
            <returns>Value in the result subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.Convert(System.Double,System.Int32,System.Int32)">
            <summary>
            Convert the value from the given subunit to the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="from">Original subunit.</param>
            <param name="to">Result subunit.</param>
            <returns>Value in the result subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.Convert(System.Double,`0,`0)">
            <summary>
            Convert the value from the given subunit to the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="from">Original subunit.</param>
            <param name="to">Result subunit.</param>
            <returns>Value in the result subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.GetSubunits">
            <summary>
            Get a list of subunit details (Subunit, abbreviation, description).
            </summary>
            <returns>List of subunit details.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.SubunitName(System.Int32)">
            <summary>
            Get the name of the subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>The subunit name.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.Abbreviation(System.Int32)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.Abbreviation(`0)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.SubunitFromAbbreviation(System.String)">
            <summary>
            Subunit for the given abbreviation.
            </summary>
            <param name="abbreviation">Abbreviation.</param>
            <returns>Subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.SubunitTFromAbbreviation(System.String)">
            <summary>
            Subunit for the given abbreviation.
            </summary>
            <param name="abbreviation">Abbreviation.</param>
            <returns>Subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.Description(System.Int32)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.Description(`0)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.SubunitFromDescription(System.String)">
            <summary>
            Subunit for the given description.
            </summary>
            <param name="description">Description.</param>
            <returns>Subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.SubunitTFromDescription(System.String)">
            <summary>
            Subunit for the given description.
            </summary>
            <param name="description">Description.</param>
            <returns>Subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.ToString(System.Double,System.String,System.IFormatProvider)">
            <summary>
            Convert the value, given in the base unit, to a string based on the
            dimensional unit format string.
            </summary>
            <param name="value">Value, in the base unit.</param>
            <param name="format">Dimensional unit format string.
            "&lt;numeric format string&gt;[:&lt;subunit&gt;[:&lt;dimensional unit format string&gt;]]
            a - abbreviation
            d - description</param>
            <param name="provider">Format provider.</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.ToString(System.Double,System.String,System.IFormatProvider,`0)">
            <summary>
            Convert the value, given in the base unit, to a string based on the
            dimensional unit format string.
            </summary>
            <param name="value">Value, in the base unit.</param>
            <param name="format">Dimensional unit format string.
            "&lt;numeric format string&gt;[:&lt;subunit&gt;[:&lt;dimensional unit format string&gt;]]
            a - abbreviation
            d - description</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.ToString(System.Double,System.String,System.IFormatProvider,System.Int32)">
            <summary>
            Convert the value, given in the base unit, to a string based on the
            dimensional unit format string.
            </summary>
            <param name="value">Value, in the base unit.</param>
            <param name="format">Dimensional unit format string.
            "&lt;numeric format string&gt;[:&lt;subunit&gt;[:&lt;dimensional unit format string&gt;]]
            a - abbreviation
            d - description</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a number to its
            double-precision floating-point number equivalent in the base
            subunit.
            </summary>
            <param name="s">A string that contains a number to convert.</param>
            <param name="format">Dimensional unit format string.
            "&lt;numeric format string&gt;[:&lt;subunit&gt;[:&lt;dimensional unit format string&gt;]]
            a - abbreviation
            d - description</param>
            <param name="provider">Format provider.</param>
            <returns>A double-precision floating-point number in the base
            subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.Parse(System.String,System.String,System.IFormatProvider,`0)">
            <summary>
            Converts the string representation of a number to its
            double-precision floating-point number equivalent in the base
            subunit.
            </summary>
            <param name="s">A string that contains a number to convert.</param>
            <param name="format">Dimensional unit format string.
            "&lt;numeric format string&gt;[:&lt;subunit&gt;[:&lt;dimensional unit format string&gt;]]
            a - abbreviation
            d - description</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A double-precision floating-point number in the base
            subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.Parse(System.String,System.String,System.IFormatProvider,System.Int32)">
            <summary>
            Converts the string representation of a number to its
            double-precision floating-point number equivalent in the base
            subunit.
            </summary>
            <param name="s">A string that contains a number to convert.</param>
            <param name="format">Dimensional unit format string.
            "&lt;numeric format string&gt;[:&lt;subunit&gt;[:&lt;dimensional unit format string&gt;]]
            a - abbreviation
            d - description</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A double-precision floating-point number in the base
            subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.TryParse(System.String,System.String,System.IFormatProvider,System.Double@)">
            <summary>
            Converts the string representation of a number to its
            double-precision floating-point number equivalent in the base
            subunit. A return value indicates whether the conversion succeeded
            or failed.
            </summary>
            <param name="s">A string that contains a number to convert.</param>
            <param name="format">Dimensional unit format string.
            "&lt;numeric format string&gt;[:&lt;subunit&gt;[:&lt;dimensional unit format string&gt;]]
            a - abbreviation
            d - description</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the
            double-precision floating-point number, or zero if the conversion
            failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.TryParse(System.String,System.String,System.IFormatProvider,`0,System.Double@)">
            <summary>
            Converts the string representation of a number to its
            double-precision floating-point number equivalent in the base
            subunit. A return value indicates whether the conversion succeeded
            or failed.
            </summary>
            <param name="s">A string that contains a number to convert.</param>
            <param name="format">Dimensional unit format string.
            "&lt;numeric format string&gt;[:&lt;subunit&gt;[:&lt;dimensional unit format string&gt;]]
            a - abbreviation
            d - description</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the
            double-precision floating-point number, or zero if the conversion
            failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.TryParse(System.String,System.String,System.IFormatProvider,System.Int32,System.Double@)">
            <summary>
            Converts the string representation of a number to its
            double-precision floating-point number equivalent in the base
            subunit. A return value indicates whether the conversion succeeded
            or failed.
            </summary>
            <param name="s">A string that contains a number to convert.</param>
            <param name="format">Dimensional unit format string.
            "&lt;numeric format string&gt;[:&lt;subunit&gt;[:&lt;dimensional unit format string&gt;]]
            a - abbreviation
            d - description</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the
            double-precision floating-point number, or zero if the conversion
            failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.Conversion`1.GetFormatString(System.String,System.Int32)">
            <summary>
            Expand the dimensional unit format string.
            </summary>
            <param name="format">Dimensional unit format string.</param>
            <param name="subunit">Subunit to expand abbreviation or description.</param>
            <returns>Expanded format string.</returns>
        </member>
        <member name="T:Nalco.Numerics.Dimensions">
            <summary>
            Encapsulates the the seven base SI units from which all other units are
            derived.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.Dimensions.Length">
            <summary>
            Basis: meter.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.Dimensions.Mass">
            <summary>
            Basis: kilogram.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.Dimensions.Time">
            <summary>
            Basis: second.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.Dimensions.Temperature">
            <summary>
            Basis: kelvin.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.Dimensions.Current">
            <summary>
            Basis: ampere.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.Dimensions.Quantity">
            <summary>
            Basis: mole.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.Dimensions.Luminosity">
            <summary>
            Basis: candela.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.Dimensions.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor a new Dimensions with the given components.
            </summary>
            <param name="length">Length (meter).</param>
            <param name="mass">Mass (kilogram).</param>
            <param name="time">Time (second).</param>
            <param name="temperature">Temperature (kelvin).</param>
            <param name="current">Current (ampere).</param>
            <param name="quantity">Quantity (mole).</param>
            <param name="luminosity">Luminosity (candela).</param>
        </member>
        <member name="M:Nalco.Numerics.Dimensions.#ctor(Nalco.Numerics.Dimensions)">
            <summary>
            Copy constructor.
            </summary>
            <param name="d">Dimensions to copy from.</param>
        </member>
        <member name="M:Nalco.Numerics.Dimensions.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.Dimensions.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current
            Dimensions.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.Dimensions.op_Equality(Nalco.Numerics.Dimensions,Nalco.Numerics.Dimensions)">
            <summary>
            Determines whether the two Dimensions are equal.
            </summary>
            <param name="l">Left Dimensions.</param>
            <param name="r">Right Dimensions.</param>
            <returns>True if all components are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.Dimensions.op_Inequality(Nalco.Numerics.Dimensions,Nalco.Numerics.Dimensions)">
            <summary>
            Determines whether the two Dimenions are not equal.
            </summary>
            <param name="l">Left Dimensions.</param>
            <param name="r">Right Dimensions.</param>
            <returns>True if at least one component is not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.Dimensions.op_Addition(Nalco.Numerics.Dimensions,Nalco.Numerics.Dimensions)">
            <summary>
            Add two dimensions together. Used when multiplying two scalars.
            </summary>
            <param name="l">Left Dimensions.</param>
            <param name="r">Right Dimensions.</param>
            <returns>Sum of the two Dimensions.</returns>
        </member>
        <member name="M:Nalco.Numerics.Dimensions.op_UnaryNegation(Nalco.Numerics.Dimensions)">
            <summary>
            Negate Dimensions.
            </summary>
            <param name="l">Left Dimensions.</param>
            <returns>Negative Dimensions.</returns>
        </member>
        <member name="M:Nalco.Numerics.Dimensions.op_Subtraction(Nalco.Numerics.Dimensions,Nalco.Numerics.Dimensions)">
            <summary>
            Subtract two Dimensions. Used when dividing two scalars.
            </summary>
            <param name="l">Left Dimensions.</param>
            <param name="r">Right Dimensions.</param>
            <returns>Difference of the two Dimensions.</returns>
        </member>
        <member name="M:Nalco.Numerics.Dimensions.op_Multiply(Nalco.Numerics.Dimensions,System.Int32)">
            <summary>
            Multiply the Dimension. Used when raising a scalar to a power.
            </summary>
            <param name="l">Left Dimensions.</param>
            <param name="r">Right Dimensions.</param>
            <returns>Product of the two Dimensions.</returns>
        </member>
        <member name="M:Nalco.Numerics.Dimensions.op_Division(Nalco.Numerics.Dimensions,System.Int32)">
            <summary>
            Divide the Dimension. Used when taking the root of a scalar.
            </summary>
            <param name="l">Left Dimensions.</param>
            <param name="r">Right Dimensions.</param>
            <returns>Quotient of the two Dimensions.</returns>
        </member>
        <member name="T:Nalco.Numerics.IConversion">
            <summary>
            Conversion interface.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.IConversion.ToBase(System.Double,System.Int32)">
            <summary>
            Convert the value from the given subunit to the base subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="from">Original subunit.</param>
            <returns>Value in the base subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.IConversion.FromBase(System.Double,System.Int32)">
            <summary>
            Convert the value from the base subunit to the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="to">Result subunit.</param>
            <returns>Value in the result subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.IConversion.Convert(System.Double,System.Int32,System.Int32)">
            <summary>
            Convert the value from the given subunit to the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="from">Original subunit.</param>
            <param name="to">Result subunit.</param>
            <returns>Value in the result subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.IConversion.GetSubunits">
            <summary>
            Get a list of subunit details (Subunit, abbreviation, description).
            </summary>
            <returns>List of subunit details.</returns>
        </member>
        <member name="M:Nalco.Numerics.IConversion.SubunitName(System.Int32)">
            <summary>
            Get the name of the subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>The subunit name.</returns>
        </member>
        <member name="M:Nalco.Numerics.IConversion.Abbreviation(System.Int32)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.IConversion.SubunitFromAbbreviation(System.String)">
            <summary>
            Subunit for the given abbreviation.
            </summary>
            <param name="abbreviation">Abbreviation.</param>
            <returns>Subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.IConversion.Description(System.Int32)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.IConversion.SubunitFromDescription(System.String)">
            <summary>
            Subunit for the given description.
            </summary>
            <param name="description">Description.</param>
            <returns>Subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.IConversion.ToString(System.Double,System.String,System.IFormatProvider)">
            <summary>
            Convert the value, given in the base unit, to a string based on the
            dimensional unit format string.
            </summary>
            <param name="value">Value, in the base unit.</param>
            <param name="format">Dimensional unit format string.
            "&lt;numeric format string&gt;[:&lt;subunit&gt;[:&lt;dimensional unit format string&gt;]]
            a - abbreviation
            d - description</param>
            <param name="provider">Format provider.</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:Nalco.Numerics.IConversion.ToString(System.Double,System.String,System.IFormatProvider,System.Int32)">
            <summary>
            Convert the value, given in the base unit, to a string based on the
            dimensional unit format string.
            </summary>
            <param name="value">Value, in the base unit.</param>
            <param name="format">Dimensional unit format string.
            "&lt;numeric format string&gt;[:&lt;subunit&gt;[:&lt;dimensional unit format string&gt;]]
            a - abbreviation
            d - description</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:Nalco.Numerics.IConversion.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a number to its
            double-precision floating-point number equivalent in the base
            subunit.
            </summary>
            <param name="s">A string that contains a number to convert.</param>
            <param name="format">Dimensional unit format string.
            "&lt;numeric format string&gt;[:&lt;subunit&gt;[:&lt;dimensional unit format string&gt;]]
            a - abbreviation
            d - description</param>
            <param name="provider">Format provider.</param>
            <returns>A double-precision floating-point number in the base
            subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.IConversion.Parse(System.String,System.String,System.IFormatProvider,System.Int32)">
            <summary>
            Converts the string representation of a number to its
            double-precision floating-point number equivalent in the base
            subunit.
            </summary>
            <param name="s">A string that contains a number to convert.</param>
            <param name="format">Dimensional unit format string.
            "&lt;numeric format string&gt;[:&lt;subunit&gt;[:&lt;dimensional unit format string&gt;]]
            a - abbreviation
            d - description</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A double-precision floating-point number in the base
            subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.IConversion.TryParse(System.String,System.String,System.IFormatProvider,System.Double@)">
            <summary>
            Converts the string representation of a number to its
            double-precision floating-point number equivalent in the base
            subunit. A return value indicates whether the conversion succeeded
            or failed.
            </summary>
            <param name="s">A string that contains a number to convert.</param>
            <param name="format">Dimensional unit format string.
            "&lt;numeric format string&gt;[:&lt;subunit&gt;[:&lt;dimensional unit format string&gt;]]
            a - abbreviation
            d - description</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the
            double-precision floating-point number, or zero if the conversion
            failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.IConversion.TryParse(System.String,System.String,System.IFormatProvider,System.Int32,System.Double@)">
            <summary>
            Converts the string representation of a number to its
            double-precision floating-point number equivalent in the base
            subunit. A return value indicates whether the conversion succeeded
            or failed.
            </summary>
            <param name="s">A string that contains a number to convert.</param>
            <param name="format">Dimensional unit format string.
            "&lt;numeric format string&gt;[:&lt;subunit&gt;[:&lt;dimensional unit format string&gt;]]
            a - abbreviation
            d - description</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the
            double-precision floating-point number, or zero if the conversion
            failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="T:Nalco.Numerics.IScalar`1">
            <summary>
            Scalar interface. Provides access to the scalar's value in each of the
            enumerated subunits.
            </summary>
            <typeparam name="TSubunit">Subunit.</typeparam>
        </member>
        <member name="P:Nalco.Numerics.IScalar`1.Item(`0)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.IScalar`1.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.IScalar`1.Abbreviation(`0)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.IScalar`1.Description(`0)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="T:Nalco.Numerics.ProportionalConversion`1">
            <summary>
            Conversion implementation for units where all subunits are a factor of
            the base unit.
            </summary>
            <typeparam name="TSubunit">Subunit.</typeparam>
        </member>
        <member name="M:Nalco.Numerics.ProportionalConversion`1.#ctor(System.Resources.ResourceManager,System.Resources.ResourceManager,System.Double[])">
            <summary>
            Constructor.
            </summary>
            <param name="abbreviations">Resource manager that contains
            abbreviations.</param>
            <param name="descriptions">Resource manager that contains
            descriptions.</param>
            <param name="conversions">Conversion factors for each subunit. The
            base unit's conversion should be 1.0.</param>
        </member>
        <member name="M:Nalco.Numerics.ProportionalConversion`1.ToBase(System.Double,System.Int32)">
            <summary>
            Convert the value from the given subunit to the base subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="from">Original subunit.</param>
            <returns>Value in the base subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.ProportionalConversion`1.FromBase(System.Double,System.Int32)">
            <summary>
            Convert the value from the base subunit to the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="to">Result subunit.</param>
            <returns>Value in the result subunit.</returns>
        </member>
        <member name="T:Nalco.Numerics.Scalar">
            <summary>
            Weakly typed scalar that can be any unit.
            </summary>
        </member>
        <member name="T:Nalco.Numerics.Scalar.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.Scalar.Subunit.None">
            <summary>
            Default non-defined subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.Scalar.Value">
            <summary>
            Scalar value.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.Scalar.Dimensions">
            <summary>
            Scalar dimensions.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.Scalar.#ctor(System.Double,Nalco.Numerics.Dimensions)">
            <summary>
            Constructor. Internal so that weakly typed Scalars can only be
            accessed by combining strongly typed scalars.
            </summary>
            <param name="value">Value.</param>
            <param name="dimensions">Dimensions.</param>
        </member>
        <member name="P:Nalco.Numerics.Scalar.Item(Nalco.Numerics.Scalar.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.Scalar.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.Scalar.Abbreviation(Nalco.Numerics.Scalar.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.Description(Nalco.Numerics.Scalar.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.CompareTo(Nalco.Numerics.Scalar)">
            <summary>
            Compares the current Scalar with another Scalar.
            </summary>
            <param name="other">Scalar to compare with this Scalar.</param>
            <returns>Less than zero when this Scalar is less than the other
            parameter.
            Zero when this Scalar is equal to the other parameter.
            Greater than zero when this Scalar is greater than the other
            parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Scalar.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.Abs(Nalco.Numerics.Scalar)">
            <summary>
            Returns the absolute value of a Scalar.
            </summary>
            <param name="value">A Scalar.</param>
            <returns>A Scalar that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_Equality(Nalco.Numerics.Scalar,Nalco.Numerics.Scalar)">
            <summary>
            Determines whether the two Scalars are equal.
            </summary>
            <param name="l">Left Scalar.</param>
            <param name="r">Right Scalar.</param>
            <returns>True if both values and dimensions are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_Inequality(Nalco.Numerics.Scalar,Nalco.Numerics.Scalar)">
            <summary>
            Determines whether two Scalars are not equal.
            </summary>
            <param name="l">Left Scalar.</param>
            <param name="r">Right Scalar.</param>
            <returns>True if values or dimensions are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_LessThan(Nalco.Numerics.Scalar,Nalco.Numerics.Scalar)">
            <summary>
            Determines if the left Scalar is less than the right Scalar.
            </summary>
            <param name="l">Left Scalar.</param>
            <param name="r">Right Scalar.</param>
            <exception cref="T:System.ArgumentException">Dimensions are not equal.</exception>
            <returns>True if the left Scalar is less than the right Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_LessThanOrEqual(Nalco.Numerics.Scalar,Nalco.Numerics.Scalar)">
            <summary>
            Determines if the left Scalar is less than or equal to the right
            Scalar.
            </summary>
            <param name="l">Left Scalar.</param>
            <param name="r">Right Scalar.</param>
            <exception cref="T:System.ArgumentException">Dimensions are not equal.</exception>
            <returns>True if the left Scalar is less than or equal to the right
            Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_GreaterThanOrEqual(Nalco.Numerics.Scalar,Nalco.Numerics.Scalar)">
            <summary>
            Determines if the left Scalar is greater than or equal to the right
            Scalar.
            </summary>
            <param name="l">Left Scalar.</param>
            <param name="r">Right Scalar.</param>
            <exception cref="T:System.ArgumentException">Dimensions are not equal.</exception>
            <returns>True if the left Scalar is greater than or equal to the
            right Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_GreaterThan(Nalco.Numerics.Scalar,Nalco.Numerics.Scalar)">
            <summary>
            Determines if the left Scalar is greater than the right Scalar.
            </summary>
            <param name="l">Left Scalar.</param>
            <param name="r">Right Scalar.</param>
            <exception cref="T:System.ArgumentException">Dimensions are not equal.</exception>
            <returns>True if the left Scalar is greater than the right Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_Addition(Nalco.Numerics.Scalar,Nalco.Numerics.Scalar)">
            <summary>
            Add two Scalars together.
            </summary>
            <param name="l">Left Scalar.</param>
            <param name="r">Right Scalar.</param>
            <exception cref="T:System.ArgumentException">Dimensions are not equal.</exception>
            <returns>Sum of Scalars.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_UnaryNegation(Nalco.Numerics.Scalar)">
            <summary>
            Negate a Scalar.
            </summary>
            <param name="l">Left Scalar.</param>
            <returns>Negative Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_Subtraction(Nalco.Numerics.Scalar,Nalco.Numerics.Scalar)">
            <summary>
            Subtract two Scalars.
            </summary>
            <param name="l">Left Scalar.</param>
            <param name="r">Right Scalar.</param>
            <exception cref="T:System.ArgumentException">Dimensions are not equal.</exception>
            <returns>Difference of Scalars.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_Multiply(Nalco.Numerics.Scalar,System.Double)">
            <summary>
            Multiply a Scalar with a double.
            </summary>
            <param name="l">Left Scalar.</param>
            <param name="r">Double value.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_Multiply(System.Double,Nalco.Numerics.Scalar)">
            <summary>
            Multiply a Scalar with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Scalar.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_Multiply(Nalco.Numerics.Scalar,Nalco.Numerics.Scalar)">
            <summary>
            Multiply two Scalars together.
            </summary>
            <param name="l">Left Scalar.</param>
            <param name="r">Right Scalar.</param>
            <returns>Product of two Scalars.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_Division(Nalco.Numerics.Scalar,System.Double)">
            <summary>
            Divide a Scalar by a double.
            </summary>
            <param name="l">Left Scalar.</param>
            <param name="r">Double value.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_Division(System.Double,Nalco.Numerics.Scalar)">
            <summary>
            Divide a double by a Scalar to get the reciprocal.
            </summary>
            <param name="l">Left double.</param>
            <param name="r">Right Scalar.</param>
            <returns>Reciprocal scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_Division(Nalco.Numerics.Scalar,Nalco.Numerics.Scalar)">
            <summary>
            Divide two Scalars.
            </summary>
            <param name="l">Left Scalar.</param>
            <param name="r">Right Scalar.</param>
            <returns>Ratio of two Scalars.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_Modulus(Nalco.Numerics.Scalar,Nalco.Numerics.Scalar)">
            <summary>
            Divide a Scalar by another Scalar and return the remainder.
            </summary>
            <param name="l">Left Scalar.</param>
            <param name="r">Right Scalar.</param>
            <returns>Remainder after a Scalar is divided by a Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.op_ExclusiveOr(Nalco.Numerics.Scalar,System.Int32)">
            <summary>
            Raise a Scalar to a power.
            </summary>
            <param name="l">Left Scalar.</param>
            <param name="r">Right Scalar.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.Scalar.Root(System.Int32)">
            <summary>
            Take the root of a Scalar.
            </summary>
            <param name="r">Double root.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Abbreviations">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.acceleration_of_free_fall_standard">
            <summary>
              Looks up a localized string similar to g(n).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.acre">
            <summary>
              Looks up a localized string similar to ac.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.amp">
            <summary>
              Looks up a localized string similar to A.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Angstrom">
            <summary>
              Looks up a localized string similar to Å.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.astronomica_unit">
            <summary>
              Looks up a localized string similar to au.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.atmosphere">
            <summary>
              Looks up a localized string similar to atm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.attogram">
            <summary>
              Looks up a localized string similar to ag.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.attogram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to ag/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.attogram_per_second">
            <summary>
              Looks up a localized string similar to ag/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.attohertz">
            <summary>
              Looks up a localized string similar to aHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.attojoule_per_square_meter">
            <summary>
              Looks up a localized string similar to aJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.attometer">
            <summary>
              Looks up a localized string similar to am.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.attometer_per_second">
            <summary>
              Looks up a localized string similar to am/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.attometer_per_second_squared">
            <summary>
              Looks up a localized string similar to am/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.attonewton">
            <summary>
              Looks up a localized string similar to aN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.attopascal">
            <summary>
              Looks up a localized string similar to aPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.attosecond">
            <summary>
              Looks up a localized string similar to as.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.bar">
            <summary>
              Looks up a localized string similar to bar.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_IT">
            <summary>
              Looks up a localized string similar to Btu(IT).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_IT_foot_per_hour_square_foot_Fahrenheit">
            <summary>
              Looks up a localized string similar to (Btu(IT) · ft)/(h · ft² · °F).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_IT_inch_per_hour_square_foot_Fahrenheit">
            <summary>
              Looks up a localized string similar to (Btu(IT) · in)/(h · ft² · °F).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_IT_inch_per_second_square_foot_Fahrenheit">
            <summary>
              Looks up a localized string similar to (Btu(IT) · in)/(s · ft² · °F).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_IT_per_Fahrenheit">
            <summary>
              Looks up a localized string similar to Btu(IT)/°F.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_IT_per_hour">
            <summary>
              Looks up a localized string similar to Btu(IT)/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_IT_per_hour_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to Btu(IT)/h/RT.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_IT_per_hour_square_foot_Fahrenheit">
            <summary>
              Looks up a localized string similar to Btu(IT)/(h · ft² · °F).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_IT_per_kilowatt_hour">
            <summary>
              Looks up a localized string similar to Btu(IT)/kWh.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_IT_per_pound">
            <summary>
              Looks up a localized string similar to Btu(IT)/lb.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_IT_per_pound_Fahrenheit">
            <summary>
              Looks up a localized string similar to Btu(IT)/(lb · °F).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_IT_per_pound_Rankine">
            <summary>
              Looks up a localized string similar to Btu(IT)/(lb · °R).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_IT_per_Rankine">
            <summary>
              Looks up a localized string similar to Btu(IT)/°R.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_IT_per_second">
            <summary>
              Looks up a localized string similar to Btu(IT)/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_IT_per_second_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to Btu(IT)/s/RT.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_IT_per_square_foot">
            <summary>
              Looks up a localized string similar to Btu(IT)/ft².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_th">
            <summary>
              Looks up a localized string similar to Btu.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_th_foot_per_hour_square_foot_Fahrenheit">
            <summary>
              Looks up a localized string similar to (Btu · ft)/(h · ft² · °F).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_th_inch_per_hour_square_foot_Fahrenheit">
            <summary>
              Looks up a localized string similar to (Btu · in)/(h · ft² · °F).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_th_inch_per_second_square_foot_Fahrenheit">
            <summary>
              Looks up a localized string similar to (Btu · in)/(s · ft² · °F).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_th_per_Fahrenheit">
            <summary>
              Looks up a localized string similar to Btu/°F.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_th_per_hour">
            <summary>
              Looks up a localized string similar to Btu/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_th_per_hour_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to Btu/h/RT.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_th_per_minute">
            <summary>
              Looks up a localized string similar to Btu/min.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_th_per_pound">
            <summary>
              Looks up a localized string similar to Btu/lb.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_th_per_pound_Fahrenheit">
            <summary>
              Looks up a localized string similar to Btu/(lb · °F).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_th_per_pound_Rankine">
            <summary>
              Looks up a localized string similar to Btu/(lb · °R).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_th_per_Rankine">
            <summary>
              Looks up a localized string similar to Btu/°R.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_th_per_second">
            <summary>
              Looks up a localized string similar to Btu/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_th_per_second_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to Btu/s/RT.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_th_per_square_foot">
            <summary>
              Looks up a localized string similar to Btu/ft².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Btu_th_per_year">
            <summary>
              Looks up a localized string similar to Btu/y.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.bushel">
            <summary>
              Looks up a localized string similar to bu.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.calorie_IT">
            <summary>
              Looks up a localized string similar to cal(IT).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.calorie_IT_per_gram">
            <summary>
              Looks up a localized string similar to cal(IT)/g.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.calorie_IT_per_gram_Celsius">
            <summary>
              Looks up a localized string similar to cal(IT)/(g · °C).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.calorie_IT_per_gram_kelvin">
            <summary>
              Looks up a localized string similar to cal(IT)/(g · K).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.calorie_IT_per_square_centimeter">
            <summary>
              Looks up a localized string similar to cal(IT)/cm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.calorie_th">
            <summary>
              Looks up a localized string similar to cal.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.calorie_th_per_centimeter_second_Celsius">
            <summary>
              Looks up a localized string similar to cal/(cm · s · °C).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.calorie_th_per_gram">
            <summary>
              Looks up a localized string similar to cal/g.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.calorie_th_per_gram_Celsius">
            <summary>
              Looks up a localized string similar to cal/(g · °C).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.calorie_th_per_gram_kelvin">
            <summary>
              Looks up a localized string similar to cal/(g · K).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.calorie_th_per_minute">
            <summary>
              Looks up a localized string similar to cal/min.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.calorie_th_per_second">
            <summary>
              Looks up a localized string similar to cal/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.calorie_th_per_square_centimeter">
            <summary>
              Looks up a localized string similar to cal/cm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.carat">
            <summary>
              Looks up a localized string similar to CD.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Celsius">
            <summary>
              Looks up a localized string similar to °C.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Celsius_per_kilometer">
            <summary>
              Looks up a localized string similar to °C/km.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Celsius_per_meter">
            <summary>
              Looks up a localized string similar to °C/m.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.centigram">
            <summary>
              Looks up a localized string similar to cg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.centigram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to cg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.centigram_per_second">
            <summary>
              Looks up a localized string similar to cg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.centihertz">
            <summary>
              Looks up a localized string similar to cHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.centijoule_per_square_meter">
            <summary>
              Looks up a localized string similar to cJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.centimeter">
            <summary>
              Looks up a localized string similar to cm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.centimeter_per_day">
            <summary>
              Looks up a localized string similar to cm/day.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.centimeter_per_second">
            <summary>
              Looks up a localized string similar to cm/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.centimeter_per_second_squared">
            <summary>
              Looks up a localized string similar to cm/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.centimeter_per_year">
            <summary>
              Looks up a localized string similar to cm/year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.centinewton">
            <summary>
              Looks up a localized string similar to cN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.centipascal">
            <summary>
              Looks up a localized string similar to cPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.centipoise">
            <summary>
              Looks up a localized string similar to cP.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.centisecond">
            <summary>
              Looks up a localized string similar to cs.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.chain">
            <summary>
              Looks up a localized string similar to Ch.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cord">
            <summary>
              Looks up a localized string similar to cord.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_attometer">
            <summary>
              Looks up a localized string similar to am³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_attometer_per_second">
            <summary>
              Looks up a localized string similar to am³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_centimeter">
            <summary>
              Looks up a localized string similar to cm³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_centimeter_per_gram">
            <summary>
              Looks up a localized string similar to cm³/g.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_centimeter_per_second">
            <summary>
              Looks up a localized string similar to cm³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_decameter">
            <summary>
              Looks up a localized string similar to dam³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_decameter_per_second">
            <summary>
              Looks up a localized string similar to dam³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_decimeter">
            <summary>
              Looks up a localized string similar to dm³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_decimeter_per_second">
            <summary>
              Looks up a localized string similar to dm³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_exameter">
            <summary>
              Looks up a localized string similar to Em³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_exameter_per_second">
            <summary>
              Looks up a localized string similar to Em³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_femtometer">
            <summary>
              Looks up a localized string similar to fm³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_femtometer_per_second">
            <summary>
              Looks up a localized string similar to fm³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_foot">
            <summary>
              Looks up a localized string similar to ft³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_foot_per_grain">
            <summary>
              Looks up a localized string similar to ft³/gr.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_foot_per_hour">
            <summary>
              Looks up a localized string similar to ft³/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_foot_per_minute">
            <summary>
              Looks up a localized string similar to ft³/min.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_foot_per_pound">
            <summary>
              Looks up a localized string similar to ft³/lb.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_foot_per_second">
            <summary>
              Looks up a localized string similar to ft³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_foot_per_slug">
            <summary>
              Looks up a localized string similar to ft³/slug.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_gigameter">
            <summary>
              Looks up a localized string similar to Gm³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_gigameter_per_second">
            <summary>
              Looks up a localized string similar to Gm³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_hectometer">
            <summary>
              Looks up a localized string similar to hm³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_hectometer_per_second">
            <summary>
              Looks up a localized string similar to hs³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_inch">
            <summary>
              Looks up a localized string similar to in³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_inch_per_minute">
            <summary>
              Looks up a localized string similar to in³/min.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_inch_per_ounce">
            <summary>
              Looks up a localized string similar to in³/oz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_inch_per_pound">
            <summary>
              Looks up a localized string similar to in³/lb.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_kilometer">
            <summary>
              Looks up a localized string similar to km³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_kilometer_per_second">
            <summary>
              Looks up a localized string similar to km³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_megameter">
            <summary>
              Looks up a localized string similar to Mm³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_megameter_per_second">
            <summary>
              Looks up a localized string similar to Mm³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_meter">
            <summary>
              Looks up a localized string similar to m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_meter_per_day">
            <summary>
              Looks up a localized string similar to m³/d.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_meter_per_gram">
            <summary>
              Looks up a localized string similar to m³/g.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_meter_per_hour">
            <summary>
              Looks up a localized string similar to m³/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_meter_per_hour_per_cubic_meter">
            <summary>
              Looks up a localized string similar to m³/h/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_meter_per_hour_per_square_meter">
            <summary>
              Looks up a localized string similar to m³/h/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_meter_per_kilogram">
            <summary>
              Looks up a localized string similar to m³/kg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_meter_per_minute">
            <summary>
              Looks up a localized string similar to m³/min.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_meter_per_second">
            <summary>
              Looks up a localized string similar to m³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_meter_per_second_per_cubic_meter">
            <summary>
              Looks up a localized string similar to m³/s/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_meter_per_second_per_square_meter">
            <summary>
              Looks up a localized string similar to m³/s/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_meter_per_year">
            <summary>
              Looks up a localized string similar to m³/y.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_micrometer">
            <summary>
              Looks up a localized string similar to µm³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_micrometer_per_second">
            <summary>
              Looks up a localized string similar to µm³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_mile">
            <summary>
              Looks up a localized string similar to mi³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_millimeter">
            <summary>
              Looks up a localized string similar to mm³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_millimeter_per_second">
            <summary>
              Looks up a localized string similar to mm³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_nanometer">
            <summary>
              Looks up a localized string similar to nm³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_nanometer_per_second">
            <summary>
              Looks up a localized string similar to nm³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_petameter">
            <summary>
              Looks up a localized string similar to Pm³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_petameter_per_second">
            <summary>
              Looks up a localized string similar to Pm³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_picometer">
            <summary>
              Looks up a localized string similar to pm³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_picometer_per_second">
            <summary>
              Looks up a localized string similar to pm³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_terameter">
            <summary>
              Looks up a localized string similar to Tm³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_terameter_per_second">
            <summary>
              Looks up a localized string similar to Tm³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_yard">
            <summary>
              Looks up a localized string similar to yd³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_yard_per_minute">
            <summary>
              Looks up a localized string similar to yd³/min.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_yard_per_pound">
            <summary>
              Looks up a localized string similar to yd³/lb.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_yard_per_ton">
            <summary>
              Looks up a localized string similar to yd³/ton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_yoctometer">
            <summary>
              Looks up a localized string similar to ym³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_yoctometer_per_second">
            <summary>
              Looks up a localized string similar to ym³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_yottameter">
            <summary>
              Looks up a localized string similar to Ym³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_yottameter_per_second">
            <summary>
              Looks up a localized string similar to Ym³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_zeptometer">
            <summary>
              Looks up a localized string similar to zm³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_zeptometer_per_second">
            <summary>
              Looks up a localized string similar to zm³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_zettameter">
            <summary>
              Looks up a localized string similar to Zm³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cubic_zettameter_per_second">
            <summary>
              Looks up a localized string similar to Zm³/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cup">
            <summary>
              Looks up a localized string similar to cup.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cycles_per_day">
            <summary>
              Looks up a localized string similar to cycles per d.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cycles_per_hour">
            <summary>
              Looks up a localized string similar to cycles per h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cycles_per_minute">
            <summary>
              Looks up a localized string similar to cycles per min.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.cycles_per_year">
            <summary>
              Looks up a localized string similar to cycles per y.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.dalton">
            <summary>
              Looks up a localized string similar to Da.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.day">
            <summary>
              Looks up a localized string similar to d.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.day_per_kilogram">
            <summary>
              Looks up a localized string similar to d/kg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.day_per_pound">
            <summary>
              Looks up a localized string similar to d/lb.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.day_per_ton">
            <summary>
              Looks up a localized string similar to d/ton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decagram">
            <summary>
              Looks up a localized string similar to dag.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decagram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to dag/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decagram_per_second">
            <summary>
              Looks up a localized string similar to dag/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decahertz">
            <summary>
              Looks up a localized string similar to daHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decajoule_per_square_meter">
            <summary>
              Looks up a localized string similar to dJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decameter">
            <summary>
              Looks up a localized string similar to dam.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decameter_per_second">
            <summary>
              Looks up a localized string similar to dam/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decameter_per_second_squared">
            <summary>
              Looks up a localized string similar to dam/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decanewton">
            <summary>
              Looks up a localized string similar to daN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decapascal">
            <summary>
              Looks up a localized string similar to daPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decasecond">
            <summary>
              Looks up a localized string similar to das.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decigram">
            <summary>
              Looks up a localized string similar to dg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decigram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to dg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decigram_per_second">
            <summary>
              Looks up a localized string similar to dg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decihertz">
            <summary>
              Looks up a localized string similar to dHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decijoule_per_square_meter">
            <summary>
              Looks up a localized string similar to J/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decimeter">
            <summary>
              Looks up a localized string similar to dm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decimeter_per_second">
            <summary>
              Looks up a localized string similar to dm/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decimeter_per_second_squared">
            <summary>
              Looks up a localized string similar to dm/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decinewton">
            <summary>
              Looks up a localized string similar to dN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decipascal">
            <summary>
              Looks up a localized string similar to dPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.decisecond">
            <summary>
              Looks up a localized string similar to ds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.dyne">
            <summary>
              Looks up a localized string similar to dyn.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.equivalents_per_liter">
            <summary>
              Looks up a localized string similar to eq/L.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.erg_per_second">
            <summary>
              Looks up a localized string similar to erg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.exagram">
            <summary>
              Looks up a localized string similar to Eg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.exagram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to Eg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.exagram_per_second">
            <summary>
              Looks up a localized string similar to Eg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.exahertz">
            <summary>
              Looks up a localized string similar to EHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.exajoule_per_square_meter">
            <summary>
              Looks up a localized string similar to EJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.exameter">
            <summary>
              Looks up a localized string similar to Em.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.exameter_per_second">
            <summary>
              Looks up a localized string similar to Em/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.exameter_per_second_squared">
            <summary>
              Looks up a localized string similar to Em/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.exanewton">
            <summary>
              Looks up a localized string similar to EN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.exapascal">
            <summary>
              Looks up a localized string similar to EPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.exasecond">
            <summary>
              Looks up a localized string similar to Es.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Fahrenheit">
            <summary>
              Looks up a localized string similar to °F.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Fahrenheit_hour_square_foot_per_Btu_IT">
            <summary>
              Looks up a localized string similar to °F · h · ft²/Btu(IT).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Fahrenheit_per_foot">
            <summary>
              Looks up a localized string similar to °F/ft.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Fahrenheit_per_mile">
            <summary>
              Looks up a localized string similar to °F/mi.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.fathom">
            <summary>
              Looks up a localized string similar to ftm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.femtogram">
            <summary>
              Looks up a localized string similar to fg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.femtogram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to fg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.femtogram_per_second">
            <summary>
              Looks up a localized string similar to fg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.femtohertz">
            <summary>
              Looks up a localized string similar to fHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.femtojoule_per_square_meter">
            <summary>
              Looks up a localized string similar to J/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.femtometer">
            <summary>
              Looks up a localized string similar to fm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.femtometer_per_second">
            <summary>
              Looks up a localized string similar to fm/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.femtometer_per_second_squared">
            <summary>
              Looks up a localized string similar to fm/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.femtonewton">
            <summary>
              Looks up a localized string similar to fN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.femtopascal">
            <summary>
              Looks up a localized string similar to fPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.femtosecond">
            <summary>
              Looks up a localized string similar to fs.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.fluid_ounce">
            <summary>
              Looks up a localized string similar to fl oz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.fluid_ounce_imperial">
            <summary>
              Looks up a localized string similar to fl oz (imperial).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.foot">
            <summary>
              Looks up a localized string similar to ft.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.foot_of_water_20C">
            <summary>
              Looks up a localized string similar to ftH2O (20 °C).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.foot_per_hour">
            <summary>
              Looks up a localized string similar to ft/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.foot_per_minute">
            <summary>
              Looks up a localized string similar to ft/min.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.foot_per_second">
            <summary>
              Looks up a localized string similar to ft/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.foot_per_second_squared">
            <summary>
              Looks up a localized string similar to ft/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.foot_pound_force_per_hour">
            <summary>
              Looks up a localized string similar to ft · lbf/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.foot_pound_force_per_minute">
            <summary>
              Looks up a localized string similar to ft · lbf/min.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.foot_pound_force_per_second">
            <summary>
              Looks up a localized string similar to ft · lbf/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gal">
            <summary>
              Looks up a localized string similar to Gal.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gallon">
            <summary>
              Looks up a localized string similar to gal.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gallon_imperial">
            <summary>
              Looks up a localized string similar to gal (imperial).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gallon_imperial_per_ounce">
            <summary>
              Looks up a localized string similar to gal/oz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gallon_imperial_per_pound">
            <summary>
              Looks up a localized string similar to gal/lb.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gallon_per_day">
            <summary>
              Looks up a localized string similar to gpd.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gallon_per_day_per_square_foot">
            <summary>
              Looks up a localized string similar to gpd/ft².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gallon_per_grain">
            <summary>
              Looks up a localized string similar to gal/gr.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gallon_per_minute">
            <summary>
              Looks up a localized string similar to gpm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gallon_per_minute_per_cubic_foot">
            <summary>
              Looks up a localized string similar to gpm/ft³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gallon_per_minute_per_square_foot">
            <summary>
              Looks up a localized string similar to gpm/ft².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gallon_per_ounce">
            <summary>
              Looks up a localized string similar to gal/oz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gallon_per_pound">
            <summary>
              Looks up a localized string similar to gal/lb.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gallon_per_year">
            <summary>
              Looks up a localized string similar to gal/y.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gigagram">
            <summary>
              Looks up a localized string similar to Gg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gigagram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to Gg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gigagram_per_second">
            <summary>
              Looks up a localized string similar to Gg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gigahertz">
            <summary>
              Looks up a localized string similar to GHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gigajoule">
            <summary>
              Looks up a localized string similar to GJ.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gigajoule_per_hour">
            <summary>
              Looks up a localized string similar to GJ/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gigajoule_per_square_meter">
            <summary>
              Looks up a localized string similar to GJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gigameter">
            <summary>
              Looks up a localized string similar to Gm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gigameter_per_second">
            <summary>
              Looks up a localized string similar to Gm/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gigameter_per_second_squared">
            <summary>
              Looks up a localized string similar to Gm/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.giganewton">
            <summary>
              Looks up a localized string similar to GN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gigapascal">
            <summary>
              Looks up a localized string similar to GPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gigasecond">
            <summary>
              Looks up a localized string similar to Gs.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gigawatt">
            <summary>
              Looks up a localized string similar to GW.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.grain">
            <summary>
              Looks up a localized string similar to gr.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.grain_per_cubic_foot">
            <summary>
              Looks up a localized string similar to gr/ft³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.grain_per_gallon">
            <summary>
              Looks up a localized string similar to gr/gal.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.grain_per_pound">
            <summary>
              Looks up a localized string similar to gr/lb.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gram">
            <summary>
              Looks up a localized string similar to g.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gram_per_cubic_centimeter">
            <summary>
              Looks up a localized string similar to g/cm³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to g/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gram_per_kilogram">
            <summary>
              Looks up a localized string similar to g/kg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gram_per_liter">
            <summary>
              Looks up a localized string similar to g/L.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gram_per_mole">
            <summary>
              Looks up a localized string similar to g/mol.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.gram_per_second">
            <summary>
              Looks up a localized string similar to g/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hectare">
            <summary>
              Looks up a localized string similar to ha.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hectogram">
            <summary>
              Looks up a localized string similar to hg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hectogram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to hg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hectogram_per_second">
            <summary>
              Looks up a localized string similar to hg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hectohertz">
            <summary>
              Looks up a localized string similar to hHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hectojoule_per_square_meter">
            <summary>
              Looks up a localized string similar to hJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hectoliter">
            <summary>
              Looks up a localized string similar to hL.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hectometer">
            <summary>
              Looks up a localized string similar to hm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hectometer_per_second">
            <summary>
              Looks up a localized string similar to hm/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hectometer_per_second_squared">
            <summary>
              Looks up a localized string similar to hm/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hectonewton">
            <summary>
              Looks up a localized string similar to hN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hectopascal">
            <summary>
              Looks up a localized string similar to hPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hectosecond">
            <summary>
              Looks up a localized string similar to hs.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hertz">
            <summary>
              Looks up a localized string similar to Hz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.horsepower">
            <summary>
              Looks up a localized string similar to HP (550 ft · lbf/s).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.horsepower_boiler">
            <summary>
              Looks up a localized string similar to HP (boiler).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.horsepower_electric">
            <summary>
              Looks up a localized string similar to HP (electric).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.horsepower_metric">
            <summary>
              Looks up a localized string similar to HP (metric).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.horsepower_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to HP/RT.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.horsepower_uk">
            <summary>
              Looks up a localized string similar to HP (U.K.).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.horsepower_water">
            <summary>
              Looks up a localized string similar to HP (water).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hour">
            <summary>
              Looks up a localized string similar to h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hour_per_kilogram">
            <summary>
              Looks up a localized string similar to h/kg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hour_per_megagram">
            <summary>
              Looks up a localized string similar to h/Mg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hour_per_pound">
            <summary>
              Looks up a localized string similar to h/lb.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.hour_per_ton">
            <summary>
              Looks up a localized string similar to h/ton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.inch">
            <summary>
              Looks up a localized string similar to in.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.inch_of_mercury">
            <summary>
              Looks up a localized string similar to inHg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.inch_of_water_20C">
            <summary>
              Looks up a localized string similar to inH2O (20 °C).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.inch_per_day">
            <summary>
              Looks up a localized string similar to in/day.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.inch_per_second">
            <summary>
              Looks up a localized string similar to in/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.inch_per_second_squared">
            <summary>
              Looks up a localized string similar to in/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.inch_per_year">
            <summary>
              Looks up a localized string similar to in/year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.joule">
            <summary>
              Looks up a localized string similar to J.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.joule_per_cubic_meter">
            <summary>
              Looks up a localized string similar to J/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.joule_per_joule">
            <summary>
              Looks up a localized string similar to J/J.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.joule_per_kelvin">
            <summary>
              Looks up a localized string similar to J/K.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.joule_per_kilogram">
            <summary>
              Looks up a localized string similar to J/kg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.joule_per_kilogram_kelvin">
            <summary>
              Looks up a localized string similar to J/(kg · K).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.joule_per_mole_kelvin">
            <summary>
              Looks up a localized string similar to J/(mol · K).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.joule_per_square_centimeter">
            <summary>
              Looks up a localized string similar to J/cm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.joule_per_square_meter">
            <summary>
              Looks up a localized string similar to J/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kelvin">
            <summary>
              Looks up a localized string similar to K.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kelvin_per_kilometer">
            <summary>
              Looks up a localized string similar to K/km.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kelvin_per_meter">
            <summary>
              Looks up a localized string similar to K/m.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kiloamp">
            <summary>
              Looks up a localized string similar to kA.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilocalorie_th_per_hour_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to kcal/h/RT.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilocalorie_th_per_minute">
            <summary>
              Looks up a localized string similar to kcal/min.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilocalorie_th_per_second">
            <summary>
              Looks up a localized string similar to kcal/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilocalorie_th_per_second_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to kcal/s/RT.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilogram">
            <summary>
              Looks up a localized string similar to kg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilogram_force">
            <summary>
              Looks up a localized string similar to kgf.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilogram_force_per_square_centimeter">
            <summary>
              Looks up a localized string similar to kgf/cm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilogram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to kg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilogram_per_day">
            <summary>
              Looks up a localized string similar to kg/d.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilogram_per_hour">
            <summary>
              Looks up a localized string similar to kg/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilogram_per_joule">
            <summary>
              Looks up a localized string similar to kg/J.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilogram_per_kilogram">
            <summary>
              Looks up a localized string similar to kg/kg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilogram_per_liter">
            <summary>
              Looks up a localized string similar to kg/L.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilogram_per_megajoule">
            <summary>
              Looks up a localized string similar to kg/MJ.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilogram_per_MillionBtu_IT">
            <summary>
              Looks up a localized string similar to kg/MMBtu(IT).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilogram_per_MillionBtu_th">
            <summary>
              Looks up a localized string similar to kg/MMBtu.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilogram_per_minute">
            <summary>
              Looks up a localized string similar to kg/min.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilogram_per_mole">
            <summary>
              Looks up a localized string similar to kg/mol.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilogram_per_second">
            <summary>
              Looks up a localized string similar to kg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilogram_per_year">
            <summary>
              Looks up a localized string similar to kg/year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilohertz">
            <summary>
              Looks up a localized string similar to kHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilojoule">
            <summary>
              Looks up a localized string similar to kJ.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilojoule_per_hour">
            <summary>
              Looks up a localized string similar to kJ/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilojoule_per_kilogram">
            <summary>
              Looks up a localized string similar to kJ/kg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilojoule_per_kilogram_kelvin">
            <summary>
              Looks up a localized string similar to kJ/(kg · K).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilojoule_per_kilowatt_hour">
            <summary>
              Looks up a localized string similar to kJ/kWh.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilojoule_per_square_meter">
            <summary>
              Looks up a localized string similar to kJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilometer">
            <summary>
              Looks up a localized string similar to km.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilometer_per_hour">
            <summary>
              Looks up a localized string similar to km/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilometer_per_second">
            <summary>
              Looks up a localized string similar to km/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilometer_per_second_squared">
            <summary>
              Looks up a localized string similar to km/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilonewton">
            <summary>
              Looks up a localized string similar to kN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilonewton_per_meter">
            <summary>
              Looks up a localized string similar to kN/m.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilopascal">
            <summary>
              Looks up a localized string similar to kPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilopond">
            <summary>
              Looks up a localized string similar to kp.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilosecond">
            <summary>
              Looks up a localized string similar to ks.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilovolt">
            <summary>
              Looks up a localized string similar to kV.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilowatt">
            <summary>
              Looks up a localized string similar to kW.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilowatt_hour">
            <summary>
              Looks up a localized string similar to kW · h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilowatt_hour_per_square_meter">
            <summary>
              Looks up a localized string similar to kWh/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilowatt_hour_per_year">
            <summary>
              Looks up a localized string similar to kWh/y.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilowatt_per_meter_kelvin">
            <summary>
              Looks up a localized string similar to kW/(m · K).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilowatt_per_square_meter_Celsius">
            <summary>
              Looks up a localized string similar to kW/(m² · °C).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kilowatt_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to kW/RT.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.kip">
            <summary>
              Looks up a localized string similar to kip.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.knot">
            <summary>
              Looks up a localized string similar to nmi/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.langley">
            <summary>
              Looks up a localized string similar to Ly.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.light_year">
            <summary>
              Looks up a localized string similar to ly.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.liter">
            <summary>
              Looks up a localized string similar to L.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.liter_per_gram">
            <summary>
              Looks up a localized string similar to L/g.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.liter_per_hour">
            <summary>
              Looks up a localized string similar to L/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.liter_per_hour_per_square_meter">
            <summary>
              Looks up a localized string similar to L/h/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.liter_per_milligram">
            <summary>
              Looks up a localized string similar to L/mg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.liter_per_minute">
            <summary>
              Looks up a localized string similar to L/min.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.liter_per_second">
            <summary>
              Looks up a localized string similar to L/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megaamp">
            <summary>
              Looks up a localized string similar to MA.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megagram">
            <summary>
              Looks up a localized string similar to Mg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megagram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to Mg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megagram_per_second">
            <summary>
              Looks up a localized string similar to Mg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megahertz">
            <summary>
              Looks up a localized string similar to MHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megajoule">
            <summary>
              Looks up a localized string similar to MJ.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megajoule_per_gallon">
            <summary>
              Looks up a localized string similar to MJ/gal.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megajoule_per_hour">
            <summary>
              Looks up a localized string similar to MJ/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megajoule_per_kilogram">
            <summary>
              Looks up a localized string similar to MJ/kg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megajoule_per_oil_barrel">
            <summary>
              Looks up a localized string similar to MJ/bbl.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megajoule_per_square_meter">
            <summary>
              Looks up a localized string similar to MJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megajoule_per_thousand_cubic_foot">
            <summary>
              Looks up a localized string similar to MJ/Mcf.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megameter">
            <summary>
              Looks up a localized string similar to Mm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megameter_per_second">
            <summary>
              Looks up a localized string similar to Mm/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megameter_per_second_squared">
            <summary>
              Looks up a localized string similar to Mm/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.meganewton">
            <summary>
              Looks up a localized string similar to MN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megapascal">
            <summary>
              Looks up a localized string similar to MPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megasecond">
            <summary>
              Looks up a localized string similar to Ms.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megavolt">
            <summary>
              Looks up a localized string similar to MV.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megawatt">
            <summary>
              Looks up a localized string similar to MW.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megawatt_hour_per_year">
            <summary>
              Looks up a localized string similar to MWh/y.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megawatt_per_meter_kelvin">
            <summary>
              Looks up a localized string similar to MW/(m · K).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.megawatt_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to MW/RT.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.meter">
            <summary>
              Looks up a localized string similar to m.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.meter_per_minute">
            <summary>
              Looks up a localized string similar to m/min.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.meter_per_second">
            <summary>
              Looks up a localized string similar to m/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.meter_per_second_squared">
            <summary>
              Looks up a localized string similar to m/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.microamp">
            <summary>
              Looks up a localized string similar to µA.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.microgram">
            <summary>
              Looks up a localized string similar to μg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.microgram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to µg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.microgram_per_second">
            <summary>
              Looks up a localized string similar to µg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.microhertz">
            <summary>
              Looks up a localized string similar to µHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.microinch">
            <summary>
              Looks up a localized string similar to µin.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.microjoule">
            <summary>
              Looks up a localized string similar to µJ.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.microjoule_per_kilogram">
            <summary>
              Looks up a localized string similar to µJ/kg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.microjoule_per_square_meter">
            <summary>
              Looks up a localized string similar to μJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.micrometer">
            <summary>
              Looks up a localized string similar to μm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.micrometer_per_second">
            <summary>
              Looks up a localized string similar to µm/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.micrometer_per_second_squared">
            <summary>
              Looks up a localized string similar to µm/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.micronewton">
            <summary>
              Looks up a localized string similar to µN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.micropascal">
            <summary>
              Looks up a localized string similar to µPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.microsecond">
            <summary>
              Looks up a localized string similar to µs.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.microSiemens_per_centimeter">
            <summary>
              Looks up a localized string similar to μS/cm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.microSiemens_per_meter">
            <summary>
              Looks up a localized string similar to μS/m.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.microvolt">
            <summary>
              Looks up a localized string similar to µV.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.mil">
            <summary>
              Looks up a localized string similar to mil.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.mil_per_year">
            <summary>
              Looks up a localized string similar to mpy.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.mile">
            <summary>
              Looks up a localized string similar to mi.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.mile_per_day">
            <summary>
              Looks up a localized string similar to mi/d.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.mile_per_hour">
            <summary>
              Looks up a localized string similar to mi/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.mile_per_minute">
            <summary>
              Looks up a localized string similar to mi/min.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.mile_per_second">
            <summary>
              Looks up a localized string similar to mi/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.milliamp">
            <summary>
              Looks up a localized string similar to mA.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.millibar">
            <summary>
              Looks up a localized string similar to mbar.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.milligram">
            <summary>
              Looks up a localized string similar to mg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.milligram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to mg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.milligram_per_liter">
            <summary>
              Looks up a localized string similar to mg/L.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.milligram_per_second">
            <summary>
              Looks up a localized string similar to mg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.millihertz">
            <summary>
              Looks up a localized string similar to mHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.millijoule">
            <summary>
              Looks up a localized string similar to mJ.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.millijoule_per_kilogram">
            <summary>
              Looks up a localized string similar to mJ/kg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.millijoule_per_square_meter">
            <summary>
              Looks up a localized string similar to mJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.millimeter">
            <summary>
              Looks up a localized string similar to mm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.millimeter_of_mercury">
            <summary>
              Looks up a localized string similar to mmHg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.millimeter_per_second">
            <summary>
              Looks up a localized string similar to mm/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.millimeter_per_second_squared">
            <summary>
              Looks up a localized string similar to mm/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.millimeter_per_year">
            <summary>
              Looks up a localized string similar to mm/year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.millinewton">
            <summary>
              Looks up a localized string similar to mN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.millinewton_per_meter">
            <summary>
              Looks up a localized string similar to mN/m.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.million_pounds_per_hour">
            <summary>
              Looks up a localized string similar to MMlb/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.MillionBtu_IT_per_gallon">
            <summary>
              Looks up a localized string similar to MMBtu(IT)/gal.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.MillionBtu_IT_per_hour">
            <summary>
              Looks up a localized string similar to MMBtu(IT)/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.MillionBtu_IT_per_hour_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to MMBtu(IT)/h/RT.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.MillionBtu_IT_per_oil_barrel">
            <summary>
              Looks up a localized string similar to MMBtu(IT)/bbl.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.MillionBtu_IT_per_thousand_cubic_foot">
            <summary>
              Looks up a localized string similar to MMBtu(IT)/Mcf.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.MillionBtu_th_per_gallon">
            <summary>
              Looks up a localized string similar to MMBtu/gal.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.MillionBtu_th_per_hour">
            <summary>
              Looks up a localized string similar to MMBtu/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.MillionBtu_th_per_hour_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to MMBtu/h/RT.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.MillionBtu_th_per_oil_barrel">
            <summary>
              Looks up a localized string similar to MMBtu/bbl.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.MillionBtu_th_per_thousand_cubic_foot">
            <summary>
              Looks up a localized string similar to MMBtu/Mcf.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.MillionBtu_th_per_year">
            <summary>
              Looks up a localized string similar to MMBtu/y.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.millipascal">
            <summary>
              Looks up a localized string similar to mPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.millipascal_second">
            <summary>
              Looks up a localized string similar to mPa · s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.millisecond">
            <summary>
              Looks up a localized string similar to ms.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.milliSiemens_per_centimeter">
            <summary>
              Looks up a localized string similar to mS/cm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.milliSiemens_per_meter">
            <summary>
              Looks up a localized string similar to mS/m.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.millivolt">
            <summary>
              Looks up a localized string similar to mV.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.minute">
            <summary>
              Looks up a localized string similar to min.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.minute_per_kilogram">
            <summary>
              Looks up a localized string similar to min/kig.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.minute_per_pound">
            <summary>
              Looks up a localized string similar to min/lb.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.minute_per_ton">
            <summary>
              Looks up a localized string similar to min/ton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.molal">
            <summary>
              Looks up a localized string similar to m.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.molar">
            <summary>
              Looks up a localized string similar to M.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.mole">
            <summary>
              Looks up a localized string similar to mol.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.mole_per_cubic_decimeter">
            <summary>
              Looks up a localized string similar to mol/dm³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.mole_per_cubic_meter">
            <summary>
              Looks up a localized string similar to mol/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.mole_per_gram">
            <summary>
              Looks up a localized string similar to mol/g.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.mole_per_kilogram">
            <summary>
              Looks up a localized string similar to mol/kg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.mole_per_liter">
            <summary>
              Looks up a localized string similar to mol/L.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.nanogram">
            <summary>
              Looks up a localized string similar to ng.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.nanogram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to ng/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.nanogram_per_second">
            <summary>
              Looks up a localized string similar to ng/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.nanohertz">
            <summary>
              Looks up a localized string similar to nHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.nanojoule_per_square_meter">
            <summary>
              Looks up a localized string similar to nJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.nanometer">
            <summary>
              Looks up a localized string similar to nm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.nanometer_per_second">
            <summary>
              Looks up a localized string similar to nm/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.nanometer_per_second_squared">
            <summary>
              Looks up a localized string similar to nm/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.nanonewton">
            <summary>
              Looks up a localized string similar to nN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.nanopascal">
            <summary>
              Looks up a localized string similar to nPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.nanosecond">
            <summary>
              Looks up a localized string similar to ns.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.nautical_mile">
            <summary>
              Looks up a localized string similar to nmi.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.newton">
            <summary>
              Looks up a localized string similar to N.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.newton_per_meter">
            <summary>
              Looks up a localized string similar to N/m.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.normal_cubic_meter_per_second_20C_1atm_dry">
            <summary>
              Looks up a localized string similar to Nm³/s (20 °C 1 atm, dry).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.oil_barrel">
            <summary>
              Looks up a localized string similar to bbl.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.oil_barrels_per_day">
            <summary>
              Looks up a localized string similar to BPD.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ounce">
            <summary>
              Looks up a localized string similar to oz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ounce_force">
            <summary>
              Looks up a localized string similar to ozf.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ounce_per_cubic_inch">
            <summary>
              Looks up a localized string similar to oz/in³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ounce_per_gallon">
            <summary>
              Looks up a localized string similar to oz/gal.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ounce_per_gallon_imperial">
            <summary>
              Looks up a localized string similar to oz/gal.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ounce_troy">
            <summary>
              Looks up a localized string similar to oz (troy).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.parsec">
            <summary>
              Looks up a localized string similar to pc.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pascal">
            <summary>
              Looks up a localized string similar to Pa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pascal_per_pascal">
            <summary>
              Looks up a localized string similar to Pa/Pa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pascal_second">
            <summary>
              Looks up a localized string similar to Pa · s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.peck">
            <summary>
              Looks up a localized string similar to pk.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.percent">
            <summary>
              Looks up a localized string similar to %.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.petagram">
            <summary>
              Looks up a localized string similar to Pg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.petagram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to Pg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.petagram_per_second">
            <summary>
              Looks up a localized string similar to Pg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.petahertz">
            <summary>
              Looks up a localized string similar to PHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.petajoule_per_square_meter">
            <summary>
              Looks up a localized string similar to PJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.petameter">
            <summary>
              Looks up a localized string similar to Pm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.petameter_per_second">
            <summary>
              Looks up a localized string similar to Pm/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.petameter_per_second_squared">
            <summary>
              Looks up a localized string similar to Pm/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.petanewton">
            <summary>
              Looks up a localized string similar to PN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.petapascal">
            <summary>
              Looks up a localized string similar to PPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.petasecond">
            <summary>
              Looks up a localized string similar to Ps.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pica_computer">
            <summary>
              Looks up a localized string similar to pc (computer).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pica_print">
            <summary>
              Looks up a localized string similar to pc (printer&apos;s).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.picogram">
            <summary>
              Looks up a localized string similar to pg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.picogram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to pg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.picogram_per_second">
            <summary>
              Looks up a localized string similar to pg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.picohertz">
            <summary>
              Looks up a localized string similar to pHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.picojoule_per_square_meter">
            <summary>
              Looks up a localized string similar to pJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.picometer">
            <summary>
              Looks up a localized string similar to pm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.picometer_per_second">
            <summary>
              Looks up a localized string similar to pm/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.picometer_per_second_squared">
            <summary>
              Looks up a localized string similar to pm/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.piconewton">
            <summary>
              Looks up a localized string similar to pN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.picopascal">
            <summary>
              Looks up a localized string similar to pPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.picosecond">
            <summary>
              Looks up a localized string similar to ps.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pint_dry">
            <summary>
              Looks up a localized string similar to dry pt.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pint_liquid">
            <summary>
              Looks up a localized string similar to liq pt.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.point_computer">
            <summary>
              Looks up a localized string similar to pt (computer).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.point_print">
            <summary>
              Looks up a localized string similar to pt (printer&apos;s).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.poise">
            <summary>
              Looks up a localized string similar to P.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound">
            <summary>
              Looks up a localized string similar to lb.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_force">
            <summary>
              Looks up a localized string similar to lbf.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_cubic_foot">
            <summary>
              Looks up a localized string similar to lb/ft³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_cubic_inch">
            <summary>
              Looks up a localized string similar to lb/in³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_cubic_yard">
            <summary>
              Looks up a localized string similar to lb/yd³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_day">
            <summary>
              Looks up a localized string similar to lb/d.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_gallon">
            <summary>
              Looks up a localized string similar to lb/gal.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_gallon_imperial">
            <summary>
              Looks up a localized string similar to lb/gal (imperial).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_hour">
            <summary>
              Looks up a localized string similar to lb/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_megajoule">
            <summary>
              Looks up a localized string similar to lb/MJ.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_MillionBtu_IT">
            <summary>
              Looks up a localized string similar to lb/MMBtu(IT).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_MillionBtu_th">
            <summary>
              Looks up a localized string similar to lb/MMBtu.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_minute">
            <summary>
              Looks up a localized string similar to lb/min.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_pound">
            <summary>
              Looks up a localized string similar to lb/lb.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_second">
            <summary>
              Looks up a localized string similar to lb/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_square_inch">
            <summary>
              Looks up a localized string similar to psi.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_square_inch_a">
            <summary>
              Looks up a localized string similar to psia.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_square_inch_a_per_pound_per_square_inch_a">
            <summary>
              Looks up a localized string similar to psia/psia.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_square_inch_g">
            <summary>
              Looks up a localized string similar to psig.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_square_inch_g_per_pound_per_square_inch_g">
            <summary>
              Looks up a localized string similar to psig/psig.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_thousand_oil_barrels">
            <summary>
              Looks up a localized string similar to PTB.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_per_year">
            <summary>
              Looks up a localized string similar to lb/year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.pound_troy">
            <summary>
              Looks up a localized string similar to lb (troy).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.poundal">
            <summary>
              Looks up a localized string similar to pdl.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.quart_dry">
            <summary>
              Looks up a localized string similar to dry qt.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.quart_liquid">
            <summary>
              Looks up a localized string similar to liq qt.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Rankine">
            <summary>
              Looks up a localized string similar to °R.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Rankine_per_kilometer">
            <summary>
              Looks up a localized string similar to °R/km.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Rankine_per_meter">
            <summary>
              Looks up a localized string similar to °R/m.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ratio">
            <summary>
              Looks up a localized string similar to R.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.reciprocal_100_cubic_foot">
            <summary>
              Looks up a localized string similar to 1/100 ft³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.reciprocal_1000_gallon">
            <summary>
              Looks up a localized string similar to 1/1000 gal.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.reciprocal_centimeter">
            <summary>
              Looks up a localized string similar to 1/cm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.reciprocal_cubic_meter">
            <summary>
              Looks up a localized string similar to 1/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.reciprocal_foot">
            <summary>
              Looks up a localized string similar to 1/ft.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.reciprocal_inch">
            <summary>
              Looks up a localized string similar to 1/in.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.reciprocal_joule">
            <summary>
              Looks up a localized string similar to 1/J.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.reciprocal_kilogram">
            <summary>
              Looks up a localized string similar to 1/kg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.reciprocal_kilowatt_hour">
            <summary>
              Looks up a localized string similar to 1/kWh.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.reciprocal_meter">
            <summary>
              Looks up a localized string similar to 1/m.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.reciprocal_MillionBtu_th">
            <summary>
              Looks up a localized string similar to 1/MMBtu.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.reciprocal_pound">
            <summary>
              Looks up a localized string similar to 1/lb.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.rod">
            <summary>
              Looks up a localized string similar to rd.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.second">
            <summary>
              Looks up a localized string similar to s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.second_per_kilogram">
            <summary>
              Looks up a localized string similar to s/kg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.second_per_pound">
            <summary>
              Looks up a localized string similar to s/lb.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.second_per_ton">
            <summary>
              Looks up a localized string similar to s/ton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Siemens_per_centimeter">
            <summary>
              Looks up a localized string similar to S/cm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.Siemens_per_meter">
            <summary>
              Looks up a localized string similar to S/m.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.slug_per_cubic_foot">
            <summary>
              Looks up a localized string similar to slug/ft³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_attometer">
            <summary>
              Looks up a localized string similar to am².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_centimeter">
            <summary>
              Looks up a localized string similar to cm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_decameter">
            <summary>
              Looks up a localized string similar to dam².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_decimeter">
            <summary>
              Looks up a localized string similar to dm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_exameter">
            <summary>
              Looks up a localized string similar to Em².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_femtometer">
            <summary>
              Looks up a localized string similar to fm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_foot">
            <summary>
              Looks up a localized string similar to ft².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_gigameter">
            <summary>
              Looks up a localized string similar to Gm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_hectometer">
            <summary>
              Looks up a localized string similar to hm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_inch">
            <summary>
              Looks up a localized string similar to in².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_kilometer">
            <summary>
              Looks up a localized string similar to km².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_megameter">
            <summary>
              Looks up a localized string similar to Mm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_meter">
            <summary>
              Looks up a localized string similar to m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_meter_Celsius_per_kilowatt">
            <summary>
              Looks up a localized string similar to m² · °C/kW.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_meter_kelvin_per_watt">
            <summary>
              Looks up a localized string similar to m² · K/W.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_micrometer">
            <summary>
              Looks up a localized string similar to μm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_mile">
            <summary>
              Looks up a localized string similar to mi².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_millimeter">
            <summary>
              Looks up a localized string similar to mm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_nanometer">
            <summary>
              Looks up a localized string similar to nm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_petameter">
            <summary>
              Looks up a localized string similar to Pm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_picometer">
            <summary>
              Looks up a localized string similar to pm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_terameter">
            <summary>
              Looks up a localized string similar to Tm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_yard">
            <summary>
              Looks up a localized string similar to yd².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_yoctometer">
            <summary>
              Looks up a localized string similar to ym².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_yottameter">
            <summary>
              Looks up a localized string similar to Ym².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_zeptometer">
            <summary>
              Looks up a localized string similar to zm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.square_zettameter">
            <summary>
              Looks up a localized string similar to Zm².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.standard_cubic_feet_per_minute_68F_1atm_dry">
            <summary>
              Looks up a localized string similar to SCFM (68 °F 1 atm, dry).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.stone_per_cubic_light_year">
            <summary>
              Looks up a localized string similar to st/ly³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.tablespoon">
            <summary>
              Looks up a localized string similar to tbsp.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.teaspoon">
            <summary>
              Looks up a localized string similar to tsp.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.teragram">
            <summary>
              Looks up a localized string similar to Tg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.teragram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to Tg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.teragram_per_second">
            <summary>
              Looks up a localized string similar to Tg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.terahertz">
            <summary>
              Looks up a localized string similar to THz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.terajoule_per_square_meter">
            <summary>
              Looks up a localized string similar to TJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.terameter">
            <summary>
              Looks up a localized string similar to Tm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.terameter_per_second">
            <summary>
              Looks up a localized string similar to Tm/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.terameter_per_second_squared">
            <summary>
              Looks up a localized string similar to Tm/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.teranewton">
            <summary>
              Looks up a localized string similar to TN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.terapascal">
            <summary>
              Looks up a localized string similar to TPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.terasecond">
            <summary>
              Looks up a localized string similar to Ts.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.thousand_pounds_per_hour">
            <summary>
              Looks up a localized string similar to kpph.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ton">
            <summary>
              Looks up a localized string similar to ton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ton_assay">
            <summary>
              Looks up a localized string similar to AT.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ton_force">
            <summary>
              Looks up a localized string similar to tf.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ton_metric">
            <summary>
              Looks up a localized string similar to T.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ton_of_refridgeration">
            <summary>
              Looks up a localized string similar to RT.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ton_per_cubic_yard">
            <summary>
              Looks up a localized string similar to ton/yd³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ton_per_day">
            <summary>
              Looks up a localized string similar to ton/d.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ton_per_day_metric">
            <summary>
              Looks up a localized string similar to T/d.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ton_per_hour">
            <summary>
              Looks up a localized string similar to ton/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.ton_per_hour_metric">
            <summary>
              Looks up a localized string similar to T/h.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.volt">
            <summary>
              Looks up a localized string similar to V.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.watt">
            <summary>
              Looks up a localized string similar to W.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.watt_per_meter_kelvin">
            <summary>
              Looks up a localized string similar to W/(m · K).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.watt_per_square_meter_Celsius">
            <summary>
              Looks up a localized string similar to W/(m² · °C).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.watt_per_square_meter_kelvin">
            <summary>
              Looks up a localized string similar to W/(m² · K).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.watt_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to W/RT.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.watt_per_watt">
            <summary>
              Looks up a localized string similar to W/W.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yard">
            <summary>
              Looks up a localized string similar to yd.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.year">
            <summary>
              Looks up a localized string similar to year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yoctogram">
            <summary>
              Looks up a localized string similar to yg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yoctogram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to yg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yoctogram_per_second">
            <summary>
              Looks up a localized string similar to yg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yoctohertz">
            <summary>
              Looks up a localized string similar to yHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yoctojoule_per_square_meter">
            <summary>
              Looks up a localized string similar to yJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yoctometer">
            <summary>
              Looks up a localized string similar to ym.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yoctometer_per_second">
            <summary>
              Looks up a localized string similar to ym/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yoctometer_per_second_squared">
            <summary>
              Looks up a localized string similar to ym/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yoctonewton">
            <summary>
              Looks up a localized string similar to yN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yoctopascal">
            <summary>
              Looks up a localized string similar to yPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yoctosecond">
            <summary>
              Looks up a localized string similar to ys.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yottagram">
            <summary>
              Looks up a localized string similar to Yg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yottagram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to Yg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yottagram_per_second">
            <summary>
              Looks up a localized string similar to Yg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yottahertz">
            <summary>
              Looks up a localized string similar to YHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yottajoule_per_square_meter">
            <summary>
              Looks up a localized string similar to YJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yottameter">
            <summary>
              Looks up a localized string similar to Ym.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yottameter_per_second">
            <summary>
              Looks up a localized string similar to Ym/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yottameter_per_second_squared">
            <summary>
              Looks up a localized string similar to Ym/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yottanewton">
            <summary>
              Looks up a localized string similar to YN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yottapascal">
            <summary>
              Looks up a localized string similar to YPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.yottasecond">
            <summary>
              Looks up a localized string similar to Ys.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zeptogram">
            <summary>
              Looks up a localized string similar to zg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zeptogram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to zg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zeptogram_per_second">
            <summary>
              Looks up a localized string similar to zg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zeptohertz">
            <summary>
              Looks up a localized string similar to zHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zeptojoule_per_square_meter">
            <summary>
              Looks up a localized string similar to zJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zeptometer">
            <summary>
              Looks up a localized string similar to zm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zeptometer_per_second">
            <summary>
              Looks up a localized string similar to zm/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zeptometer_per_second_squared">
            <summary>
              Looks up a localized string similar to zm/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zeptonewton">
            <summary>
              Looks up a localized string similar to zN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zeptopascal">
            <summary>
              Looks up a localized string similar to zPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zeptosecond">
            <summary>
              Looks up a localized string similar to zs.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zettagram">
            <summary>
              Looks up a localized string similar to Zg.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zettagram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to Zg/m³.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zettagram_per_second">
            <summary>
              Looks up a localized string similar to Zg/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zettahertz">
            <summary>
              Looks up a localized string similar to ZHz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zettajoule_per_square_meter">
            <summary>
              Looks up a localized string similar to ZJ/m².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zettameter">
            <summary>
              Looks up a localized string similar to Zm.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zettameter_per_second">
            <summary>
              Looks up a localized string similar to Zm/s.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zettameter_per_second_squared">
            <summary>
              Looks up a localized string similar to Zm/s².
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zettanewton">
            <summary>
              Looks up a localized string similar to ZN.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zettapascal">
            <summary>
              Looks up a localized string similar to ZPa.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Abbreviations.zettasecond">
            <summary>
              Looks up a localized string similar to Zs.
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.Area">
            <summary>
            Area (square meters).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.Area.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Area.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Area.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.#ctor(System.Double)">
            <summary>
            Construct a new Area with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_Multiply(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Length)">
            <summary>
            Multiply an area by a length.
            </summary>
            <param name="l">Left area.</param>
            <param name="r">Right length.</param>
            <returns>Volume formed by area and length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_Multiply(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Multiply an area by a volume flux.
            </summary>
            <param name="l">Left area.</param>
            <param name="r">Right volume rate.</param>
            <returns>Volume rate formed.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_Division(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Length)">
            <summary>
            Divide an area by a length.
            </summary>
            <param name="l">Left area.</param>
            <param name="r">Ridght length.</param>
            <returns>Length formed.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_Multiply(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Multiply an area by a heat density.
            </summary>
            <param name="l">Left area.</param>
            <param name="r">Right heat density.</param>
            <returns>Resulting energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_Multiply(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Velocity)">
            <summary>
            Multiply an area by a velocity.
            </summary>
            <param name="l">Left area.</param>
            <param name="r">Right velocity.</param>
            <returns>Resulting volume rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.Sqrt">
            <summary>
            The square root of an Area.
            </summary>
            <returns>Length formed.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.Area.Zero">
            <summary>
            Area of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.#ctor(System.Double,Nalco.Numerics.SI.Area.Subunit)">
            <summary>
            Construct a Area with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Area.Item(Nalco.Numerics.SI.Area.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Area.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.Abbreviation(Nalco.Numerics.SI.Area.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.Description(Nalco.Numerics.SI.Area.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Area.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.Parse(System.String)">
            <summary>
            Converts the string representation of a Area to a Area.
            </summary>
            <param name="s">A string that contains a Area to convert.</param>
            <returns>A Area.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Area to a Area.
            </summary>
            <param name="s">A string that contains a Area to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Area.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Area to a Area.
            </summary>
            <param name="s">A string that contains a Area to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Area.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Area.Subunit)">
            <summary>
            Converts the string representation of a Area to a Area.
            </summary>
            <param name="s">A string that contains a Area to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Area.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.TryParse(System.String,Nalco.Numerics.SI.Area@)">
            <summary>
            Converts the string representation of a Area to a Area. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Area to convert.</param>
            <param name="result">When this method returns, contains the Area, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Area@)">
            <summary>
            Converts the string representation of a Area to a Area. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Area to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Area, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Area@)">
            <summary>
            Converts the string representation of a Area to a Area. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Area to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Area, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Area.Subunit,Nalco.Numerics.SI.Area@)">
            <summary>
            Converts the string representation of a Area to a Area. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Area to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Area, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.CompareTo(System.Object)">
            <summary>
            Compares the current Area with another Area.
            </summary>
            <param name="obj">Area to compare with this Area.</param>
            <returns>Less than zero when this Area is less than the other parameter.
            Zero when this Area is equal to the other parameter.
            Greater than zero when this Area is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Area.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.CompareTo(Nalco.Numerics.SI.Area)">
            <summary>
            Compares the current Area with another Area.
            </summary>
            <param name="other">Area to compare with this Area.</param>
            <returns>Less than zero when this Area is less than the other parameter.
            Zero when this Area is equal to the other parameter.
            Greater than zero when this Area is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Area.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.Abs(Nalco.Numerics.SI.Area)">
            <summary>
            Returns the absolute value of a Area.
            </summary>
            <param name="value">A Area.</param>
            <returns>A Area that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.Round(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Area)">
            <summary>
            Returns a Area rounded to the nearest interval.
            </summary>
            <param name="value">A Area.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Area rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.Round(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Area,System.MidpointRounding)">
            <summary>
            Returns a Area rounded to the nearest interval.
            </summary>
            <param name="value">A Area.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Area rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.Floor(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Area)">
            <summary>
            Returns a Area rounded down to the nearest interval.
            </summary>
            <param name="value">A Area.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Area rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.Ceiling(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Area)">
            <summary>
            Returns a Area rounded up to the nearest interval.
            </summary>
            <param name="value">A Area.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Area rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_Equality(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Area)">
            <summary>
            Determines whether two Areas are equal.
            </summary>
            <param name="l">Left Area.</param>
            <param name="r">Right Area.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_Inequality(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Area)">
            <summary>
            Determines whether two Areas are not equal.
            </summary>
            <param name="l">Left Area.</param>
            <param name="r">Right Area.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_LessThan(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Area)">
            <summary>
            Determines if the left Area is less than the right Area.
            </summary>
            <param name="l">Left Area.</param>
            <param name="r">Right Area.</param>
            <returns>True if the left Area is less than the right Area.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_LessThanOrEqual(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Area)">
            <summary>
            Determines if the left Area is less than or equal to the right Area.
            </summary>
            <param name="l">Left Area.</param>
            <param name="r">Right Area.</param>
            <returns>True if the left Area is less than or equal to the right Area.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_GreaterThanOrEqual(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Area)">
            <summary>
            Determines if the left Area is greater than or equal to the right Area.
            </summary>
            <param name="l">Left Area.</param>
            <param name="r">Right Area.</param>
            <returns>True if the left Area is greater than or equal to the right Area.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_GreaterThan(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Area)">
            <summary>
            Determines if the left Area is greater than the right Area.
            </summary>
            <param name="l">Left Area.</param>
            <param name="r">Right Area.</param>
            <returns>True if the left Area is greater than the right Area.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_Addition(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Area)">
            <summary>
            Add two Areas together.
            </summary>
            <param name="l">Left Area.</param>
            <param name="r">Right Area.</param>
            <returns>Sum of Areas.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_UnaryNegation(Nalco.Numerics.SI.Area)">
            <summary>
            Negate a Area.
            </summary>
            <param name="l">Left Area.</param>
            <returns>Negative Area.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_Subtraction(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Area)">
            <summary>
            Subtract two Areas.
            </summary>
            <param name="l">Left Area.</param>
            <param name="r">Right Area.</param>
            <returns>Difference of Areas.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_Multiply(Nalco.Numerics.SI.Area,System.Double)">
            <summary>
            Multiply a Area with a double.
            </summary>
            <param name="l">Left Area.</param>
            <param name="r">Double value.</param>
            <returns>Area.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_Multiply(System.Double,Nalco.Numerics.SI.Area)">
            <summary>
            Multiply a Area with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Area.</param>
            <returns>Area.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_Division(Nalco.Numerics.SI.Area,System.Double)">
            <summary>
            Divide a Area by a double.
            </summary>
            <param name="l">Left Area.</param>
            <param name="r">Double value.</param>
            <returns>Area.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_Division(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Area)">
            <summary>
            Divide a Area by another Area.
            </summary>
            <param name="l">Left Area.</param>
            <param name="r">Right Area.</param>
            <returns>Ratio of the two Areas.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_Modulus(Nalco.Numerics.SI.Area,Nalco.Numerics.SI.Area)">
            <summary>
            Divide a Area by another Area and return the remainder.
            </summary>
            <param name="l">Left Area.</param>
            <param name="r">Right Area.</param>
            <returns>Remainder after a Area is divided by a Area.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_Explicit(Nalco.Numerics.SI.Area)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Area into a weakly typed Scalar.
            </summary>
            <param name="l">Area.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Area.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Area">
            <summary>
            Explicitly convert the weakly typed Scalar into a Area.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Area.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.AvailableEnergy">
            <summary>
            Available energy (joules per kilogram).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.AvailableEnergy.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.AvailableEnergy.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.AvailableEnergy.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.#ctor(System.Double)">
            <summary>
            Construct a new AvailableEnergy with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_Multiply(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Multiply an available energy by a specific humidity.
            </summary>
            <param name="l">Left available energy.</param>
            <param name="r">Right specific humidity.</param>
            <returns>Resulting available energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_Explicit(Nalco.Numerics.SI.SpecificEnthalpy)~Nalco.Numerics.SI.AvailableEnergy">
            <summary>
            Implicitly convert the specific enthalpy into an available energy.
            </summary>
            <param name="l">Specific enthalpy.</param>
            <returns>Available energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_Division(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Divide an available energy by a specific enthalpy
            </summary>
            <param name="l">Left available energy.</param>
            <param name="r">Right specific enthalpy.</param>
            <returns>Ratio of the available energy over specific enthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_Multiply(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.Density)">
            <summary>
            Multiply an available energy by a density.
            </summary>
            <param name="l">Left avaiable energy.</param>
            <param name="r">Right density.</param>
            <returns>Resulting pressure.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.AvailableEnergy.Zero">
            <summary>
            AvailableEnergy of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.#ctor(System.Double,Nalco.Numerics.SI.AvailableEnergy.Subunit)">
            <summary>
            Construct a AvailableEnergy with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.AvailableEnergy.Item(Nalco.Numerics.SI.AvailableEnergy.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.AvailableEnergy.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.Abbreviation(Nalco.Numerics.SI.AvailableEnergy.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.Description(Nalco.Numerics.SI.AvailableEnergy.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.AvailableEnergy.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.Parse(System.String)">
            <summary>
            Converts the string representation of a AvailableEnergy to a AvailableEnergy.
            </summary>
            <param name="s">A string that contains a AvailableEnergy to convert.</param>
            <returns>A AvailableEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a AvailableEnergy to a AvailableEnergy.
            </summary>
            <param name="s">A string that contains a AvailableEnergy to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A AvailableEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a AvailableEnergy to a AvailableEnergy.
            </summary>
            <param name="s">A string that contains a AvailableEnergy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A AvailableEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.AvailableEnergy.Subunit)">
            <summary>
            Converts the string representation of a AvailableEnergy to a AvailableEnergy.
            </summary>
            <param name="s">A string that contains a AvailableEnergy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A AvailableEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.TryParse(System.String,Nalco.Numerics.SI.AvailableEnergy@)">
            <summary>
            Converts the string representation of a AvailableEnergy to a AvailableEnergy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a AvailableEnergy to convert.</param>
            <param name="result">When this method returns, contains the AvailableEnergy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.AvailableEnergy@)">
            <summary>
            Converts the string representation of a AvailableEnergy to a AvailableEnergy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a AvailableEnergy to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the AvailableEnergy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.AvailableEnergy@)">
            <summary>
            Converts the string representation of a AvailableEnergy to a AvailableEnergy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a AvailableEnergy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the AvailableEnergy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.AvailableEnergy.Subunit,Nalco.Numerics.SI.AvailableEnergy@)">
            <summary>
            Converts the string representation of a AvailableEnergy to a AvailableEnergy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a AvailableEnergy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the AvailableEnergy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.CompareTo(System.Object)">
            <summary>
            Compares the current AvailableEnergy with another AvailableEnergy.
            </summary>
            <param name="obj">AvailableEnergy to compare with this AvailableEnergy.</param>
            <returns>Less than zero when this AvailableEnergy is less than the other parameter.
            Zero when this AvailableEnergy is equal to the other parameter.
            Greater than zero when this AvailableEnergy is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of AvailableEnergy.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.CompareTo(Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Compares the current AvailableEnergy with another AvailableEnergy.
            </summary>
            <param name="other">AvailableEnergy to compare with this AvailableEnergy.</param>
            <returns>Less than zero when this AvailableEnergy is less than the other parameter.
            Zero when this AvailableEnergy is equal to the other parameter.
            Greater than zero when this AvailableEnergy is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current AvailableEnergy.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.Abs(Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Returns the absolute value of a AvailableEnergy.
            </summary>
            <param name="value">A AvailableEnergy.</param>
            <returns>A AvailableEnergy that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.Round(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Returns a AvailableEnergy rounded to the nearest interval.
            </summary>
            <param name="value">A AvailableEnergy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A AvailableEnergy rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.Round(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.AvailableEnergy,System.MidpointRounding)">
            <summary>
            Returns a AvailableEnergy rounded to the nearest interval.
            </summary>
            <param name="value">A AvailableEnergy.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A AvailableEnergy rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.Floor(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Returns a AvailableEnergy rounded down to the nearest interval.
            </summary>
            <param name="value">A AvailableEnergy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A AvailableEnergy rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.Ceiling(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Returns a AvailableEnergy rounded up to the nearest interval.
            </summary>
            <param name="value">A AvailableEnergy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A AvailableEnergy rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_Equality(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Determines whether two AvailableEnergys are equal.
            </summary>
            <param name="l">Left AvailableEnergy.</param>
            <param name="r">Right AvailableEnergy.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_Inequality(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Determines whether two AvailableEnergys are not equal.
            </summary>
            <param name="l">Left AvailableEnergy.</param>
            <param name="r">Right AvailableEnergy.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_LessThan(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Determines if the left AvailableEnergy is less than the right AvailableEnergy.
            </summary>
            <param name="l">Left AvailableEnergy.</param>
            <param name="r">Right AvailableEnergy.</param>
            <returns>True if the left AvailableEnergy is less than the right AvailableEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_LessThanOrEqual(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Determines if the left AvailableEnergy is less than or equal to the right AvailableEnergy.
            </summary>
            <param name="l">Left AvailableEnergy.</param>
            <param name="r">Right AvailableEnergy.</param>
            <returns>True if the left AvailableEnergy is less than or equal to the right AvailableEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_GreaterThanOrEqual(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Determines if the left AvailableEnergy is greater than or equal to the right AvailableEnergy.
            </summary>
            <param name="l">Left AvailableEnergy.</param>
            <param name="r">Right AvailableEnergy.</param>
            <returns>True if the left AvailableEnergy is greater than or equal to the right AvailableEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_GreaterThan(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Determines if the left AvailableEnergy is greater than the right AvailableEnergy.
            </summary>
            <param name="l">Left AvailableEnergy.</param>
            <param name="r">Right AvailableEnergy.</param>
            <returns>True if the left AvailableEnergy is greater than the right AvailableEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_Addition(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Add two AvailableEnergys together.
            </summary>
            <param name="l">Left AvailableEnergy.</param>
            <param name="r">Right AvailableEnergy.</param>
            <returns>Sum of AvailableEnergys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_UnaryNegation(Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Negate a AvailableEnergy.
            </summary>
            <param name="l">Left AvailableEnergy.</param>
            <returns>Negative AvailableEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_Subtraction(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Subtract two AvailableEnergys.
            </summary>
            <param name="l">Left AvailableEnergy.</param>
            <param name="r">Right AvailableEnergy.</param>
            <returns>Difference of AvailableEnergys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_Multiply(Nalco.Numerics.SI.AvailableEnergy,System.Double)">
            <summary>
            Multiply a AvailableEnergy with a double.
            </summary>
            <param name="l">Left AvailableEnergy.</param>
            <param name="r">Double value.</param>
            <returns>AvailableEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_Multiply(System.Double,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Multiply a AvailableEnergy with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right AvailableEnergy.</param>
            <returns>AvailableEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_Division(Nalco.Numerics.SI.AvailableEnergy,System.Double)">
            <summary>
            Divide a AvailableEnergy by a double.
            </summary>
            <param name="l">Left AvailableEnergy.</param>
            <param name="r">Double value.</param>
            <returns>AvailableEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_Division(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Divide a AvailableEnergy by another AvailableEnergy.
            </summary>
            <param name="l">Left AvailableEnergy.</param>
            <param name="r">Right AvailableEnergy.</param>
            <returns>Ratio of the two AvailableEnergys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_Modulus(Nalco.Numerics.SI.AvailableEnergy,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Divide a AvailableEnergy by another AvailableEnergy and return the remainder.
            </summary>
            <param name="l">Left AvailableEnergy.</param>
            <param name="r">Right AvailableEnergy.</param>
            <returns>Remainder after a AvailableEnergy is divided by a AvailableEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_Explicit(Nalco.Numerics.SI.AvailableEnergy)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the AvailableEnergy into a weakly typed Scalar.
            </summary>
            <param name="l">AvailableEnergy.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.AvailableEnergy.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.AvailableEnergy">
            <summary>
            Explicitly convert the weakly typed Scalar into a AvailableEnergy.
            </summary>
            <param name="s">Scalar.</param>
            <returns>AvailableEnergy.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Acceleration">
            <summary>
            Acceleration (meters per square second).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Acceleration.Gravity">
            <summary>
            Acceleration of gravity.
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.Acceleration.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Acceleration.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Acceleration.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.#ctor(System.Double)">
            <summary>
            Construct a new TypedScalarTemplate with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_Multiply(Nalco.Numerics.SI.Acceleration,Nalco.Numerics.SI.Time)">
            <summary>
            Multiply an acceleration by a time.
            </summary>
            <param name="l">Left acceleration.</param>
            <param name="r">Right time.</param>
            <returns>Resulting velocity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_Multiply(Nalco.Numerics.SI.Acceleration,Nalco.Numerics.SI.Mass)">
            <summary>
            Multiply an acceleration by a mass.
            </summary>
            <param name="l">Left acceleration.</param>
            <param name="r">Right mass.</param>
            <returns>Resulting force.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.Acceleration.Zero">
            <summary>
            Acceleration of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.#ctor(System.Double,Nalco.Numerics.SI.Acceleration.Subunit)">
            <summary>
            Construct a Acceleration with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Acceleration.Item(Nalco.Numerics.SI.Acceleration.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Acceleration.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.Abbreviation(Nalco.Numerics.SI.Acceleration.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.Description(Nalco.Numerics.SI.Acceleration.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Acceleration.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.Parse(System.String)">
            <summary>
            Converts the string representation of a Acceleration to a Acceleration.
            </summary>
            <param name="s">A string that contains a Acceleration to convert.</param>
            <returns>A Acceleration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Acceleration to a Acceleration.
            </summary>
            <param name="s">A string that contains a Acceleration to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Acceleration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Acceleration to a Acceleration.
            </summary>
            <param name="s">A string that contains a Acceleration to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Acceleration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Acceleration.Subunit)">
            <summary>
            Converts the string representation of a Acceleration to a Acceleration.
            </summary>
            <param name="s">A string that contains a Acceleration to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Acceleration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.TryParse(System.String,Nalco.Numerics.SI.Acceleration@)">
            <summary>
            Converts the string representation of a Acceleration to a Acceleration. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Acceleration to convert.</param>
            <param name="result">When this method returns, contains the Acceleration, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Acceleration@)">
            <summary>
            Converts the string representation of a Acceleration to a Acceleration. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Acceleration to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Acceleration, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Acceleration@)">
            <summary>
            Converts the string representation of a Acceleration to a Acceleration. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Acceleration to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Acceleration, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Acceleration.Subunit,Nalco.Numerics.SI.Acceleration@)">
            <summary>
            Converts the string representation of a Acceleration to a Acceleration. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Acceleration to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Acceleration, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.CompareTo(System.Object)">
            <summary>
            Compares the current Acceleration with another Acceleration.
            </summary>
            <param name="obj">Acceleration to compare with this Acceleration.</param>
            <returns>Less than zero when this Acceleration is less than the other parameter.
            Zero when this Acceleration is equal to the other parameter.
            Greater than zero when this Acceleration is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Acceleration.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.CompareTo(Nalco.Numerics.SI.Acceleration)">
            <summary>
            Compares the current Acceleration with another Acceleration.
            </summary>
            <param name="other">Acceleration to compare with this Acceleration.</param>
            <returns>Less than zero when this Acceleration is less than the other parameter.
            Zero when this Acceleration is equal to the other parameter.
            Greater than zero when this Acceleration is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Acceleration.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.Abs(Nalco.Numerics.SI.Acceleration)">
            <summary>
            Returns the absolute value of a Acceleration.
            </summary>
            <param name="value">A Acceleration.</param>
            <returns>A Acceleration that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.Round(Nalco.Numerics.SI.Acceleration,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Returns a Acceleration rounded to the nearest interval.
            </summary>
            <param name="value">A Acceleration.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Acceleration rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.Round(Nalco.Numerics.SI.Acceleration,Nalco.Numerics.SI.Acceleration,System.MidpointRounding)">
            <summary>
            Returns a Acceleration rounded to the nearest interval.
            </summary>
            <param name="value">A Acceleration.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Acceleration rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.Floor(Nalco.Numerics.SI.Acceleration,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Returns a Acceleration rounded down to the nearest interval.
            </summary>
            <param name="value">A Acceleration.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Acceleration rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.Ceiling(Nalco.Numerics.SI.Acceleration,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Returns a Acceleration rounded up to the nearest interval.
            </summary>
            <param name="value">A Acceleration.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Acceleration rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_Equality(Nalco.Numerics.SI.Acceleration,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Determines whether two Accelerations are equal.
            </summary>
            <param name="l">Left Acceleration.</param>
            <param name="r">Right Acceleration.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_Inequality(Nalco.Numerics.SI.Acceleration,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Determines whether two Accelerations are not equal.
            </summary>
            <param name="l">Left Acceleration.</param>
            <param name="r">Right Acceleration.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_LessThan(Nalco.Numerics.SI.Acceleration,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Determines if the left Acceleration is less than the right Acceleration.
            </summary>
            <param name="l">Left Acceleration.</param>
            <param name="r">Right Acceleration.</param>
            <returns>True if the left Acceleration is less than the right Acceleration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_LessThanOrEqual(Nalco.Numerics.SI.Acceleration,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Determines if the left Acceleration is less than or equal to the right Acceleration.
            </summary>
            <param name="l">Left Acceleration.</param>
            <param name="r">Right Acceleration.</param>
            <returns>True if the left Acceleration is less than or equal to the right Acceleration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_GreaterThanOrEqual(Nalco.Numerics.SI.Acceleration,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Determines if the left Acceleration is greater than or equal to the right Acceleration.
            </summary>
            <param name="l">Left Acceleration.</param>
            <param name="r">Right Acceleration.</param>
            <returns>True if the left Acceleration is greater than or equal to the right Acceleration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_GreaterThan(Nalco.Numerics.SI.Acceleration,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Determines if the left Acceleration is greater than the right Acceleration.
            </summary>
            <param name="l">Left Acceleration.</param>
            <param name="r">Right Acceleration.</param>
            <returns>True if the left Acceleration is greater than the right Acceleration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_Addition(Nalco.Numerics.SI.Acceleration,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Add two Accelerations together.
            </summary>
            <param name="l">Left Acceleration.</param>
            <param name="r">Right Acceleration.</param>
            <returns>Sum of Accelerations.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_UnaryNegation(Nalco.Numerics.SI.Acceleration)">
            <summary>
            Negate a Acceleration.
            </summary>
            <param name="l">Left Acceleration.</param>
            <returns>Negative Acceleration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_Subtraction(Nalco.Numerics.SI.Acceleration,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Subtract two Accelerations.
            </summary>
            <param name="l">Left Acceleration.</param>
            <param name="r">Right Acceleration.</param>
            <returns>Difference of Accelerations.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_Multiply(Nalco.Numerics.SI.Acceleration,System.Double)">
            <summary>
            Multiply a Acceleration with a double.
            </summary>
            <param name="l">Left Acceleration.</param>
            <param name="r">Double value.</param>
            <returns>Acceleration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_Multiply(System.Double,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Multiply a Acceleration with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Acceleration.</param>
            <returns>Acceleration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_Division(Nalco.Numerics.SI.Acceleration,System.Double)">
            <summary>
            Divide a Acceleration by a double.
            </summary>
            <param name="l">Left Acceleration.</param>
            <param name="r">Double value.</param>
            <returns>Acceleration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_Division(Nalco.Numerics.SI.Acceleration,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Divide a Acceleration by another Acceleration.
            </summary>
            <param name="l">Left Acceleration.</param>
            <param name="r">Right Acceleration.</param>
            <returns>Ratio of the two Accelerations.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_Modulus(Nalco.Numerics.SI.Acceleration,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Divide a Acceleration by another Acceleration and return the remainder.
            </summary>
            <param name="l">Left Acceleration.</param>
            <param name="r">Right Acceleration.</param>
            <returns>Remainder after a Acceleration is divided by a Acceleration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_Explicit(Nalco.Numerics.SI.Acceleration)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Acceleration into a weakly typed Scalar.
            </summary>
            <param name="l">Acceleration.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Acceleration.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Acceleration">
            <summary>
            Explicitly convert the weakly typed Scalar into a Acceleration.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Acceleration.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.ConductivityElectrolytic">
            <summary>
            Conductivity electrolytic (Siemens per meter).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.ConductivityElectrolytic.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ConductivityElectrolytic.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ConductivityElectrolytic.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.#ctor(System.Double)">
            <summary>
            Construct a new Conductivity electrolytic with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="F:Nalco.Numerics.SI.ConductivityElectrolytic.Zero">
            <summary>
            ConductivityElectrolytic of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.#ctor(System.Double,Nalco.Numerics.SI.ConductivityElectrolytic.Subunit)">
            <summary>
            Construct a ConductivityElectrolytic with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.ConductivityElectrolytic.Item(Nalco.Numerics.SI.ConductivityElectrolytic.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.ConductivityElectrolytic.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.Abbreviation(Nalco.Numerics.SI.ConductivityElectrolytic.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.Description(Nalco.Numerics.SI.ConductivityElectrolytic.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.ConductivityElectrolytic.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.Parse(System.String)">
            <summary>
            Converts the string representation of a ConductivityElectrolytic to a ConductivityElectrolytic.
            </summary>
            <param name="s">A string that contains a ConductivityElectrolytic to convert.</param>
            <returns>A ConductivityElectrolytic.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ConductivityElectrolytic to a ConductivityElectrolytic.
            </summary>
            <param name="s">A string that contains a ConductivityElectrolytic to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A ConductivityElectrolytic.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ConductivityElectrolytic to a ConductivityElectrolytic.
            </summary>
            <param name="s">A string that contains a ConductivityElectrolytic to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A ConductivityElectrolytic.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ConductivityElectrolytic.Subunit)">
            <summary>
            Converts the string representation of a ConductivityElectrolytic to a ConductivityElectrolytic.
            </summary>
            <param name="s">A string that contains a ConductivityElectrolytic to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A ConductivityElectrolytic.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.TryParse(System.String,Nalco.Numerics.SI.ConductivityElectrolytic@)">
            <summary>
            Converts the string representation of a ConductivityElectrolytic to a ConductivityElectrolytic. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ConductivityElectrolytic to convert.</param>
            <param name="result">When this method returns, contains the ConductivityElectrolytic, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.ConductivityElectrolytic@)">
            <summary>
            Converts the string representation of a ConductivityElectrolytic to a ConductivityElectrolytic. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ConductivityElectrolytic to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ConductivityElectrolytic, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ConductivityElectrolytic@)">
            <summary>
            Converts the string representation of a ConductivityElectrolytic to a ConductivityElectrolytic. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ConductivityElectrolytic to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ConductivityElectrolytic, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ConductivityElectrolytic.Subunit,Nalco.Numerics.SI.ConductivityElectrolytic@)">
            <summary>
            Converts the string representation of a ConductivityElectrolytic to a ConductivityElectrolytic. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ConductivityElectrolytic to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the ConductivityElectrolytic, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.CompareTo(System.Object)">
            <summary>
            Compares the current ConductivityElectrolytic with another ConductivityElectrolytic.
            </summary>
            <param name="obj">ConductivityElectrolytic to compare with this ConductivityElectrolytic.</param>
            <returns>Less than zero when this ConductivityElectrolytic is less than the other parameter.
            Zero when this ConductivityElectrolytic is equal to the other parameter.
            Greater than zero when this ConductivityElectrolytic is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of ConductivityElectrolytic.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.CompareTo(Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Compares the current ConductivityElectrolytic with another ConductivityElectrolytic.
            </summary>
            <param name="other">ConductivityElectrolytic to compare with this ConductivityElectrolytic.</param>
            <returns>Less than zero when this ConductivityElectrolytic is less than the other parameter.
            Zero when this ConductivityElectrolytic is equal to the other parameter.
            Greater than zero when this ConductivityElectrolytic is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current ConductivityElectrolytic.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.Abs(Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Returns the absolute value of a ConductivityElectrolytic.
            </summary>
            <param name="value">A ConductivityElectrolytic.</param>
            <returns>A ConductivityElectrolytic that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.Round(Nalco.Numerics.SI.ConductivityElectrolytic,Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Returns a ConductivityElectrolytic rounded to the nearest interval.
            </summary>
            <param name="value">A ConductivityElectrolytic.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ConductivityElectrolytic rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.Round(Nalco.Numerics.SI.ConductivityElectrolytic,Nalco.Numerics.SI.ConductivityElectrolytic,System.MidpointRounding)">
            <summary>
            Returns a ConductivityElectrolytic rounded to the nearest interval.
            </summary>
            <param name="value">A ConductivityElectrolytic.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A ConductivityElectrolytic rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.Floor(Nalco.Numerics.SI.ConductivityElectrolytic,Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Returns a ConductivityElectrolytic rounded down to the nearest interval.
            </summary>
            <param name="value">A ConductivityElectrolytic.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ConductivityElectrolytic rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.Ceiling(Nalco.Numerics.SI.ConductivityElectrolytic,Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Returns a ConductivityElectrolytic rounded up to the nearest interval.
            </summary>
            <param name="value">A ConductivityElectrolytic.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ConductivityElectrolytic rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.op_Equality(Nalco.Numerics.SI.ConductivityElectrolytic,Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Determines whether two ConductivityElectrolytics are equal.
            </summary>
            <param name="l">Left ConductivityElectrolytic.</param>
            <param name="r">Right ConductivityElectrolytic.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.op_Inequality(Nalco.Numerics.SI.ConductivityElectrolytic,Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Determines whether two ConductivityElectrolytics are not equal.
            </summary>
            <param name="l">Left ConductivityElectrolytic.</param>
            <param name="r">Right ConductivityElectrolytic.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.op_LessThan(Nalco.Numerics.SI.ConductivityElectrolytic,Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Determines if the left ConductivityElectrolytic is less than the right ConductivityElectrolytic.
            </summary>
            <param name="l">Left ConductivityElectrolytic.</param>
            <param name="r">Right ConductivityElectrolytic.</param>
            <returns>True if the left ConductivityElectrolytic is less than the right ConductivityElectrolytic.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.op_LessThanOrEqual(Nalco.Numerics.SI.ConductivityElectrolytic,Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Determines if the left ConductivityElectrolytic is less than or equal to the right ConductivityElectrolytic.
            </summary>
            <param name="l">Left ConductivityElectrolytic.</param>
            <param name="r">Right ConductivityElectrolytic.</param>
            <returns>True if the left ConductivityElectrolytic is less than or equal to the right ConductivityElectrolytic.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.op_GreaterThanOrEqual(Nalco.Numerics.SI.ConductivityElectrolytic,Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Determines if the left ConductivityElectrolytic is greater than or equal to the right ConductivityElectrolytic.
            </summary>
            <param name="l">Left ConductivityElectrolytic.</param>
            <param name="r">Right ConductivityElectrolytic.</param>
            <returns>True if the left ConductivityElectrolytic is greater than or equal to the right ConductivityElectrolytic.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.op_GreaterThan(Nalco.Numerics.SI.ConductivityElectrolytic,Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Determines if the left ConductivityElectrolytic is greater than the right ConductivityElectrolytic.
            </summary>
            <param name="l">Left ConductivityElectrolytic.</param>
            <param name="r">Right ConductivityElectrolytic.</param>
            <returns>True if the left ConductivityElectrolytic is greater than the right ConductivityElectrolytic.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.op_Addition(Nalco.Numerics.SI.ConductivityElectrolytic,Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Add two ConductivityElectrolytics together.
            </summary>
            <param name="l">Left ConductivityElectrolytic.</param>
            <param name="r">Right ConductivityElectrolytic.</param>
            <returns>Sum of ConductivityElectrolytics.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.op_UnaryNegation(Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Negate a ConductivityElectrolytic.
            </summary>
            <param name="l">Left ConductivityElectrolytic.</param>
            <returns>Negative ConductivityElectrolytic.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.op_Subtraction(Nalco.Numerics.SI.ConductivityElectrolytic,Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Subtract two ConductivityElectrolytics.
            </summary>
            <param name="l">Left ConductivityElectrolytic.</param>
            <param name="r">Right ConductivityElectrolytic.</param>
            <returns>Difference of ConductivityElectrolytics.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.op_Multiply(Nalco.Numerics.SI.ConductivityElectrolytic,System.Double)">
            <summary>
            Multiply a ConductivityElectrolytic with a double.
            </summary>
            <param name="l">Left ConductivityElectrolytic.</param>
            <param name="r">Double value.</param>
            <returns>ConductivityElectrolytic.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.op_Multiply(System.Double,Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Multiply a ConductivityElectrolytic with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right ConductivityElectrolytic.</param>
            <returns>ConductivityElectrolytic.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.op_Division(Nalco.Numerics.SI.ConductivityElectrolytic,System.Double)">
            <summary>
            Divide a ConductivityElectrolytic by a double.
            </summary>
            <param name="l">Left ConductivityElectrolytic.</param>
            <param name="r">Double value.</param>
            <returns>ConductivityElectrolytic.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.op_Division(Nalco.Numerics.SI.ConductivityElectrolytic,Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Divide a ConductivityElectrolytic by another ConductivityElectrolytic.
            </summary>
            <param name="l">Left ConductivityElectrolytic.</param>
            <param name="r">Right ConductivityElectrolytic.</param>
            <returns>Ratio of the two ConductivityElectrolytics.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.op_Modulus(Nalco.Numerics.SI.ConductivityElectrolytic,Nalco.Numerics.SI.ConductivityElectrolytic)">
            <summary>
            Divide a ConductivityElectrolytic by another ConductivityElectrolytic and return the remainder.
            </summary>
            <param name="l">Left ConductivityElectrolytic.</param>
            <param name="r">Right ConductivityElectrolytic.</param>
            <returns>Remainder after a ConductivityElectrolytic is divided by a ConductivityElectrolytic.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.op_Explicit(Nalco.Numerics.SI.ConductivityElectrolytic)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the ConductivityElectrolytic into a weakly typed Scalar.
            </summary>
            <param name="l">ConductivityElectrolytic.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ConductivityElectrolytic.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.ConductivityElectrolytic">
            <summary>
            Explicitly convert the weakly typed Scalar into a ConductivityElectrolytic.
            </summary>
            <param name="s">Scalar.</param>
            <returns>ConductivityElectrolytic.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.EmissionFactor">
            <summary>
            Emission Factor (kilograms per joule).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.EmissionFactor.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.EmissionFactor.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
            <remarks>
            kg/J = kg / m2 kg s-2 = m-2 s2
            </remarks>
        </member>
        <member name="F:Nalco.Numerics.SI.EmissionFactor.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.#ctor(System.Double)">
            <summary>
            Construct a new Emission Factor with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_Multiply(Nalco.Numerics.SI.EmissionFactor,Nalco.Numerics.SI.Power)">
            <summary>
            Multiply an emission factor by a power.
            </summary>
            <param name="l">Left emission factor.</param>
            <param name="r">Right power.</param>
            <returns>Resulting mass rate.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.EmissionFactor.Zero">
            <summary>
            EmissionFactor of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.#ctor(System.Double,Nalco.Numerics.SI.EmissionFactor.Subunit)">
            <summary>
            Construct a EmissionFactor with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.EmissionFactor.Item(Nalco.Numerics.SI.EmissionFactor.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.EmissionFactor.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.Abbreviation(Nalco.Numerics.SI.EmissionFactor.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.Description(Nalco.Numerics.SI.EmissionFactor.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.EmissionFactor.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.Parse(System.String)">
            <summary>
            Converts the string representation of a EmissionFactor to a EmissionFactor.
            </summary>
            <param name="s">A string that contains a EmissionFactor to convert.</param>
            <returns>A EmissionFactor.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a EmissionFactor to a EmissionFactor.
            </summary>
            <param name="s">A string that contains a EmissionFactor to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A EmissionFactor.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a EmissionFactor to a EmissionFactor.
            </summary>
            <param name="s">A string that contains a EmissionFactor to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A EmissionFactor.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.EmissionFactor.Subunit)">
            <summary>
            Converts the string representation of a EmissionFactor to a EmissionFactor.
            </summary>
            <param name="s">A string that contains a EmissionFactor to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A EmissionFactor.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.TryParse(System.String,Nalco.Numerics.SI.EmissionFactor@)">
            <summary>
            Converts the string representation of a EmissionFactor to a EmissionFactor. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a EmissionFactor to convert.</param>
            <param name="result">When this method returns, contains the EmissionFactor, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.EmissionFactor@)">
            <summary>
            Converts the string representation of a EmissionFactor to a EmissionFactor. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a EmissionFactor to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the EmissionFactor, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.EmissionFactor@)">
            <summary>
            Converts the string representation of a EmissionFactor to a EmissionFactor. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a EmissionFactor to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the EmissionFactor, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.EmissionFactor.Subunit,Nalco.Numerics.SI.EmissionFactor@)">
            <summary>
            Converts the string representation of a EmissionFactor to a EmissionFactor. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a EmissionFactor to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the EmissionFactor, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.CompareTo(System.Object)">
            <summary>
            Compares the current EmissionFactor with another EmissionFactor.
            </summary>
            <param name="obj">EmissionFactor to compare with this EmissionFactor.</param>
            <returns>Less than zero when this EmissionFactor is less than the other parameter.
            Zero when this EmissionFactor is equal to the other parameter.
            Greater than zero when this EmissionFactor is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of EmissionFactor.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.CompareTo(Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Compares the current EmissionFactor with another EmissionFactor.
            </summary>
            <param name="other">EmissionFactor to compare with this EmissionFactor.</param>
            <returns>Less than zero when this EmissionFactor is less than the other parameter.
            Zero when this EmissionFactor is equal to the other parameter.
            Greater than zero when this EmissionFactor is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current EmissionFactor.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.Abs(Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Returns the absolute value of a EmissionFactor.
            </summary>
            <param name="value">A EmissionFactor.</param>
            <returns>A EmissionFactor that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.Round(Nalco.Numerics.SI.EmissionFactor,Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Returns a EmissionFactor rounded to the nearest interval.
            </summary>
            <param name="value">A EmissionFactor.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A EmissionFactor rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.Round(Nalco.Numerics.SI.EmissionFactor,Nalco.Numerics.SI.EmissionFactor,System.MidpointRounding)">
            <summary>
            Returns a EmissionFactor rounded to the nearest interval.
            </summary>
            <param name="value">A EmissionFactor.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A EmissionFactor rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.Floor(Nalco.Numerics.SI.EmissionFactor,Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Returns a EmissionFactor rounded down to the nearest interval.
            </summary>
            <param name="value">A EmissionFactor.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A EmissionFactor rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.Ceiling(Nalco.Numerics.SI.EmissionFactor,Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Returns a EmissionFactor rounded up to the nearest interval.
            </summary>
            <param name="value">A EmissionFactor.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A EmissionFactor rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_Equality(Nalco.Numerics.SI.EmissionFactor,Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Determines whether two EmissionFactors are equal.
            </summary>
            <param name="l">Left EmissionFactor.</param>
            <param name="r">Right EmissionFactor.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_Inequality(Nalco.Numerics.SI.EmissionFactor,Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Determines whether two EmissionFactors are not equal.
            </summary>
            <param name="l">Left EmissionFactor.</param>
            <param name="r">Right EmissionFactor.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_LessThan(Nalco.Numerics.SI.EmissionFactor,Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Determines if the left EmissionFactor is less than the right EmissionFactor.
            </summary>
            <param name="l">Left EmissionFactor.</param>
            <param name="r">Right EmissionFactor.</param>
            <returns>True if the left EmissionFactor is less than the right EmissionFactor.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_LessThanOrEqual(Nalco.Numerics.SI.EmissionFactor,Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Determines if the left EmissionFactor is less than or equal to the right EmissionFactor.
            </summary>
            <param name="l">Left EmissionFactor.</param>
            <param name="r">Right EmissionFactor.</param>
            <returns>True if the left EmissionFactor is less than or equal to the right EmissionFactor.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_GreaterThanOrEqual(Nalco.Numerics.SI.EmissionFactor,Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Determines if the left EmissionFactor is greater than or equal to the right EmissionFactor.
            </summary>
            <param name="l">Left EmissionFactor.</param>
            <param name="r">Right EmissionFactor.</param>
            <returns>True if the left EmissionFactor is greater than or equal to the right EmissionFactor.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_GreaterThan(Nalco.Numerics.SI.EmissionFactor,Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Determines if the left EmissionFactor is greater than the right EmissionFactor.
            </summary>
            <param name="l">Left EmissionFactor.</param>
            <param name="r">Right EmissionFactor.</param>
            <returns>True if the left EmissionFactor is greater than the right EmissionFactor.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_Addition(Nalco.Numerics.SI.EmissionFactor,Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Add two EmissionFactors together.
            </summary>
            <param name="l">Left EmissionFactor.</param>
            <param name="r">Right EmissionFactor.</param>
            <returns>Sum of EmissionFactors.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_UnaryNegation(Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Negate a EmissionFactor.
            </summary>
            <param name="l">Left EmissionFactor.</param>
            <returns>Negative EmissionFactor.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_Subtraction(Nalco.Numerics.SI.EmissionFactor,Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Subtract two EmissionFactors.
            </summary>
            <param name="l">Left EmissionFactor.</param>
            <param name="r">Right EmissionFactor.</param>
            <returns>Difference of EmissionFactors.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_Multiply(Nalco.Numerics.SI.EmissionFactor,System.Double)">
            <summary>
            Multiply a EmissionFactor with a double.
            </summary>
            <param name="l">Left EmissionFactor.</param>
            <param name="r">Double value.</param>
            <returns>EmissionFactor.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_Multiply(System.Double,Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Multiply a EmissionFactor with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right EmissionFactor.</param>
            <returns>EmissionFactor.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_Division(Nalco.Numerics.SI.EmissionFactor,System.Double)">
            <summary>
            Divide a EmissionFactor by a double.
            </summary>
            <param name="l">Left EmissionFactor.</param>
            <param name="r">Double value.</param>
            <returns>EmissionFactor.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_Division(Nalco.Numerics.SI.EmissionFactor,Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Divide a EmissionFactor by another EmissionFactor.
            </summary>
            <param name="l">Left EmissionFactor.</param>
            <param name="r">Right EmissionFactor.</param>
            <returns>Ratio of the two EmissionFactors.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_Modulus(Nalco.Numerics.SI.EmissionFactor,Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Divide a EmissionFactor by another EmissionFactor and return the remainder.
            </summary>
            <param name="l">Left EmissionFactor.</param>
            <param name="r">Right EmissionFactor.</param>
            <returns>Remainder after a EmissionFactor is divided by a EmissionFactor.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_Explicit(Nalco.Numerics.SI.EmissionFactor)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the EmissionFactor into a weakly typed Scalar.
            </summary>
            <param name="l">EmissionFactor.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EmissionFactor.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.EmissionFactor">
            <summary>
            Explicitly convert the weakly typed Scalar into a EmissionFactor.
            </summary>
            <param name="s">Scalar.</param>
            <returns>EmissionFactor.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.EnergyDensity">
            <summary>
            Energy Density (joules per cubic meter).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.EnergyDensity.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.EnergyDensity.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
            <remarks>
            J/(m) = m2 kg s-2 / m3 = m-1 kg s-2
            </remarks>
        </member>
        <member name="F:Nalco.Numerics.SI.EnergyDensity.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.#ctor(System.Double)">
            <summary>
            Construct a new EnergyDensity with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_Multiply(Nalco.Numerics.SI.EnergyDensity,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Multiply an energy density by a volume rate.
            </summary>
            <param name="l">Left energy density.</param>
            <param name="r">Right volume rate.</param>
            <returns>Resulting power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_Multiply(Nalco.Numerics.SI.EnergyDensity,Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Multiply an energy density by a reciprocal energy
            </summary>
            <param name="l">Left energy density.</param>
            <param name="r">Right reciprocal energy.</param>
            <returns>Resulting reciprocal volume.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.EnergyDensity.Zero">
            <summary>
            EnergyDensity of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.#ctor(System.Double,Nalco.Numerics.SI.EnergyDensity.Subunit)">
            <summary>
            Construct a EnergyDensity with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.EnergyDensity.Item(Nalco.Numerics.SI.EnergyDensity.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.EnergyDensity.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.Abbreviation(Nalco.Numerics.SI.EnergyDensity.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.Description(Nalco.Numerics.SI.EnergyDensity.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.EnergyDensity.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.Parse(System.String)">
            <summary>
            Converts the string representation of a EnergyDensity to a EnergyDensity.
            </summary>
            <param name="s">A string that contains a EnergyDensity to convert.</param>
            <returns>A EnergyDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a EnergyDensity to a EnergyDensity.
            </summary>
            <param name="s">A string that contains a EnergyDensity to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A EnergyDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a EnergyDensity to a EnergyDensity.
            </summary>
            <param name="s">A string that contains a EnergyDensity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A EnergyDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.EnergyDensity.Subunit)">
            <summary>
            Converts the string representation of a EnergyDensity to a EnergyDensity.
            </summary>
            <param name="s">A string that contains a EnergyDensity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A EnergyDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.TryParse(System.String,Nalco.Numerics.SI.EnergyDensity@)">
            <summary>
            Converts the string representation of a EnergyDensity to a EnergyDensity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a EnergyDensity to convert.</param>
            <param name="result">When this method returns, contains the EnergyDensity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.EnergyDensity@)">
            <summary>
            Converts the string representation of a EnergyDensity to a EnergyDensity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a EnergyDensity to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the EnergyDensity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.EnergyDensity@)">
            <summary>
            Converts the string representation of a EnergyDensity to a EnergyDensity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a EnergyDensity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the EnergyDensity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.EnergyDensity.Subunit,Nalco.Numerics.SI.EnergyDensity@)">
            <summary>
            Converts the string representation of a EnergyDensity to a EnergyDensity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a EnergyDensity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the EnergyDensity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.CompareTo(System.Object)">
            <summary>
            Compares the current EnergyDensity with another EnergyDensity.
            </summary>
            <param name="obj">EnergyDensity to compare with this EnergyDensity.</param>
            <returns>Less than zero when this EnergyDensity is less than the other parameter.
            Zero when this EnergyDensity is equal to the other parameter.
            Greater than zero when this EnergyDensity is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of EnergyDensity.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.CompareTo(Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Compares the current EnergyDensity with another EnergyDensity.
            </summary>
            <param name="other">EnergyDensity to compare with this EnergyDensity.</param>
            <returns>Less than zero when this EnergyDensity is less than the other parameter.
            Zero when this EnergyDensity is equal to the other parameter.
            Greater than zero when this EnergyDensity is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current EnergyDensity.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.Abs(Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Returns the absolute value of a EnergyDensity.
            </summary>
            <param name="value">A EnergyDensity.</param>
            <returns>A EnergyDensity that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.Round(Nalco.Numerics.SI.EnergyDensity,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Returns a EnergyDensity rounded to the nearest interval.
            </summary>
            <param name="value">A EnergyDensity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A EnergyDensity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.Round(Nalco.Numerics.SI.EnergyDensity,Nalco.Numerics.SI.EnergyDensity,System.MidpointRounding)">
            <summary>
            Returns a EnergyDensity rounded to the nearest interval.
            </summary>
            <param name="value">A EnergyDensity.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A EnergyDensity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.Floor(Nalco.Numerics.SI.EnergyDensity,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Returns a EnergyDensity rounded down to the nearest interval.
            </summary>
            <param name="value">A EnergyDensity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A EnergyDensity rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.Ceiling(Nalco.Numerics.SI.EnergyDensity,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Returns a EnergyDensity rounded up to the nearest interval.
            </summary>
            <param name="value">A EnergyDensity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A EnergyDensity rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_Equality(Nalco.Numerics.SI.EnergyDensity,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Determines whether two EnergyDensitys are equal.
            </summary>
            <param name="l">Left EnergyDensity.</param>
            <param name="r">Right EnergyDensity.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_Inequality(Nalco.Numerics.SI.EnergyDensity,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Determines whether two EnergyDensitys are not equal.
            </summary>
            <param name="l">Left EnergyDensity.</param>
            <param name="r">Right EnergyDensity.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_LessThan(Nalco.Numerics.SI.EnergyDensity,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Determines if the left EnergyDensity is less than the right EnergyDensity.
            </summary>
            <param name="l">Left EnergyDensity.</param>
            <param name="r">Right EnergyDensity.</param>
            <returns>True if the left EnergyDensity is less than the right EnergyDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_LessThanOrEqual(Nalco.Numerics.SI.EnergyDensity,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Determines if the left EnergyDensity is less than or equal to the right EnergyDensity.
            </summary>
            <param name="l">Left EnergyDensity.</param>
            <param name="r">Right EnergyDensity.</param>
            <returns>True if the left EnergyDensity is less than or equal to the right EnergyDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_GreaterThanOrEqual(Nalco.Numerics.SI.EnergyDensity,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Determines if the left EnergyDensity is greater than or equal to the right EnergyDensity.
            </summary>
            <param name="l">Left EnergyDensity.</param>
            <param name="r">Right EnergyDensity.</param>
            <returns>True if the left EnergyDensity is greater than or equal to the right EnergyDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_GreaterThan(Nalco.Numerics.SI.EnergyDensity,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Determines if the left EnergyDensity is greater than the right EnergyDensity.
            </summary>
            <param name="l">Left EnergyDensity.</param>
            <param name="r">Right EnergyDensity.</param>
            <returns>True if the left EnergyDensity is greater than the right EnergyDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_Addition(Nalco.Numerics.SI.EnergyDensity,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Add two EnergyDensitys together.
            </summary>
            <param name="l">Left EnergyDensity.</param>
            <param name="r">Right EnergyDensity.</param>
            <returns>Sum of EnergyDensitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_UnaryNegation(Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Negate a EnergyDensity.
            </summary>
            <param name="l">Left EnergyDensity.</param>
            <returns>Negative EnergyDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_Subtraction(Nalco.Numerics.SI.EnergyDensity,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Subtract two EnergyDensitys.
            </summary>
            <param name="l">Left EnergyDensity.</param>
            <param name="r">Right EnergyDensity.</param>
            <returns>Difference of EnergyDensitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_Multiply(Nalco.Numerics.SI.EnergyDensity,System.Double)">
            <summary>
            Multiply a EnergyDensity with a double.
            </summary>
            <param name="l">Left EnergyDensity.</param>
            <param name="r">Double value.</param>
            <returns>EnergyDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_Multiply(System.Double,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Multiply a EnergyDensity with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right EnergyDensity.</param>
            <returns>EnergyDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_Division(Nalco.Numerics.SI.EnergyDensity,System.Double)">
            <summary>
            Divide a EnergyDensity by a double.
            </summary>
            <param name="l">Left EnergyDensity.</param>
            <param name="r">Double value.</param>
            <returns>EnergyDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_Division(Nalco.Numerics.SI.EnergyDensity,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Divide a EnergyDensity by another EnergyDensity.
            </summary>
            <param name="l">Left EnergyDensity.</param>
            <param name="r">Right EnergyDensity.</param>
            <returns>Ratio of the two EnergyDensitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_Modulus(Nalco.Numerics.SI.EnergyDensity,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Divide a EnergyDensity by another EnergyDensity and return the remainder.
            </summary>
            <param name="l">Left EnergyDensity.</param>
            <param name="r">Right EnergyDensity.</param>
            <returns>Remainder after a EnergyDensity is divided by a EnergyDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_Explicit(Nalco.Numerics.SI.EnergyDensity)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the EnergyDensity into a weakly typed Scalar.
            </summary>
            <param name="l">EnergyDensity.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.EnergyDensity.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.EnergyDensity">
            <summary>
            Explicitly convert the weakly typed Scalar into a EnergyDensity.
            </summary>
            <param name="s">Scalar.</param>
            <returns>EnergyDensity.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.HeatTransferCoefficient">
            <summary>
            Heat transfer coefficient (watts per square meter kelvin).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.HeatTransferCoefficient.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.HeatTransferCoefficient.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.HeatTransferCoefficient.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.#ctor(System.Double)">
            <summary>
            Construct a new Heat transfer coefficient with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="F:Nalco.Numerics.SI.HeatTransferCoefficient.Zero">
            <summary>
            HeatTransferCoefficient of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.#ctor(System.Double,Nalco.Numerics.SI.HeatTransferCoefficient.Subunit)">
            <summary>
            Construct a HeatTransferCoefficient with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.HeatTransferCoefficient.Item(Nalco.Numerics.SI.HeatTransferCoefficient.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.HeatTransferCoefficient.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.Abbreviation(Nalco.Numerics.SI.HeatTransferCoefficient.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.Description(Nalco.Numerics.SI.HeatTransferCoefficient.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.HeatTransferCoefficient.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.Parse(System.String)">
            <summary>
            Converts the string representation of a HeatTransferCoefficient to a HeatTransferCoefficient.
            </summary>
            <param name="s">A string that contains a HeatTransferCoefficient to convert.</param>
            <returns>A HeatTransferCoefficient.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a HeatTransferCoefficient to a HeatTransferCoefficient.
            </summary>
            <param name="s">A string that contains a HeatTransferCoefficient to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A HeatTransferCoefficient.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a HeatTransferCoefficient to a HeatTransferCoefficient.
            </summary>
            <param name="s">A string that contains a HeatTransferCoefficient to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A HeatTransferCoefficient.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.HeatTransferCoefficient.Subunit)">
            <summary>
            Converts the string representation of a HeatTransferCoefficient to a HeatTransferCoefficient.
            </summary>
            <param name="s">A string that contains a HeatTransferCoefficient to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A HeatTransferCoefficient.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.TryParse(System.String,Nalco.Numerics.SI.HeatTransferCoefficient@)">
            <summary>
            Converts the string representation of a HeatTransferCoefficient to a HeatTransferCoefficient. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a HeatTransferCoefficient to convert.</param>
            <param name="result">When this method returns, contains the HeatTransferCoefficient, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.HeatTransferCoefficient@)">
            <summary>
            Converts the string representation of a HeatTransferCoefficient to a HeatTransferCoefficient. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a HeatTransferCoefficient to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the HeatTransferCoefficient, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.HeatTransferCoefficient@)">
            <summary>
            Converts the string representation of a HeatTransferCoefficient to a HeatTransferCoefficient. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a HeatTransferCoefficient to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the HeatTransferCoefficient, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.HeatTransferCoefficient.Subunit,Nalco.Numerics.SI.HeatTransferCoefficient@)">
            <summary>
            Converts the string representation of a HeatTransferCoefficient to a HeatTransferCoefficient. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a HeatTransferCoefficient to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the HeatTransferCoefficient, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.CompareTo(System.Object)">
            <summary>
            Compares the current HeatTransferCoefficient with another HeatTransferCoefficient.
            </summary>
            <param name="obj">HeatTransferCoefficient to compare with this HeatTransferCoefficient.</param>
            <returns>Less than zero when this HeatTransferCoefficient is less than the other parameter.
            Zero when this HeatTransferCoefficient is equal to the other parameter.
            Greater than zero when this HeatTransferCoefficient is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of HeatTransferCoefficient.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.CompareTo(Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Compares the current HeatTransferCoefficient with another HeatTransferCoefficient.
            </summary>
            <param name="other">HeatTransferCoefficient to compare with this HeatTransferCoefficient.</param>
            <returns>Less than zero when this HeatTransferCoefficient is less than the other parameter.
            Zero when this HeatTransferCoefficient is equal to the other parameter.
            Greater than zero when this HeatTransferCoefficient is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current HeatTransferCoefficient.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.Abs(Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Returns the absolute value of a HeatTransferCoefficient.
            </summary>
            <param name="value">A HeatTransferCoefficient.</param>
            <returns>A HeatTransferCoefficient that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.Round(Nalco.Numerics.SI.HeatTransferCoefficient,Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Returns a HeatTransferCoefficient rounded to the nearest interval.
            </summary>
            <param name="value">A HeatTransferCoefficient.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A HeatTransferCoefficient rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.Round(Nalco.Numerics.SI.HeatTransferCoefficient,Nalco.Numerics.SI.HeatTransferCoefficient,System.MidpointRounding)">
            <summary>
            Returns a HeatTransferCoefficient rounded to the nearest interval.
            </summary>
            <param name="value">A HeatTransferCoefficient.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A HeatTransferCoefficient rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.Floor(Nalco.Numerics.SI.HeatTransferCoefficient,Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Returns a HeatTransferCoefficient rounded down to the nearest interval.
            </summary>
            <param name="value">A HeatTransferCoefficient.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A HeatTransferCoefficient rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.Ceiling(Nalco.Numerics.SI.HeatTransferCoefficient,Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Returns a HeatTransferCoefficient rounded up to the nearest interval.
            </summary>
            <param name="value">A HeatTransferCoefficient.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A HeatTransferCoefficient rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.op_Equality(Nalco.Numerics.SI.HeatTransferCoefficient,Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Determines whether two HeatTransferCoefficients are equal.
            </summary>
            <param name="l">Left HeatTransferCoefficient.</param>
            <param name="r">Right HeatTransferCoefficient.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.op_Inequality(Nalco.Numerics.SI.HeatTransferCoefficient,Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Determines whether two HeatTransferCoefficients are not equal.
            </summary>
            <param name="l">Left HeatTransferCoefficient.</param>
            <param name="r">Right HeatTransferCoefficient.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.op_LessThan(Nalco.Numerics.SI.HeatTransferCoefficient,Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Determines if the left HeatTransferCoefficient is less than the right HeatTransferCoefficient.
            </summary>
            <param name="l">Left HeatTransferCoefficient.</param>
            <param name="r">Right HeatTransferCoefficient.</param>
            <returns>True if the left HeatTransferCoefficient is less than the right HeatTransferCoefficient.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.op_LessThanOrEqual(Nalco.Numerics.SI.HeatTransferCoefficient,Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Determines if the left HeatTransferCoefficient is less than or equal to the right HeatTransferCoefficient.
            </summary>
            <param name="l">Left HeatTransferCoefficient.</param>
            <param name="r">Right HeatTransferCoefficient.</param>
            <returns>True if the left HeatTransferCoefficient is less than or equal to the right HeatTransferCoefficient.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.op_GreaterThanOrEqual(Nalco.Numerics.SI.HeatTransferCoefficient,Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Determines if the left HeatTransferCoefficient is greater than or equal to the right HeatTransferCoefficient.
            </summary>
            <param name="l">Left HeatTransferCoefficient.</param>
            <param name="r">Right HeatTransferCoefficient.</param>
            <returns>True if the left HeatTransferCoefficient is greater than or equal to the right HeatTransferCoefficient.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.op_GreaterThan(Nalco.Numerics.SI.HeatTransferCoefficient,Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Determines if the left HeatTransferCoefficient is greater than the right HeatTransferCoefficient.
            </summary>
            <param name="l">Left HeatTransferCoefficient.</param>
            <param name="r">Right HeatTransferCoefficient.</param>
            <returns>True if the left HeatTransferCoefficient is greater than the right HeatTransferCoefficient.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.op_Addition(Nalco.Numerics.SI.HeatTransferCoefficient,Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Add two HeatTransferCoefficients together.
            </summary>
            <param name="l">Left HeatTransferCoefficient.</param>
            <param name="r">Right HeatTransferCoefficient.</param>
            <returns>Sum of HeatTransferCoefficients.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.op_UnaryNegation(Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Negate a HeatTransferCoefficient.
            </summary>
            <param name="l">Left HeatTransferCoefficient.</param>
            <returns>Negative HeatTransferCoefficient.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.op_Subtraction(Nalco.Numerics.SI.HeatTransferCoefficient,Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Subtract two HeatTransferCoefficients.
            </summary>
            <param name="l">Left HeatTransferCoefficient.</param>
            <param name="r">Right HeatTransferCoefficient.</param>
            <returns>Difference of HeatTransferCoefficients.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.op_Multiply(Nalco.Numerics.SI.HeatTransferCoefficient,System.Double)">
            <summary>
            Multiply a HeatTransferCoefficient with a double.
            </summary>
            <param name="l">Left HeatTransferCoefficient.</param>
            <param name="r">Double value.</param>
            <returns>HeatTransferCoefficient.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.op_Multiply(System.Double,Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Multiply a HeatTransferCoefficient with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right HeatTransferCoefficient.</param>
            <returns>HeatTransferCoefficient.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.op_Division(Nalco.Numerics.SI.HeatTransferCoefficient,System.Double)">
            <summary>
            Divide a HeatTransferCoefficient by a double.
            </summary>
            <param name="l">Left HeatTransferCoefficient.</param>
            <param name="r">Double value.</param>
            <returns>HeatTransferCoefficient.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.op_Division(Nalco.Numerics.SI.HeatTransferCoefficient,Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Divide a HeatTransferCoefficient by another HeatTransferCoefficient.
            </summary>
            <param name="l">Left HeatTransferCoefficient.</param>
            <param name="r">Right HeatTransferCoefficient.</param>
            <returns>Ratio of the two HeatTransferCoefficients.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.op_Modulus(Nalco.Numerics.SI.HeatTransferCoefficient,Nalco.Numerics.SI.HeatTransferCoefficient)">
            <summary>
            Divide a HeatTransferCoefficient by another HeatTransferCoefficient and return the remainder.
            </summary>
            <param name="l">Left HeatTransferCoefficient.</param>
            <param name="r">Right HeatTransferCoefficient.</param>
            <returns>Remainder after a HeatTransferCoefficient is divided by a HeatTransferCoefficient.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.op_Explicit(Nalco.Numerics.SI.HeatTransferCoefficient)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the HeatTransferCoefficient into a weakly typed Scalar.
            </summary>
            <param name="l">HeatTransferCoefficient.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatTransferCoefficient.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.HeatTransferCoefficient">
            <summary>
            Explicitly convert the weakly typed Scalar into a HeatTransferCoefficient.
            </summary>
            <param name="s">Scalar.</param>
            <returns>HeatTransferCoefficient.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.MolalConcentration">
            <summary>
            Molal concentration (moles per kilogram).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.MolalConcentration.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.MolalConcentration.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.MolalConcentration.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.#ctor(System.Double)">
            <summary>
            Construct a new MolarConcentration with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_Division(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Divide a molal concentration by a specific volume.
            </summary>
            <param name="l">Left molal concentration.</param>
            <param name="r">Right specific volume.</param>
            <returns>Resulting molar concentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_Division(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Divide a molal concentration by a molar concentration.
            </summary>
            <param name="l">Left molal concentration.</param>
            <param name="r">Right molar concentration.</param>
            <returns>Resulting specific volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_Multiply(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Multiply a molal concentration by a molar mass.
            </summary>
            <param name="l">Left molal concentration.</param>
            <param name="r">Right molar mass.</param>
            <returns>Resulting mass fraction.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_Explicit(Nalco.Numerics.SI.MolalConcentration)~Nalco.Numerics.SI.MolarMass">
            <summary>
            Explicitly convert the molal concentration into a molar mass.
            </summary>
            <param name="l">Molal concentration.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_Multiply(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.Density)">
            <summary>
            Multiply a molal concentration by a density.
            </summary>
            <param name="l">Left molal concentration.</param>
            <param name="r">Right density.</param>
            <returns>Resulting molar concentration.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.MolalConcentration.Zero">
            <summary>
            MolalConcentration of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.#ctor(System.Double,Nalco.Numerics.SI.MolalConcentration.Subunit)">
            <summary>
            Construct a MolalConcentration with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.MolalConcentration.Item(Nalco.Numerics.SI.MolalConcentration.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.MolalConcentration.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.Abbreviation(Nalco.Numerics.SI.MolalConcentration.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.Description(Nalco.Numerics.SI.MolalConcentration.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.MolalConcentration.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.Parse(System.String)">
            <summary>
            Converts the string representation of a MolalConcentration to a MolalConcentration.
            </summary>
            <param name="s">A string that contains a MolalConcentration to convert.</param>
            <returns>A MolalConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a MolalConcentration to a MolalConcentration.
            </summary>
            <param name="s">A string that contains a MolalConcentration to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A MolalConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a MolalConcentration to a MolalConcentration.
            </summary>
            <param name="s">A string that contains a MolalConcentration to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A MolalConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MolalConcentration.Subunit)">
            <summary>
            Converts the string representation of a MolalConcentration to a MolalConcentration.
            </summary>
            <param name="s">A string that contains a MolalConcentration to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A MolalConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.TryParse(System.String,Nalco.Numerics.SI.MolalConcentration@)">
            <summary>
            Converts the string representation of a MolalConcentration to a MolalConcentration. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolalConcentration to convert.</param>
            <param name="result">When this method returns, contains the MolalConcentration, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.MolalConcentration@)">
            <summary>
            Converts the string representation of a MolalConcentration to a MolalConcentration. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolalConcentration to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the MolalConcentration, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MolalConcentration@)">
            <summary>
            Converts the string representation of a MolalConcentration to a MolalConcentration. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolalConcentration to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the MolalConcentration, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MolalConcentration.Subunit,Nalco.Numerics.SI.MolalConcentration@)">
            <summary>
            Converts the string representation of a MolalConcentration to a MolalConcentration. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolalConcentration to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the MolalConcentration, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.CompareTo(System.Object)">
            <summary>
            Compares the current MolalConcentration with another MolalConcentration.
            </summary>
            <param name="obj">MolalConcentration to compare with this MolalConcentration.</param>
            <returns>Less than zero when this MolalConcentration is less than the other parameter.
            Zero when this MolalConcentration is equal to the other parameter.
            Greater than zero when this MolalConcentration is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of MolalConcentration.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.CompareTo(Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Compares the current MolalConcentration with another MolalConcentration.
            </summary>
            <param name="other">MolalConcentration to compare with this MolalConcentration.</param>
            <returns>Less than zero when this MolalConcentration is less than the other parameter.
            Zero when this MolalConcentration is equal to the other parameter.
            Greater than zero when this MolalConcentration is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current MolalConcentration.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.Abs(Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Returns the absolute value of a MolalConcentration.
            </summary>
            <param name="value">A MolalConcentration.</param>
            <returns>A MolalConcentration that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.Round(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Returns a MolalConcentration rounded to the nearest interval.
            </summary>
            <param name="value">A MolalConcentration.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MolalConcentration rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.Round(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.MolalConcentration,System.MidpointRounding)">
            <summary>
            Returns a MolalConcentration rounded to the nearest interval.
            </summary>
            <param name="value">A MolalConcentration.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A MolalConcentration rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.Floor(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Returns a MolalConcentration rounded down to the nearest interval.
            </summary>
            <param name="value">A MolalConcentration.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MolalConcentration rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.Ceiling(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Returns a MolalConcentration rounded up to the nearest interval.
            </summary>
            <param name="value">A MolalConcentration.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MolalConcentration rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_Equality(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Determines whether two MolalConcentrations are equal.
            </summary>
            <param name="l">Left MolalConcentration.</param>
            <param name="r">Right MolalConcentration.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_Inequality(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Determines whether two MolalConcentrations are not equal.
            </summary>
            <param name="l">Left MolalConcentration.</param>
            <param name="r">Right MolalConcentration.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_LessThan(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Determines if the left MolalConcentration is less than the right MolalConcentration.
            </summary>
            <param name="l">Left MolalConcentration.</param>
            <param name="r">Right MolalConcentration.</param>
            <returns>True if the left MolalConcentration is less than the right MolalConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_LessThanOrEqual(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Determines if the left MolalConcentration is less than or equal to the right MolalConcentration.
            </summary>
            <param name="l">Left MolalConcentration.</param>
            <param name="r">Right MolalConcentration.</param>
            <returns>True if the left MolalConcentration is less than or equal to the right MolalConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_GreaterThanOrEqual(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Determines if the left MolalConcentration is greater than or equal to the right MolalConcentration.
            </summary>
            <param name="l">Left MolalConcentration.</param>
            <param name="r">Right MolalConcentration.</param>
            <returns>True if the left MolalConcentration is greater than or equal to the right MolalConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_GreaterThan(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Determines if the left MolalConcentration is greater than the right MolalConcentration.
            </summary>
            <param name="l">Left MolalConcentration.</param>
            <param name="r">Right MolalConcentration.</param>
            <returns>True if the left MolalConcentration is greater than the right MolalConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_Addition(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Add two MolalConcentrations together.
            </summary>
            <param name="l">Left MolalConcentration.</param>
            <param name="r">Right MolalConcentration.</param>
            <returns>Sum of MolalConcentrations.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_UnaryNegation(Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Negate a MolalConcentration.
            </summary>
            <param name="l">Left MolalConcentration.</param>
            <returns>Negative MolalConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_Subtraction(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Subtract two MolalConcentrations.
            </summary>
            <param name="l">Left MolalConcentration.</param>
            <param name="r">Right MolalConcentration.</param>
            <returns>Difference of MolalConcentrations.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_Multiply(Nalco.Numerics.SI.MolalConcentration,System.Double)">
            <summary>
            Multiply a MolalConcentration with a double.
            </summary>
            <param name="l">Left MolalConcentration.</param>
            <param name="r">Double value.</param>
            <returns>MolalConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_Multiply(System.Double,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Multiply a MolalConcentration with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right MolalConcentration.</param>
            <returns>MolalConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_Division(Nalco.Numerics.SI.MolalConcentration,System.Double)">
            <summary>
            Divide a MolalConcentration by a double.
            </summary>
            <param name="l">Left MolalConcentration.</param>
            <param name="r">Double value.</param>
            <returns>MolalConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_Division(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Divide a MolalConcentration by another MolalConcentration.
            </summary>
            <param name="l">Left MolalConcentration.</param>
            <param name="r">Right MolalConcentration.</param>
            <returns>Ratio of the two MolalConcentrations.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_Modulus(Nalco.Numerics.SI.MolalConcentration,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Divide a MolalConcentration by another MolalConcentration and return the remainder.
            </summary>
            <param name="l">Left MolalConcentration.</param>
            <param name="r">Right MolalConcentration.</param>
            <returns>Remainder after a MolalConcentration is divided by a MolalConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_Explicit(Nalco.Numerics.SI.MolalConcentration)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the MolalConcentration into a weakly typed Scalar.
            </summary>
            <param name="l">MolalConcentration.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolalConcentration.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.MolalConcentration">
            <summary>
            Explicitly convert the weakly typed Scalar into a MolalConcentration.
            </summary>
            <param name="s">Scalar.</param>
            <returns>MolalConcentration.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.MolarConcentration">
            <summary>
            Molar concentration (moles per cubic meter).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.MolarConcentration.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.MolarConcentration.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.MolarConcentration.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.#ctor(System.Double)">
            <summary>
            Construct a new MolarConcentration with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_Multiply(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Multiply a molar concentration by a molar mass.
            </summary>
            <param name="l">Left molar concentration.</param>
            <param name="r">Right molar mass.</param>
            <returns>Resulting density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_Multiply(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Multiply a molar concentration by a specific volume
            </summary>
            <param name="l">Left molar concentration.</param>
            <param name="r">Right specific volume.</param>
            <returns>Resulting molal concentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_Division(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Divide a molar concentration by a molal concentration.
            </summary>
            <param name="l">Left molar concentration.</param>
            <param name="r">Right molal concentration.</param>
            <returns>Resulting density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_Division(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.Density)">
            <summary>
            Divide a molar concentration by a density.
            </summary>
            <param name="l">Left molar concentration.</param>
            <param name="r">Right density.</param>
            <returns>Resulting molal concentration.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.MolarConcentration.Zero">
            <summary>
            MolarConcentration of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.#ctor(System.Double,Nalco.Numerics.SI.MolarConcentration.Subunit)">
            <summary>
            Construct a MolarConcentration with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.MolarConcentration.Item(Nalco.Numerics.SI.MolarConcentration.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.MolarConcentration.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.Abbreviation(Nalco.Numerics.SI.MolarConcentration.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.Description(Nalco.Numerics.SI.MolarConcentration.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarConcentration.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.Parse(System.String)">
            <summary>
            Converts the string representation of a MolarConcentration to a MolarConcentration.
            </summary>
            <param name="s">A string that contains a MolarConcentration to convert.</param>
            <returns>A MolarConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a MolarConcentration to a MolarConcentration.
            </summary>
            <param name="s">A string that contains a MolarConcentration to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A MolarConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a MolarConcentration to a MolarConcentration.
            </summary>
            <param name="s">A string that contains a MolarConcentration to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A MolarConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarConcentration.Subunit)">
            <summary>
            Converts the string representation of a MolarConcentration to a MolarConcentration.
            </summary>
            <param name="s">A string that contains a MolarConcentration to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A MolarConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.TryParse(System.String,Nalco.Numerics.SI.MolarConcentration@)">
            <summary>
            Converts the string representation of a MolarConcentration to a MolarConcentration. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolarConcentration to convert.</param>
            <param name="result">When this method returns, contains the MolarConcentration, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarConcentration@)">
            <summary>
            Converts the string representation of a MolarConcentration to a MolarConcentration. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolarConcentration to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the MolarConcentration, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarConcentration@)">
            <summary>
            Converts the string representation of a MolarConcentration to a MolarConcentration. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolarConcentration to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the MolarConcentration, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarConcentration.Subunit,Nalco.Numerics.SI.MolarConcentration@)">
            <summary>
            Converts the string representation of a MolarConcentration to a MolarConcentration. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolarConcentration to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the MolarConcentration, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.CompareTo(System.Object)">
            <summary>
            Compares the current MolarConcentration with another MolarConcentration.
            </summary>
            <param name="obj">MolarConcentration to compare with this MolarConcentration.</param>
            <returns>Less than zero when this MolarConcentration is less than the other parameter.
            Zero when this MolarConcentration is equal to the other parameter.
            Greater than zero when this MolarConcentration is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of MolarConcentration.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.CompareTo(Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Compares the current MolarConcentration with another MolarConcentration.
            </summary>
            <param name="other">MolarConcentration to compare with this MolarConcentration.</param>
            <returns>Less than zero when this MolarConcentration is less than the other parameter.
            Zero when this MolarConcentration is equal to the other parameter.
            Greater than zero when this MolarConcentration is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current MolarConcentration.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.Abs(Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Returns the absolute value of a MolarConcentration.
            </summary>
            <param name="value">A MolarConcentration.</param>
            <returns>A MolarConcentration that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.Round(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Returns a MolarConcentration rounded to the nearest interval.
            </summary>
            <param name="value">A MolarConcentration.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MolarConcentration rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.Round(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.MolarConcentration,System.MidpointRounding)">
            <summary>
            Returns a MolarConcentration rounded to the nearest interval.
            </summary>
            <param name="value">A MolarConcentration.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A MolarConcentration rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.Floor(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Returns a MolarConcentration rounded down to the nearest interval.
            </summary>
            <param name="value">A MolarConcentration.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MolarConcentration rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.Ceiling(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Returns a MolarConcentration rounded up to the nearest interval.
            </summary>
            <param name="value">A MolarConcentration.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MolarConcentration rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_Equality(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Determines whether two MolarConcentrations are equal.
            </summary>
            <param name="l">Left MolarConcentration.</param>
            <param name="r">Right MolarConcentration.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_Inequality(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Determines whether two MolarConcentrations are not equal.
            </summary>
            <param name="l">Left MolarConcentration.</param>
            <param name="r">Right MolarConcentration.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_LessThan(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Determines if the left MolarConcentration is less than the right MolarConcentration.
            </summary>
            <param name="l">Left MolarConcentration.</param>
            <param name="r">Right MolarConcentration.</param>
            <returns>True if the left MolarConcentration is less than the right MolarConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_LessThanOrEqual(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Determines if the left MolarConcentration is less than or equal to the right MolarConcentration.
            </summary>
            <param name="l">Left MolarConcentration.</param>
            <param name="r">Right MolarConcentration.</param>
            <returns>True if the left MolarConcentration is less than or equal to the right MolarConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_GreaterThanOrEqual(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Determines if the left MolarConcentration is greater than or equal to the right MolarConcentration.
            </summary>
            <param name="l">Left MolarConcentration.</param>
            <param name="r">Right MolarConcentration.</param>
            <returns>True if the left MolarConcentration is greater than or equal to the right MolarConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_GreaterThan(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Determines if the left MolarConcentration is greater than the right MolarConcentration.
            </summary>
            <param name="l">Left MolarConcentration.</param>
            <param name="r">Right MolarConcentration.</param>
            <returns>True if the left MolarConcentration is greater than the right MolarConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_Addition(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Add two MolarConcentrations together.
            </summary>
            <param name="l">Left MolarConcentration.</param>
            <param name="r">Right MolarConcentration.</param>
            <returns>Sum of MolarConcentrations.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_UnaryNegation(Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Negate a MolarConcentration.
            </summary>
            <param name="l">Left MolarConcentration.</param>
            <returns>Negative MolarConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_Subtraction(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Subtract two MolarConcentrations.
            </summary>
            <param name="l">Left MolarConcentration.</param>
            <param name="r">Right MolarConcentration.</param>
            <returns>Difference of MolarConcentrations.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_Multiply(Nalco.Numerics.SI.MolarConcentration,System.Double)">
            <summary>
            Multiply a MolarConcentration with a double.
            </summary>
            <param name="l">Left MolarConcentration.</param>
            <param name="r">Double value.</param>
            <returns>MolarConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_Multiply(System.Double,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Multiply a MolarConcentration with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right MolarConcentration.</param>
            <returns>MolarConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_Division(Nalco.Numerics.SI.MolarConcentration,System.Double)">
            <summary>
            Divide a MolarConcentration by a double.
            </summary>
            <param name="l">Left MolarConcentration.</param>
            <param name="r">Double value.</param>
            <returns>MolarConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_Division(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Divide a MolarConcentration by another MolarConcentration.
            </summary>
            <param name="l">Left MolarConcentration.</param>
            <param name="r">Right MolarConcentration.</param>
            <returns>Ratio of the two MolarConcentrations.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_Modulus(Nalco.Numerics.SI.MolarConcentration,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Divide a MolarConcentration by another MolarConcentration and return the remainder.
            </summary>
            <param name="l">Left MolarConcentration.</param>
            <param name="r">Right MolarConcentration.</param>
            <returns>Remainder after a MolarConcentration is divided by a MolarConcentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_Explicit(Nalco.Numerics.SI.MolarConcentration)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the MolarConcentration into a weakly typed Scalar.
            </summary>
            <param name="l">MolarConcentration.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarConcentration.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.MolarConcentration">
            <summary>
            Explicitly convert the weakly typed Scalar into a MolarConcentration.
            </summary>
            <param name="s">Scalar.</param>
            <returns>MolarConcentration.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.MolarHeatCapacity">
            <summary>
            Molar Heat Capacity (joules per mol kelvin).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.MolarHeatCapacity.UniversalGasConstant">
            <summary>
            The universal gas constant.
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.MolarHeatCapacity.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.MolarHeatCapacity.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.MolarHeatCapacity.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.#ctor(System.Double)">
            <summary>
            Construct a new MolarHeatCapacity with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_Division(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Divide a molar heat capacity by a molar mass.
            </summary>
            <param name="l">Left molar heat capacity.</param>
            <param name="r">Right molar mass.</param>
            <returns>Resulting specific heat capacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_Division(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Divide a molar heat capacity by a specific heat capacity.
            </summary>
            <param name="l">Left molar heat capacity.</param>
            <param name="r">Right specific heat capacity.</param>
            <returns>Resulting molar mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_Multiply(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Multiply a molar heat capacity by an chemical amount.
            </summary>
            <param name="l">Left molar heat capacity.</param>
            <param name="r">Right chemical amount.</param>
            <returns>Resulting entropy.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.MolarHeatCapacity.Zero">
            <summary>
            MolarHeatCapacity of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.#ctor(System.Double,Nalco.Numerics.SI.MolarHeatCapacity.Subunit)">
            <summary>
            Construct a MolarHeatCapacity with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.MolarHeatCapacity.Item(Nalco.Numerics.SI.MolarHeatCapacity.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.MolarHeatCapacity.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.Abbreviation(Nalco.Numerics.SI.MolarHeatCapacity.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.Description(Nalco.Numerics.SI.MolarHeatCapacity.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarHeatCapacity.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.Parse(System.String)">
            <summary>
            Converts the string representation of a MolarHeatCapacity to a MolarHeatCapacity.
            </summary>
            <param name="s">A string that contains a MolarHeatCapacity to convert.</param>
            <returns>A MolarHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a MolarHeatCapacity to a MolarHeatCapacity.
            </summary>
            <param name="s">A string that contains a MolarHeatCapacity to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A MolarHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a MolarHeatCapacity to a MolarHeatCapacity.
            </summary>
            <param name="s">A string that contains a MolarHeatCapacity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A MolarHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarHeatCapacity.Subunit)">
            <summary>
            Converts the string representation of a MolarHeatCapacity to a MolarHeatCapacity.
            </summary>
            <param name="s">A string that contains a MolarHeatCapacity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A MolarHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.TryParse(System.String,Nalco.Numerics.SI.MolarHeatCapacity@)">
            <summary>
            Converts the string representation of a MolarHeatCapacity to a MolarHeatCapacity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolarHeatCapacity to convert.</param>
            <param name="result">When this method returns, contains the MolarHeatCapacity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarHeatCapacity@)">
            <summary>
            Converts the string representation of a MolarHeatCapacity to a MolarHeatCapacity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolarHeatCapacity to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the MolarHeatCapacity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarHeatCapacity@)">
            <summary>
            Converts the string representation of a MolarHeatCapacity to a MolarHeatCapacity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolarHeatCapacity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the MolarHeatCapacity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarHeatCapacity.Subunit,Nalco.Numerics.SI.MolarHeatCapacity@)">
            <summary>
            Converts the string representation of a MolarHeatCapacity to a MolarHeatCapacity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolarHeatCapacity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the MolarHeatCapacity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.CompareTo(System.Object)">
            <summary>
            Compares the current MolarHeatCapacity with another MolarHeatCapacity.
            </summary>
            <param name="obj">MolarHeatCapacity to compare with this MolarHeatCapacity.</param>
            <returns>Less than zero when this MolarHeatCapacity is less than the other parameter.
            Zero when this MolarHeatCapacity is equal to the other parameter.
            Greater than zero when this MolarHeatCapacity is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of MolarHeatCapacity.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.CompareTo(Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Compares the current MolarHeatCapacity with another MolarHeatCapacity.
            </summary>
            <param name="other">MolarHeatCapacity to compare with this MolarHeatCapacity.</param>
            <returns>Less than zero when this MolarHeatCapacity is less than the other parameter.
            Zero when this MolarHeatCapacity is equal to the other parameter.
            Greater than zero when this MolarHeatCapacity is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current MolarHeatCapacity.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.Abs(Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Returns the absolute value of a MolarHeatCapacity.
            </summary>
            <param name="value">A MolarHeatCapacity.</param>
            <returns>A MolarHeatCapacity that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.Round(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Returns a MolarHeatCapacity rounded to the nearest interval.
            </summary>
            <param name="value">A MolarHeatCapacity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MolarHeatCapacity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.Round(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.MolarHeatCapacity,System.MidpointRounding)">
            <summary>
            Returns a MolarHeatCapacity rounded to the nearest interval.
            </summary>
            <param name="value">A MolarHeatCapacity.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A MolarHeatCapacity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.Floor(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Returns a MolarHeatCapacity rounded down to the nearest interval.
            </summary>
            <param name="value">A MolarHeatCapacity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MolarHeatCapacity rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.Ceiling(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Returns a MolarHeatCapacity rounded up to the nearest interval.
            </summary>
            <param name="value">A MolarHeatCapacity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MolarHeatCapacity rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_Equality(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Determines whether two MolarHeatCapacitys are equal.
            </summary>
            <param name="l">Left MolarHeatCapacity.</param>
            <param name="r">Right MolarHeatCapacity.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_Inequality(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Determines whether two MolarHeatCapacitys are not equal.
            </summary>
            <param name="l">Left MolarHeatCapacity.</param>
            <param name="r">Right MolarHeatCapacity.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_LessThan(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Determines if the left MolarHeatCapacity is less than the right MolarHeatCapacity.
            </summary>
            <param name="l">Left MolarHeatCapacity.</param>
            <param name="r">Right MolarHeatCapacity.</param>
            <returns>True if the left MolarHeatCapacity is less than the right MolarHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_LessThanOrEqual(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Determines if the left MolarHeatCapacity is less than or equal to the right MolarHeatCapacity.
            </summary>
            <param name="l">Left MolarHeatCapacity.</param>
            <param name="r">Right MolarHeatCapacity.</param>
            <returns>True if the left MolarHeatCapacity is less than or equal to the right MolarHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_GreaterThanOrEqual(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Determines if the left MolarHeatCapacity is greater than or equal to the right MolarHeatCapacity.
            </summary>
            <param name="l">Left MolarHeatCapacity.</param>
            <param name="r">Right MolarHeatCapacity.</param>
            <returns>True if the left MolarHeatCapacity is greater than or equal to the right MolarHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_GreaterThan(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Determines if the left MolarHeatCapacity is greater than the right MolarHeatCapacity.
            </summary>
            <param name="l">Left MolarHeatCapacity.</param>
            <param name="r">Right MolarHeatCapacity.</param>
            <returns>True if the left MolarHeatCapacity is greater than the right MolarHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_Addition(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Add two MolarHeatCapacitys together.
            </summary>
            <param name="l">Left MolarHeatCapacity.</param>
            <param name="r">Right MolarHeatCapacity.</param>
            <returns>Sum of MolarHeatCapacitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_UnaryNegation(Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Negate a MolarHeatCapacity.
            </summary>
            <param name="l">Left MolarHeatCapacity.</param>
            <returns>Negative MolarHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_Subtraction(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Subtract two MolarHeatCapacitys.
            </summary>
            <param name="l">Left MolarHeatCapacity.</param>
            <param name="r">Right MolarHeatCapacity.</param>
            <returns>Difference of MolarHeatCapacitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_Multiply(Nalco.Numerics.SI.MolarHeatCapacity,System.Double)">
            <summary>
            Multiply a MolarHeatCapacity with a double.
            </summary>
            <param name="l">Left MolarHeatCapacity.</param>
            <param name="r">Double value.</param>
            <returns>MolarHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_Multiply(System.Double,Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Multiply a MolarHeatCapacity with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right MolarHeatCapacity.</param>
            <returns>MolarHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_Division(Nalco.Numerics.SI.MolarHeatCapacity,System.Double)">
            <summary>
            Divide a MolarHeatCapacity by a double.
            </summary>
            <param name="l">Left MolarHeatCapacity.</param>
            <param name="r">Double value.</param>
            <returns>MolarHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_Division(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Divide a MolarHeatCapacity by another MolarHeatCapacity.
            </summary>
            <param name="l">Left MolarHeatCapacity.</param>
            <param name="r">Right MolarHeatCapacity.</param>
            <returns>Ratio of the two MolarHeatCapacitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_Modulus(Nalco.Numerics.SI.MolarHeatCapacity,Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Divide a MolarHeatCapacity by another MolarHeatCapacity and return the remainder.
            </summary>
            <param name="l">Left MolarHeatCapacity.</param>
            <param name="r">Right MolarHeatCapacity.</param>
            <returns>Remainder after a MolarHeatCapacity is divided by a MolarHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_Explicit(Nalco.Numerics.SI.MolarHeatCapacity)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the MolarHeatCapacity into a weakly typed Scalar.
            </summary>
            <param name="l">MolarHeatCapacity.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarHeatCapacity.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.MolarHeatCapacity">
            <summary>
            Explicitly convert the weakly typed Scalar into a MolarHeatCapacity.
            </summary>
            <param name="s">Scalar.</param>
            <returns>MolarHeatCapacity.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.NormalizedVolumeRate">
            <summary>
            Normalized volume rate (normal cubic meters per second (20 °C 1 atm,
            dry)).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.NormalizedVolumeRate.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.NormalizedVolumeRate.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.NormalizedVolumeRate.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.#ctor(System.Double)">
            <summary>
            Construct a new Normalized volume rate with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="F:Nalco.Numerics.SI.NormalizedVolumeRate.Zero">
            <summary>
            NormalizedVolumeRate of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.#ctor(System.Double,Nalco.Numerics.SI.NormalizedVolumeRate.Subunit)">
            <summary>
            Construct a NormalizedVolumeRate with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.NormalizedVolumeRate.Item(Nalco.Numerics.SI.NormalizedVolumeRate.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.NormalizedVolumeRate.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.Abbreviation(Nalco.Numerics.SI.NormalizedVolumeRate.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.Description(Nalco.Numerics.SI.NormalizedVolumeRate.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.NormalizedVolumeRate.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.Parse(System.String)">
            <summary>
            Converts the string representation of a NormalizedVolumeRate to a NormalizedVolumeRate.
            </summary>
            <param name="s">A string that contains a NormalizedVolumeRate to convert.</param>
            <returns>A NormalizedVolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a NormalizedVolumeRate to a NormalizedVolumeRate.
            </summary>
            <param name="s">A string that contains a NormalizedVolumeRate to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A NormalizedVolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a NormalizedVolumeRate to a NormalizedVolumeRate.
            </summary>
            <param name="s">A string that contains a NormalizedVolumeRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A NormalizedVolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.NormalizedVolumeRate.Subunit)">
            <summary>
            Converts the string representation of a NormalizedVolumeRate to a NormalizedVolumeRate.
            </summary>
            <param name="s">A string that contains a NormalizedVolumeRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A NormalizedVolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.TryParse(System.String,Nalco.Numerics.SI.NormalizedVolumeRate@)">
            <summary>
            Converts the string representation of a NormalizedVolumeRate to a NormalizedVolumeRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a NormalizedVolumeRate to convert.</param>
            <param name="result">When this method returns, contains the NormalizedVolumeRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.NormalizedVolumeRate@)">
            <summary>
            Converts the string representation of a NormalizedVolumeRate to a NormalizedVolumeRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a NormalizedVolumeRate to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the NormalizedVolumeRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.NormalizedVolumeRate@)">
            <summary>
            Converts the string representation of a NormalizedVolumeRate to a NormalizedVolumeRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a NormalizedVolumeRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the NormalizedVolumeRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.NormalizedVolumeRate.Subunit,Nalco.Numerics.SI.NormalizedVolumeRate@)">
            <summary>
            Converts the string representation of a NormalizedVolumeRate to a NormalizedVolumeRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a NormalizedVolumeRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the NormalizedVolumeRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.CompareTo(System.Object)">
            <summary>
            Compares the current NormalizedVolumeRate with another NormalizedVolumeRate.
            </summary>
            <param name="obj">NormalizedVolumeRate to compare with this NormalizedVolumeRate.</param>
            <returns>Less than zero when this NormalizedVolumeRate is less than the other parameter.
            Zero when this NormalizedVolumeRate is equal to the other parameter.
            Greater than zero when this NormalizedVolumeRate is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of NormalizedVolumeRate.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.CompareTo(Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Compares the current NormalizedVolumeRate with another NormalizedVolumeRate.
            </summary>
            <param name="other">NormalizedVolumeRate to compare with this NormalizedVolumeRate.</param>
            <returns>Less than zero when this NormalizedVolumeRate is less than the other parameter.
            Zero when this NormalizedVolumeRate is equal to the other parameter.
            Greater than zero when this NormalizedVolumeRate is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current NormalizedVolumeRate.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.Abs(Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Returns the absolute value of a NormalizedVolumeRate.
            </summary>
            <param name="value">A NormalizedVolumeRate.</param>
            <returns>A NormalizedVolumeRate that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.Round(Nalco.Numerics.SI.NormalizedVolumeRate,Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Returns a NormalizedVolumeRate rounded to the nearest interval.
            </summary>
            <param name="value">A NormalizedVolumeRate.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A NormalizedVolumeRate rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.Round(Nalco.Numerics.SI.NormalizedVolumeRate,Nalco.Numerics.SI.NormalizedVolumeRate,System.MidpointRounding)">
            <summary>
            Returns a NormalizedVolumeRate rounded to the nearest interval.
            </summary>
            <param name="value">A NormalizedVolumeRate.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A NormalizedVolumeRate rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.Floor(Nalco.Numerics.SI.NormalizedVolumeRate,Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Returns a NormalizedVolumeRate rounded down to the nearest interval.
            </summary>
            <param name="value">A NormalizedVolumeRate.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A NormalizedVolumeRate rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.Ceiling(Nalco.Numerics.SI.NormalizedVolumeRate,Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Returns a NormalizedVolumeRate rounded up to the nearest interval.
            </summary>
            <param name="value">A NormalizedVolumeRate.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A NormalizedVolumeRate rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.op_Equality(Nalco.Numerics.SI.NormalizedVolumeRate,Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Determines whether two NormalizedVolumeRates are equal.
            </summary>
            <param name="l">Left NormalizedVolumeRate.</param>
            <param name="r">Right NormalizedVolumeRate.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.op_Inequality(Nalco.Numerics.SI.NormalizedVolumeRate,Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Determines whether two NormalizedVolumeRates are not equal.
            </summary>
            <param name="l">Left NormalizedVolumeRate.</param>
            <param name="r">Right NormalizedVolumeRate.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.op_LessThan(Nalco.Numerics.SI.NormalizedVolumeRate,Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Determines if the left NormalizedVolumeRate is less than the right NormalizedVolumeRate.
            </summary>
            <param name="l">Left NormalizedVolumeRate.</param>
            <param name="r">Right NormalizedVolumeRate.</param>
            <returns>True if the left NormalizedVolumeRate is less than the right NormalizedVolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.op_LessThanOrEqual(Nalco.Numerics.SI.NormalizedVolumeRate,Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Determines if the left NormalizedVolumeRate is less than or equal to the right NormalizedVolumeRate.
            </summary>
            <param name="l">Left NormalizedVolumeRate.</param>
            <param name="r">Right NormalizedVolumeRate.</param>
            <returns>True if the left NormalizedVolumeRate is less than or equal to the right NormalizedVolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.op_GreaterThanOrEqual(Nalco.Numerics.SI.NormalizedVolumeRate,Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Determines if the left NormalizedVolumeRate is greater than or equal to the right NormalizedVolumeRate.
            </summary>
            <param name="l">Left NormalizedVolumeRate.</param>
            <param name="r">Right NormalizedVolumeRate.</param>
            <returns>True if the left NormalizedVolumeRate is greater than or equal to the right NormalizedVolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.op_GreaterThan(Nalco.Numerics.SI.NormalizedVolumeRate,Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Determines if the left NormalizedVolumeRate is greater than the right NormalizedVolumeRate.
            </summary>
            <param name="l">Left NormalizedVolumeRate.</param>
            <param name="r">Right NormalizedVolumeRate.</param>
            <returns>True if the left NormalizedVolumeRate is greater than the right NormalizedVolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.op_Addition(Nalco.Numerics.SI.NormalizedVolumeRate,Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Add two NormalizedVolumeRates together.
            </summary>
            <param name="l">Left NormalizedVolumeRate.</param>
            <param name="r">Right NormalizedVolumeRate.</param>
            <returns>Sum of NormalizedVolumeRates.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.op_UnaryNegation(Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Negate a NormalizedVolumeRate.
            </summary>
            <param name="l">Left NormalizedVolumeRate.</param>
            <returns>Negative NormalizedVolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.op_Subtraction(Nalco.Numerics.SI.NormalizedVolumeRate,Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Subtract two NormalizedVolumeRates.
            </summary>
            <param name="l">Left NormalizedVolumeRate.</param>
            <param name="r">Right NormalizedVolumeRate.</param>
            <returns>Difference of NormalizedVolumeRates.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.op_Multiply(Nalco.Numerics.SI.NormalizedVolumeRate,System.Double)">
            <summary>
            Multiply a NormalizedVolumeRate with a double.
            </summary>
            <param name="l">Left NormalizedVolumeRate.</param>
            <param name="r">Double value.</param>
            <returns>NormalizedVolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.op_Multiply(System.Double,Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Multiply a NormalizedVolumeRate with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right NormalizedVolumeRate.</param>
            <returns>NormalizedVolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.op_Division(Nalco.Numerics.SI.NormalizedVolumeRate,System.Double)">
            <summary>
            Divide a NormalizedVolumeRate by a double.
            </summary>
            <param name="l">Left NormalizedVolumeRate.</param>
            <param name="r">Double value.</param>
            <returns>NormalizedVolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.op_Division(Nalco.Numerics.SI.NormalizedVolumeRate,Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Divide a NormalizedVolumeRate by another NormalizedVolumeRate.
            </summary>
            <param name="l">Left NormalizedVolumeRate.</param>
            <param name="r">Right NormalizedVolumeRate.</param>
            <returns>Ratio of the two NormalizedVolumeRates.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.op_Modulus(Nalco.Numerics.SI.NormalizedVolumeRate,Nalco.Numerics.SI.NormalizedVolumeRate)">
            <summary>
            Divide a NormalizedVolumeRate by another NormalizedVolumeRate and return the remainder.
            </summary>
            <param name="l">Left NormalizedVolumeRate.</param>
            <param name="r">Right NormalizedVolumeRate.</param>
            <returns>Remainder after a NormalizedVolumeRate is divided by a NormalizedVolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.op_Explicit(Nalco.Numerics.SI.NormalizedVolumeRate)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the NormalizedVolumeRate into a weakly typed Scalar.
            </summary>
            <param name="l">NormalizedVolumeRate.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.NormalizedVolumeRate.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.NormalizedVolumeRate">
            <summary>
            Explicitly convert the weakly typed Scalar into a NormalizedVolumeRate.
            </summary>
            <param name="s">Scalar.</param>
            <returns>NormalizedVolumeRate.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.ChemicalAmount">
            <summary>
            Chemical Amount (mole).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.ChemicalAmount.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ChemicalAmount.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ChemicalAmount.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.#ctor(System.Double)">
            <summary>
            Construct a new ChemicalAmount with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_Multiply(Nalco.Numerics.SI.ChemicalAmount,Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Multiply an chemical amount by a molar heat capacity.
            </summary>
            <param name="l">Left chemical amount.</param>
            <param name="r">Right molar heat capacity.</param>
            <returns>Resulting entropy.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.ChemicalAmount.Zero">
            <summary>
            ChemicalAmount of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.#ctor(System.Double,Nalco.Numerics.SI.ChemicalAmount.Subunit)">
            <summary>
            Construct a ChemicalAmount with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.ChemicalAmount.Item(Nalco.Numerics.SI.ChemicalAmount.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.ChemicalAmount.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.Abbreviation(Nalco.Numerics.SI.ChemicalAmount.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.Description(Nalco.Numerics.SI.ChemicalAmount.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.ChemicalAmount.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.Parse(System.String)">
            <summary>
            Converts the string representation of a ChemicalAmount to a ChemicalAmount.
            </summary>
            <param name="s">A string that contains a ChemicalAmount to convert.</param>
            <returns>A ChemicalAmount.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ChemicalAmount to a ChemicalAmount.
            </summary>
            <param name="s">A string that contains a ChemicalAmount to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A ChemicalAmount.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ChemicalAmount to a ChemicalAmount.
            </summary>
            <param name="s">A string that contains a ChemicalAmount to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A ChemicalAmount.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ChemicalAmount.Subunit)">
            <summary>
            Converts the string representation of a ChemicalAmount to a ChemicalAmount.
            </summary>
            <param name="s">A string that contains a ChemicalAmount to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A ChemicalAmount.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.TryParse(System.String,Nalco.Numerics.SI.ChemicalAmount@)">
            <summary>
            Converts the string representation of a ChemicalAmount to a ChemicalAmount. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ChemicalAmount to convert.</param>
            <param name="result">When this method returns, contains the ChemicalAmount, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.ChemicalAmount@)">
            <summary>
            Converts the string representation of a ChemicalAmount to a ChemicalAmount. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ChemicalAmount to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ChemicalAmount, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ChemicalAmount@)">
            <summary>
            Converts the string representation of a ChemicalAmount to a ChemicalAmount. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ChemicalAmount to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ChemicalAmount, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ChemicalAmount.Subunit,Nalco.Numerics.SI.ChemicalAmount@)">
            <summary>
            Converts the string representation of a ChemicalAmount to a ChemicalAmount. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ChemicalAmount to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the ChemicalAmount, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.CompareTo(System.Object)">
            <summary>
            Compares the current ChemicalAmount with another ChemicalAmount.
            </summary>
            <param name="obj">ChemicalAmount to compare with this ChemicalAmount.</param>
            <returns>Less than zero when this ChemicalAmount is less than the other parameter.
            Zero when this ChemicalAmount is equal to the other parameter.
            Greater than zero when this ChemicalAmount is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of ChemicalAmount.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.CompareTo(Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Compares the current ChemicalAmount with another ChemicalAmount.
            </summary>
            <param name="other">ChemicalAmount to compare with this ChemicalAmount.</param>
            <returns>Less than zero when this ChemicalAmount is less than the other parameter.
            Zero when this ChemicalAmount is equal to the other parameter.
            Greater than zero when this ChemicalAmount is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current ChemicalAmount.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.Abs(Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Returns the absolute value of a ChemicalAmount.
            </summary>
            <param name="value">A ChemicalAmount.</param>
            <returns>A ChemicalAmount that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.Round(Nalco.Numerics.SI.ChemicalAmount,Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Returns a ChemicalAmount rounded to the nearest interval.
            </summary>
            <param name="value">A ChemicalAmount.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ChemicalAmount rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.Round(Nalco.Numerics.SI.ChemicalAmount,Nalco.Numerics.SI.ChemicalAmount,System.MidpointRounding)">
            <summary>
            Returns a ChemicalAmount rounded to the nearest interval.
            </summary>
            <param name="value">A ChemicalAmount.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A ChemicalAmount rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.Floor(Nalco.Numerics.SI.ChemicalAmount,Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Returns a ChemicalAmount rounded down to the nearest interval.
            </summary>
            <param name="value">A ChemicalAmount.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ChemicalAmount rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.Ceiling(Nalco.Numerics.SI.ChemicalAmount,Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Returns a ChemicalAmount rounded up to the nearest interval.
            </summary>
            <param name="value">A ChemicalAmount.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ChemicalAmount rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_Equality(Nalco.Numerics.SI.ChemicalAmount,Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Determines whether two ChemicalAmounts are equal.
            </summary>
            <param name="l">Left ChemicalAmount.</param>
            <param name="r">Right ChemicalAmount.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_Inequality(Nalco.Numerics.SI.ChemicalAmount,Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Determines whether two ChemicalAmounts are not equal.
            </summary>
            <param name="l">Left ChemicalAmount.</param>
            <param name="r">Right ChemicalAmount.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_LessThan(Nalco.Numerics.SI.ChemicalAmount,Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Determines if the left ChemicalAmount is less than the right ChemicalAmount.
            </summary>
            <param name="l">Left ChemicalAmount.</param>
            <param name="r">Right ChemicalAmount.</param>
            <returns>True if the left ChemicalAmount is less than the right ChemicalAmount.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_LessThanOrEqual(Nalco.Numerics.SI.ChemicalAmount,Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Determines if the left ChemicalAmount is less than or equal to the right ChemicalAmount.
            </summary>
            <param name="l">Left ChemicalAmount.</param>
            <param name="r">Right ChemicalAmount.</param>
            <returns>True if the left ChemicalAmount is less than or equal to the right ChemicalAmount.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_GreaterThanOrEqual(Nalco.Numerics.SI.ChemicalAmount,Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Determines if the left ChemicalAmount is greater than or equal to the right ChemicalAmount.
            </summary>
            <param name="l">Left ChemicalAmount.</param>
            <param name="r">Right ChemicalAmount.</param>
            <returns>True if the left ChemicalAmount is greater than or equal to the right ChemicalAmount.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_GreaterThan(Nalco.Numerics.SI.ChemicalAmount,Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Determines if the left ChemicalAmount is greater than the right ChemicalAmount.
            </summary>
            <param name="l">Left ChemicalAmount.</param>
            <param name="r">Right ChemicalAmount.</param>
            <returns>True if the left ChemicalAmount is greater than the right ChemicalAmount.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_Addition(Nalco.Numerics.SI.ChemicalAmount,Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Add two ChemicalAmounts together.
            </summary>
            <param name="l">Left ChemicalAmount.</param>
            <param name="r">Right ChemicalAmount.</param>
            <returns>Sum of ChemicalAmounts.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_UnaryNegation(Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Negate a ChemicalAmount.
            </summary>
            <param name="l">Left ChemicalAmount.</param>
            <returns>Negative ChemicalAmount.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_Subtraction(Nalco.Numerics.SI.ChemicalAmount,Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Subtract two ChemicalAmounts.
            </summary>
            <param name="l">Left ChemicalAmount.</param>
            <param name="r">Right ChemicalAmount.</param>
            <returns>Difference of ChemicalAmounts.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_Multiply(Nalco.Numerics.SI.ChemicalAmount,System.Double)">
            <summary>
            Multiply a ChemicalAmount with a double.
            </summary>
            <param name="l">Left ChemicalAmount.</param>
            <param name="r">Double value.</param>
            <returns>ChemicalAmount.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_Multiply(System.Double,Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Multiply a ChemicalAmount with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right ChemicalAmount.</param>
            <returns>ChemicalAmount.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_Division(Nalco.Numerics.SI.ChemicalAmount,System.Double)">
            <summary>
            Divide a ChemicalAmount by a double.
            </summary>
            <param name="l">Left ChemicalAmount.</param>
            <param name="r">Double value.</param>
            <returns>ChemicalAmount.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_Division(Nalco.Numerics.SI.ChemicalAmount,Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Divide a ChemicalAmount by another ChemicalAmount.
            </summary>
            <param name="l">Left ChemicalAmount.</param>
            <param name="r">Right ChemicalAmount.</param>
            <returns>Ratio of the two ChemicalAmounts.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_Modulus(Nalco.Numerics.SI.ChemicalAmount,Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Divide a ChemicalAmount by another ChemicalAmount and return the remainder.
            </summary>
            <param name="l">Left ChemicalAmount.</param>
            <param name="r">Right ChemicalAmount.</param>
            <returns>Remainder after a ChemicalAmount is divided by a ChemicalAmount.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_Explicit(Nalco.Numerics.SI.ChemicalAmount)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the ChemicalAmount into a weakly typed Scalar.
            </summary>
            <param name="l">ChemicalAmount.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ChemicalAmount.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.ChemicalAmount">
            <summary>
            Explicitly convert the weakly typed Scalar into a ChemicalAmount.
            </summary>
            <param name="s">Scalar.</param>
            <returns>ChemicalAmount.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Percentage">
            <summary>
            Scalar name (si unit description).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.Percentage.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Percentage.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Percentage.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.#ctor(System.Double)">
            <summary>
            Construct a new Percentage with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="F:Nalco.Numerics.SI.Percentage.Zero">
            <summary>
            Percentage of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.#ctor(System.Double,Nalco.Numerics.SI.Percentage.Subunit)">
            <summary>
            Construct a Percentage with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Percentage.Item(Nalco.Numerics.SI.Percentage.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Percentage.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.Abbreviation(Nalco.Numerics.SI.Percentage.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.Description(Nalco.Numerics.SI.Percentage.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Percentage.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.Parse(System.String)">
            <summary>
            Converts the string representation of a Percentage to a Percentage.
            </summary>
            <param name="s">A string that contains a Percentage to convert.</param>
            <returns>A Percentage.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Percentage to a Percentage.
            </summary>
            <param name="s">A string that contains a Percentage to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Percentage.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Percentage to a Percentage.
            </summary>
            <param name="s">A string that contains a Percentage to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Percentage.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Percentage.Subunit)">
            <summary>
            Converts the string representation of a Percentage to a Percentage.
            </summary>
            <param name="s">A string that contains a Percentage to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Percentage.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.TryParse(System.String,Nalco.Numerics.SI.Percentage@)">
            <summary>
            Converts the string representation of a Percentage to a Percentage. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Percentage to convert.</param>
            <param name="result">When this method returns, contains the Percentage, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Percentage@)">
            <summary>
            Converts the string representation of a Percentage to a Percentage. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Percentage to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Percentage, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Percentage@)">
            <summary>
            Converts the string representation of a Percentage to a Percentage. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Percentage to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Percentage, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Percentage.Subunit,Nalco.Numerics.SI.Percentage@)">
            <summary>
            Converts the string representation of a Percentage to a Percentage. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Percentage to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Percentage, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.CompareTo(System.Object)">
            <summary>
            Compares the current Percentage with another Percentage.
            </summary>
            <param name="obj">Percentage to compare with this Percentage.</param>
            <returns>Less than zero when this Percentage is less than the other parameter.
            Zero when this Percentage is equal to the other parameter.
            Greater than zero when this Percentage is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Percentage.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.CompareTo(Nalco.Numerics.SI.Percentage)">
            <summary>
            Compares the current Percentage with another Percentage.
            </summary>
            <param name="other">Percentage to compare with this Percentage.</param>
            <returns>Less than zero when this Percentage is less than the other parameter.
            Zero when this Percentage is equal to the other parameter.
            Greater than zero when this Percentage is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Percentage.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.Abs(Nalco.Numerics.SI.Percentage)">
            <summary>
            Returns the absolute value of a Percentage.
            </summary>
            <param name="value">A Percentage.</param>
            <returns>A Percentage that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.Round(Nalco.Numerics.SI.Percentage,Nalco.Numerics.SI.Percentage)">
            <summary>
            Returns a Percentage rounded to the nearest interval.
            </summary>
            <param name="value">A Percentage.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Percentage rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.Round(Nalco.Numerics.SI.Percentage,Nalco.Numerics.SI.Percentage,System.MidpointRounding)">
            <summary>
            Returns a Percentage rounded to the nearest interval.
            </summary>
            <param name="value">A Percentage.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Percentage rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.Floor(Nalco.Numerics.SI.Percentage,Nalco.Numerics.SI.Percentage)">
            <summary>
            Returns a Percentage rounded down to the nearest interval.
            </summary>
            <param name="value">A Percentage.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Percentage rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.Ceiling(Nalco.Numerics.SI.Percentage,Nalco.Numerics.SI.Percentage)">
            <summary>
            Returns a Percentage rounded up to the nearest interval.
            </summary>
            <param name="value">A Percentage.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Percentage rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.op_Equality(Nalco.Numerics.SI.Percentage,Nalco.Numerics.SI.Percentage)">
            <summary>
            Determines whether two Percentages are equal.
            </summary>
            <param name="l">Left Percentage.</param>
            <param name="r">Right Percentage.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.op_Inequality(Nalco.Numerics.SI.Percentage,Nalco.Numerics.SI.Percentage)">
            <summary>
            Determines whether two Percentages are not equal.
            </summary>
            <param name="l">Left Percentage.</param>
            <param name="r">Right Percentage.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.op_LessThan(Nalco.Numerics.SI.Percentage,Nalco.Numerics.SI.Percentage)">
            <summary>
            Determines if the left Percentage is less than the right Percentage.
            </summary>
            <param name="l">Left Percentage.</param>
            <param name="r">Right Percentage.</param>
            <returns>True if the left Percentage is less than the right Percentage.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.op_LessThanOrEqual(Nalco.Numerics.SI.Percentage,Nalco.Numerics.SI.Percentage)">
            <summary>
            Determines if the left Percentage is less than or equal to the right Percentage.
            </summary>
            <param name="l">Left Percentage.</param>
            <param name="r">Right Percentage.</param>
            <returns>True if the left Percentage is less than or equal to the right Percentage.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.op_GreaterThanOrEqual(Nalco.Numerics.SI.Percentage,Nalco.Numerics.SI.Percentage)">
            <summary>
            Determines if the left Percentage is greater than or equal to the right Percentage.
            </summary>
            <param name="l">Left Percentage.</param>
            <param name="r">Right Percentage.</param>
            <returns>True if the left Percentage is greater than or equal to the right Percentage.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.op_GreaterThan(Nalco.Numerics.SI.Percentage,Nalco.Numerics.SI.Percentage)">
            <summary>
            Determines if the left Percentage is greater than the right Percentage.
            </summary>
            <param name="l">Left Percentage.</param>
            <param name="r">Right Percentage.</param>
            <returns>True if the left Percentage is greater than the right Percentage.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.op_Addition(Nalco.Numerics.SI.Percentage,Nalco.Numerics.SI.Percentage)">
            <summary>
            Add two Percentages together.
            </summary>
            <param name="l">Left Percentage.</param>
            <param name="r">Right Percentage.</param>
            <returns>Sum of Percentages.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.op_UnaryNegation(Nalco.Numerics.SI.Percentage)">
            <summary>
            Negate a Percentage.
            </summary>
            <param name="l">Left Percentage.</param>
            <returns>Negative Percentage.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.op_Subtraction(Nalco.Numerics.SI.Percentage,Nalco.Numerics.SI.Percentage)">
            <summary>
            Subtract two Percentages.
            </summary>
            <param name="l">Left Percentage.</param>
            <param name="r">Right Percentage.</param>
            <returns>Difference of Percentages.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.op_Multiply(Nalco.Numerics.SI.Percentage,System.Double)">
            <summary>
            Multiply a Percentage with a double.
            </summary>
            <param name="l">Left Percentage.</param>
            <param name="r">Double value.</param>
            <returns>Percentage.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.op_Multiply(System.Double,Nalco.Numerics.SI.Percentage)">
            <summary>
            Multiply a Percentage with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Percentage.</param>
            <returns>Percentage.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.op_Division(Nalco.Numerics.SI.Percentage,System.Double)">
            <summary>
            Divide a Percentage by a double.
            </summary>
            <param name="l">Left Percentage.</param>
            <param name="r">Double value.</param>
            <returns>Percentage.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.op_Division(Nalco.Numerics.SI.Percentage,Nalco.Numerics.SI.Percentage)">
            <summary>
            Divide a Percentage by another Percentage.
            </summary>
            <param name="l">Left Percentage.</param>
            <param name="r">Right Percentage.</param>
            <returns>Ratio of the two Percentages.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.op_Modulus(Nalco.Numerics.SI.Percentage,Nalco.Numerics.SI.Percentage)">
            <summary>
            Divide a Percentage by another Percentage and return the remainder.
            </summary>
            <param name="l">Left Percentage.</param>
            <param name="r">Right Percentage.</param>
            <returns>Remainder after a Percentage is divided by a Percentage.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.op_Explicit(Nalco.Numerics.SI.Percentage)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Percentage into a weakly typed Scalar.
            </summary>
            <param name="l">Percentage.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Percentage.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Percentage">
            <summary>
            Explicitly convert the weakly typed Scalar into a Percentage.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Percentage.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.ReciprocalEnergy">
            <summary>
            Scalar name (si unit description).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.ReciprocalEnergy.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ReciprocalEnergy.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ReciprocalEnergy.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.#ctor(System.Double)">
            <summary>
            Construct a new TypedScalarTemplate with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_Multiply(Nalco.Numerics.SI.ReciprocalEnergy,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Multiply a reciprocal energy by an energy density
            </summary>
            <param name="l">Left reciprocal energy.</param>
            <param name="r">Right energy density.</param>
            <returns>Resulting reciprocal volume.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.ReciprocalEnergy.Zero">
            <summary>
            ReciprocalEnergy of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.#ctor(System.Double,Nalco.Numerics.SI.ReciprocalEnergy.Subunit)">
            <summary>
            Construct a ReciprocalEnergy with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.ReciprocalEnergy.Item(Nalco.Numerics.SI.ReciprocalEnergy.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.ReciprocalEnergy.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.Abbreviation(Nalco.Numerics.SI.ReciprocalEnergy.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.Description(Nalco.Numerics.SI.ReciprocalEnergy.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalEnergy.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.Parse(System.String)">
            <summary>
            Converts the string representation of a ReciprocalEnergy to a ReciprocalEnergy.
            </summary>
            <param name="s">A string that contains a ReciprocalEnergy to convert.</param>
            <returns>A ReciprocalEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ReciprocalEnergy to a ReciprocalEnergy.
            </summary>
            <param name="s">A string that contains a ReciprocalEnergy to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A ReciprocalEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ReciprocalEnergy to a ReciprocalEnergy.
            </summary>
            <param name="s">A string that contains a ReciprocalEnergy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A ReciprocalEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalEnergy.Subunit)">
            <summary>
            Converts the string representation of a ReciprocalEnergy to a ReciprocalEnergy.
            </summary>
            <param name="s">A string that contains a ReciprocalEnergy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A ReciprocalEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.TryParse(System.String,Nalco.Numerics.SI.ReciprocalEnergy@)">
            <summary>
            Converts the string representation of a ReciprocalEnergy to a ReciprocalEnergy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ReciprocalEnergy to convert.</param>
            <param name="result">When this method returns, contains the ReciprocalEnergy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalEnergy@)">
            <summary>
            Converts the string representation of a ReciprocalEnergy to a ReciprocalEnergy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ReciprocalEnergy to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ReciprocalEnergy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalEnergy@)">
            <summary>
            Converts the string representation of a ReciprocalEnergy to a ReciprocalEnergy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ReciprocalEnergy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ReciprocalEnergy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalEnergy.Subunit,Nalco.Numerics.SI.ReciprocalEnergy@)">
            <summary>
            Converts the string representation of a ReciprocalEnergy to a ReciprocalEnergy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ReciprocalEnergy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the ReciprocalEnergy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.CompareTo(System.Object)">
            <summary>
            Compares the current ReciprocalEnergy with another ReciprocalEnergy.
            </summary>
            <param name="obj">ReciprocalEnergy to compare with this ReciprocalEnergy.</param>
            <returns>Less than zero when this ReciprocalEnergy is less than the other parameter.
            Zero when this ReciprocalEnergy is equal to the other parameter.
            Greater than zero when this ReciprocalEnergy is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of ReciprocalEnergy.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.CompareTo(Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Compares the current ReciprocalEnergy with another ReciprocalEnergy.
            </summary>
            <param name="other">ReciprocalEnergy to compare with this ReciprocalEnergy.</param>
            <returns>Less than zero when this ReciprocalEnergy is less than the other parameter.
            Zero when this ReciprocalEnergy is equal to the other parameter.
            Greater than zero when this ReciprocalEnergy is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current ReciprocalEnergy.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.Abs(Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Returns the absolute value of a ReciprocalEnergy.
            </summary>
            <param name="value">A ReciprocalEnergy.</param>
            <returns>A ReciprocalEnergy that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.Round(Nalco.Numerics.SI.ReciprocalEnergy,Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Returns a ReciprocalEnergy rounded to the nearest interval.
            </summary>
            <param name="value">A ReciprocalEnergy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ReciprocalEnergy rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.Round(Nalco.Numerics.SI.ReciprocalEnergy,Nalco.Numerics.SI.ReciprocalEnergy,System.MidpointRounding)">
            <summary>
            Returns a ReciprocalEnergy rounded to the nearest interval.
            </summary>
            <param name="value">A ReciprocalEnergy.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A ReciprocalEnergy rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.Floor(Nalco.Numerics.SI.ReciprocalEnergy,Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Returns a ReciprocalEnergy rounded down to the nearest interval.
            </summary>
            <param name="value">A ReciprocalEnergy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ReciprocalEnergy rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.Ceiling(Nalco.Numerics.SI.ReciprocalEnergy,Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Returns a ReciprocalEnergy rounded up to the nearest interval.
            </summary>
            <param name="value">A ReciprocalEnergy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ReciprocalEnergy rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_Equality(Nalco.Numerics.SI.ReciprocalEnergy,Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Determines whether two ReciprocalEnergys are equal.
            </summary>
            <param name="l">Left ReciprocalEnergy.</param>
            <param name="r">Right ReciprocalEnergy.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_Inequality(Nalco.Numerics.SI.ReciprocalEnergy,Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Determines whether two ReciprocalEnergys are not equal.
            </summary>
            <param name="l">Left ReciprocalEnergy.</param>
            <param name="r">Right ReciprocalEnergy.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_LessThan(Nalco.Numerics.SI.ReciprocalEnergy,Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Determines if the left ReciprocalEnergy is less than the right ReciprocalEnergy.
            </summary>
            <param name="l">Left ReciprocalEnergy.</param>
            <param name="r">Right ReciprocalEnergy.</param>
            <returns>True if the left ReciprocalEnergy is less than the right ReciprocalEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_LessThanOrEqual(Nalco.Numerics.SI.ReciprocalEnergy,Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Determines if the left ReciprocalEnergy is less than or equal to the right ReciprocalEnergy.
            </summary>
            <param name="l">Left ReciprocalEnergy.</param>
            <param name="r">Right ReciprocalEnergy.</param>
            <returns>True if the left ReciprocalEnergy is less than or equal to the right ReciprocalEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_GreaterThanOrEqual(Nalco.Numerics.SI.ReciprocalEnergy,Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Determines if the left ReciprocalEnergy is greater than or equal to the right ReciprocalEnergy.
            </summary>
            <param name="l">Left ReciprocalEnergy.</param>
            <param name="r">Right ReciprocalEnergy.</param>
            <returns>True if the left ReciprocalEnergy is greater than or equal to the right ReciprocalEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_GreaterThan(Nalco.Numerics.SI.ReciprocalEnergy,Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Determines if the left ReciprocalEnergy is greater than the right ReciprocalEnergy.
            </summary>
            <param name="l">Left ReciprocalEnergy.</param>
            <param name="r">Right ReciprocalEnergy.</param>
            <returns>True if the left ReciprocalEnergy is greater than the right ReciprocalEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_Addition(Nalco.Numerics.SI.ReciprocalEnergy,Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Add two ReciprocalEnergys together.
            </summary>
            <param name="l">Left ReciprocalEnergy.</param>
            <param name="r">Right ReciprocalEnergy.</param>
            <returns>Sum of ReciprocalEnergys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_UnaryNegation(Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Negate a ReciprocalEnergy.
            </summary>
            <param name="l">Left ReciprocalEnergy.</param>
            <returns>Negative ReciprocalEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_Subtraction(Nalco.Numerics.SI.ReciprocalEnergy,Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Subtract two ReciprocalEnergys.
            </summary>
            <param name="l">Left ReciprocalEnergy.</param>
            <param name="r">Right ReciprocalEnergy.</param>
            <returns>Difference of ReciprocalEnergys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_Multiply(Nalco.Numerics.SI.ReciprocalEnergy,System.Double)">
            <summary>
            Multiply a ReciprocalEnergy with a double.
            </summary>
            <param name="l">Left ReciprocalEnergy.</param>
            <param name="r">Double value.</param>
            <returns>ReciprocalEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_Multiply(System.Double,Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Multiply a ReciprocalEnergy with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right ReciprocalEnergy.</param>
            <returns>ReciprocalEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_Division(Nalco.Numerics.SI.ReciprocalEnergy,System.Double)">
            <summary>
            Divide a ReciprocalEnergy by a double.
            </summary>
            <param name="l">Left ReciprocalEnergy.</param>
            <param name="r">Double value.</param>
            <returns>ReciprocalEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_Division(Nalco.Numerics.SI.ReciprocalEnergy,Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Divide a ReciprocalEnergy by another ReciprocalEnergy.
            </summary>
            <param name="l">Left ReciprocalEnergy.</param>
            <param name="r">Right ReciprocalEnergy.</param>
            <returns>Ratio of the two ReciprocalEnergys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_Modulus(Nalco.Numerics.SI.ReciprocalEnergy,Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Divide a ReciprocalEnergy by another ReciprocalEnergy and return the remainder.
            </summary>
            <param name="l">Left ReciprocalEnergy.</param>
            <param name="r">Right ReciprocalEnergy.</param>
            <returns>Remainder after a ReciprocalEnergy is divided by a ReciprocalEnergy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_Explicit(Nalco.Numerics.SI.ReciprocalEnergy)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the ReciprocalEnergy into a weakly typed Scalar.
            </summary>
            <param name="l">ReciprocalEnergy.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalEnergy.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.ReciprocalEnergy">
            <summary>
            Explicitly convert the weakly typed Scalar into a ReciprocalEnergy.
            </summary>
            <param name="s">Scalar.</param>
            <returns>ReciprocalEnergy.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.ReciprocalMass">
            <summary>
            Reciprocal mass (reciprocal kilograms).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.ReciprocalMass.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ReciprocalMass.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ReciprocalMass.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.#ctor(System.Double)">
            <summary>
            Construct a new ReciprocalMass with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_Multiply(Nalco.Numerics.SI.ReciprocalMass,Nalco.Numerics.SI.Mass)">
            <summary>
            Multiply a reciprocal mass by a mass.
            </summary>
            <param name="l">Left reciprocal mass.</param>
            <param name="r">Right mass.</param>
            <returns>Value.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.ReciprocalMass.Zero">
            <summary>
            ReciprocalMass of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.#ctor(System.Double,Nalco.Numerics.SI.ReciprocalMass.Subunit)">
            <summary>
            Construct a ReciprocalMass with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.ReciprocalMass.Item(Nalco.Numerics.SI.ReciprocalMass.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.ReciprocalMass.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.Abbreviation(Nalco.Numerics.SI.ReciprocalMass.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.Description(Nalco.Numerics.SI.ReciprocalMass.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalMass.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.Parse(System.String)">
            <summary>
            Converts the string representation of a ReciprocalMass to a ReciprocalMass.
            </summary>
            <param name="s">A string that contains a ReciprocalMass to convert.</param>
            <returns>A ReciprocalMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ReciprocalMass to a ReciprocalMass.
            </summary>
            <param name="s">A string that contains a ReciprocalMass to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A ReciprocalMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ReciprocalMass to a ReciprocalMass.
            </summary>
            <param name="s">A string that contains a ReciprocalMass to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A ReciprocalMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalMass.Subunit)">
            <summary>
            Converts the string representation of a ReciprocalMass to a ReciprocalMass.
            </summary>
            <param name="s">A string that contains a ReciprocalMass to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A ReciprocalMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.TryParse(System.String,Nalco.Numerics.SI.ReciprocalMass@)">
            <summary>
            Converts the string representation of a ReciprocalMass to a ReciprocalMass. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ReciprocalMass to convert.</param>
            <param name="result">When this method returns, contains the ReciprocalMass, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalMass@)">
            <summary>
            Converts the string representation of a ReciprocalMass to a ReciprocalMass. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ReciprocalMass to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ReciprocalMass, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalMass@)">
            <summary>
            Converts the string representation of a ReciprocalMass to a ReciprocalMass. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ReciprocalMass to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ReciprocalMass, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalMass.Subunit,Nalco.Numerics.SI.ReciprocalMass@)">
            <summary>
            Converts the string representation of a ReciprocalMass to a ReciprocalMass. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ReciprocalMass to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the ReciprocalMass, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.CompareTo(System.Object)">
            <summary>
            Compares the current ReciprocalMass with another ReciprocalMass.
            </summary>
            <param name="obj">ReciprocalMass to compare with this ReciprocalMass.</param>
            <returns>Less than zero when this ReciprocalMass is less than the other parameter.
            Zero when this ReciprocalMass is equal to the other parameter.
            Greater than zero when this ReciprocalMass is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of ReciprocalMass.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.CompareTo(Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Compares the current ReciprocalMass with another ReciprocalMass.
            </summary>
            <param name="other">ReciprocalMass to compare with this ReciprocalMass.</param>
            <returns>Less than zero when this ReciprocalMass is less than the other parameter.
            Zero when this ReciprocalMass is equal to the other parameter.
            Greater than zero when this ReciprocalMass is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current ReciprocalMass.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.Abs(Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Returns the absolute value of a ReciprocalMass.
            </summary>
            <param name="value">A ReciprocalMass.</param>
            <returns>A ReciprocalMass that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.Round(Nalco.Numerics.SI.ReciprocalMass,Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Returns a ReciprocalMass rounded to the nearest interval.
            </summary>
            <param name="value">A ReciprocalMass.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ReciprocalMass rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.Round(Nalco.Numerics.SI.ReciprocalMass,Nalco.Numerics.SI.ReciprocalMass,System.MidpointRounding)">
            <summary>
            Returns a ReciprocalMass rounded to the nearest interval.
            </summary>
            <param name="value">A ReciprocalMass.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A ReciprocalMass rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.Floor(Nalco.Numerics.SI.ReciprocalMass,Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Returns a ReciprocalMass rounded down to the nearest interval.
            </summary>
            <param name="value">A ReciprocalMass.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ReciprocalMass rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.Ceiling(Nalco.Numerics.SI.ReciprocalMass,Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Returns a ReciprocalMass rounded up to the nearest interval.
            </summary>
            <param name="value">A ReciprocalMass.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ReciprocalMass rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_Equality(Nalco.Numerics.SI.ReciprocalMass,Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Determines whether two ReciprocalMasss are equal.
            </summary>
            <param name="l">Left ReciprocalMass.</param>
            <param name="r">Right ReciprocalMass.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_Inequality(Nalco.Numerics.SI.ReciprocalMass,Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Determines whether two ReciprocalMasss are not equal.
            </summary>
            <param name="l">Left ReciprocalMass.</param>
            <param name="r">Right ReciprocalMass.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_LessThan(Nalco.Numerics.SI.ReciprocalMass,Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Determines if the left ReciprocalMass is less than the right ReciprocalMass.
            </summary>
            <param name="l">Left ReciprocalMass.</param>
            <param name="r">Right ReciprocalMass.</param>
            <returns>True if the left ReciprocalMass is less than the right ReciprocalMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_LessThanOrEqual(Nalco.Numerics.SI.ReciprocalMass,Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Determines if the left ReciprocalMass is less than or equal to the right ReciprocalMass.
            </summary>
            <param name="l">Left ReciprocalMass.</param>
            <param name="r">Right ReciprocalMass.</param>
            <returns>True if the left ReciprocalMass is less than or equal to the right ReciprocalMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_GreaterThanOrEqual(Nalco.Numerics.SI.ReciprocalMass,Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Determines if the left ReciprocalMass is greater than or equal to the right ReciprocalMass.
            </summary>
            <param name="l">Left ReciprocalMass.</param>
            <param name="r">Right ReciprocalMass.</param>
            <returns>True if the left ReciprocalMass is greater than or equal to the right ReciprocalMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_GreaterThan(Nalco.Numerics.SI.ReciprocalMass,Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Determines if the left ReciprocalMass is greater than the right ReciprocalMass.
            </summary>
            <param name="l">Left ReciprocalMass.</param>
            <param name="r">Right ReciprocalMass.</param>
            <returns>True if the left ReciprocalMass is greater than the right ReciprocalMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_Addition(Nalco.Numerics.SI.ReciprocalMass,Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Add two ReciprocalMasss together.
            </summary>
            <param name="l">Left ReciprocalMass.</param>
            <param name="r">Right ReciprocalMass.</param>
            <returns>Sum of ReciprocalMasss.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_UnaryNegation(Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Negate a ReciprocalMass.
            </summary>
            <param name="l">Left ReciprocalMass.</param>
            <returns>Negative ReciprocalMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_Subtraction(Nalco.Numerics.SI.ReciprocalMass,Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Subtract two ReciprocalMasss.
            </summary>
            <param name="l">Left ReciprocalMass.</param>
            <param name="r">Right ReciprocalMass.</param>
            <returns>Difference of ReciprocalMasss.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_Multiply(Nalco.Numerics.SI.ReciprocalMass,System.Double)">
            <summary>
            Multiply a ReciprocalMass with a double.
            </summary>
            <param name="l">Left ReciprocalMass.</param>
            <param name="r">Double value.</param>
            <returns>ReciprocalMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_Multiply(System.Double,Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Multiply a ReciprocalMass with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right ReciprocalMass.</param>
            <returns>ReciprocalMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_Division(Nalco.Numerics.SI.ReciprocalMass,System.Double)">
            <summary>
            Divide a ReciprocalMass by a double.
            </summary>
            <param name="l">Left ReciprocalMass.</param>
            <param name="r">Double value.</param>
            <returns>ReciprocalMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_Division(Nalco.Numerics.SI.ReciprocalMass,Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Divide a ReciprocalMass by another ReciprocalMass.
            </summary>
            <param name="l">Left ReciprocalMass.</param>
            <param name="r">Right ReciprocalMass.</param>
            <returns>Ratio of the two ReciprocalMasss.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_Modulus(Nalco.Numerics.SI.ReciprocalMass,Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Divide a ReciprocalMass by another ReciprocalMass and return the remainder.
            </summary>
            <param name="l">Left ReciprocalMass.</param>
            <param name="r">Right ReciprocalMass.</param>
            <returns>Remainder after a ReciprocalMass is divided by a ReciprocalMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_Explicit(Nalco.Numerics.SI.ReciprocalMass)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the ReciprocalMass into a weakly typed Scalar.
            </summary>
            <param name="l">ReciprocalMass.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalMass.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.ReciprocalMass">
            <summary>
            Explicitly convert the weakly typed Scalar into a ReciprocalMass.
            </summary>
            <param name="s">Scalar.</param>
            <returns>ReciprocalMass.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.ReciprocalVolume">
            <summary>
            Scalar name (si unit description).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.ReciprocalVolume.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ReciprocalVolume.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ReciprocalVolume.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.#ctor(System.Double)">
            <summary>
            Construct a new TypedScalarTemplate with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_Division(Nalco.Numerics.SI.ReciprocalVolume,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Divide a reciprocal volume by energy density.
            </summary>
            <param name="l">Left reciprocal volume.</param>
            <param name="r">Right energy density.</param>
            <returns>Resulting reciprocal energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_Division(Nalco.Numerics.SI.ReciprocalVolume,Nalco.Numerics.SI.ReciprocalEnergy)">
            <summary>
            Divide a reciprocal volume by reciprocal energy.
            </summary>
            <param name="l">Left reciprocal volume.</param>
            <param name="r">Right reciprocal energy.</param>
            <returns>Resulting energy density.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.ReciprocalVolume.Zero">
            <summary>
            ReciprocalVolume of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.#ctor(System.Double,Nalco.Numerics.SI.ReciprocalVolume.Subunit)">
            <summary>
            Construct a ReciprocalVolume with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.ReciprocalVolume.Item(Nalco.Numerics.SI.ReciprocalVolume.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.ReciprocalVolume.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.Abbreviation(Nalco.Numerics.SI.ReciprocalVolume.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.Description(Nalco.Numerics.SI.ReciprocalVolume.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalVolume.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.Parse(System.String)">
            <summary>
            Converts the string representation of a ReciprocalVolume to a ReciprocalVolume.
            </summary>
            <param name="s">A string that contains a ReciprocalVolume to convert.</param>
            <returns>A ReciprocalVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ReciprocalVolume to a ReciprocalVolume.
            </summary>
            <param name="s">A string that contains a ReciprocalVolume to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A ReciprocalVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ReciprocalVolume to a ReciprocalVolume.
            </summary>
            <param name="s">A string that contains a ReciprocalVolume to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A ReciprocalVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalVolume.Subunit)">
            <summary>
            Converts the string representation of a ReciprocalVolume to a ReciprocalVolume.
            </summary>
            <param name="s">A string that contains a ReciprocalVolume to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A ReciprocalVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.TryParse(System.String,Nalco.Numerics.SI.ReciprocalVolume@)">
            <summary>
            Converts the string representation of a ReciprocalVolume to a ReciprocalVolume. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ReciprocalVolume to convert.</param>
            <param name="result">When this method returns, contains the ReciprocalVolume, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalVolume@)">
            <summary>
            Converts the string representation of a ReciprocalVolume to a ReciprocalVolume. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ReciprocalVolume to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ReciprocalVolume, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalVolume@)">
            <summary>
            Converts the string representation of a ReciprocalVolume to a ReciprocalVolume. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ReciprocalVolume to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ReciprocalVolume, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalVolume.Subunit,Nalco.Numerics.SI.ReciprocalVolume@)">
            <summary>
            Converts the string representation of a ReciprocalVolume to a ReciprocalVolume. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ReciprocalVolume to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the ReciprocalVolume, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.CompareTo(System.Object)">
            <summary>
            Compares the current ReciprocalVolume with another ReciprocalVolume.
            </summary>
            <param name="obj">ReciprocalVolume to compare with this ReciprocalVolume.</param>
            <returns>Less than zero when this ReciprocalVolume is less than the other parameter.
            Zero when this ReciprocalVolume is equal to the other parameter.
            Greater than zero when this ReciprocalVolume is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of ReciprocalVolume.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.CompareTo(Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Compares the current ReciprocalVolume with another ReciprocalVolume.
            </summary>
            <param name="other">ReciprocalVolume to compare with this ReciprocalVolume.</param>
            <returns>Less than zero when this ReciprocalVolume is less than the other parameter.
            Zero when this ReciprocalVolume is equal to the other parameter.
            Greater than zero when this ReciprocalVolume is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current ReciprocalVolume.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.Abs(Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Returns the absolute value of a ReciprocalVolume.
            </summary>
            <param name="value">A ReciprocalVolume.</param>
            <returns>A ReciprocalVolume that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.Round(Nalco.Numerics.SI.ReciprocalVolume,Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Returns a ReciprocalVolume rounded to the nearest interval.
            </summary>
            <param name="value">A ReciprocalVolume.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ReciprocalVolume rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.Round(Nalco.Numerics.SI.ReciprocalVolume,Nalco.Numerics.SI.ReciprocalVolume,System.MidpointRounding)">
            <summary>
            Returns a ReciprocalVolume rounded to the nearest interval.
            </summary>
            <param name="value">A ReciprocalVolume.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A ReciprocalVolume rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.Floor(Nalco.Numerics.SI.ReciprocalVolume,Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Returns a ReciprocalVolume rounded down to the nearest interval.
            </summary>
            <param name="value">A ReciprocalVolume.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ReciprocalVolume rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.Ceiling(Nalco.Numerics.SI.ReciprocalVolume,Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Returns a ReciprocalVolume rounded up to the nearest interval.
            </summary>
            <param name="value">A ReciprocalVolume.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ReciprocalVolume rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_Equality(Nalco.Numerics.SI.ReciprocalVolume,Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Determines whether two ReciprocalVolumes are equal.
            </summary>
            <param name="l">Left ReciprocalVolume.</param>
            <param name="r">Right ReciprocalVolume.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_Inequality(Nalco.Numerics.SI.ReciprocalVolume,Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Determines whether two ReciprocalVolumes are not equal.
            </summary>
            <param name="l">Left ReciprocalVolume.</param>
            <param name="r">Right ReciprocalVolume.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_LessThan(Nalco.Numerics.SI.ReciprocalVolume,Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Determines if the left ReciprocalVolume is less than the right ReciprocalVolume.
            </summary>
            <param name="l">Left ReciprocalVolume.</param>
            <param name="r">Right ReciprocalVolume.</param>
            <returns>True if the left ReciprocalVolume is less than the right ReciprocalVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_LessThanOrEqual(Nalco.Numerics.SI.ReciprocalVolume,Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Determines if the left ReciprocalVolume is less than or equal to the right ReciprocalVolume.
            </summary>
            <param name="l">Left ReciprocalVolume.</param>
            <param name="r">Right ReciprocalVolume.</param>
            <returns>True if the left ReciprocalVolume is less than or equal to the right ReciprocalVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_GreaterThanOrEqual(Nalco.Numerics.SI.ReciprocalVolume,Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Determines if the left ReciprocalVolume is greater than or equal to the right ReciprocalVolume.
            </summary>
            <param name="l">Left ReciprocalVolume.</param>
            <param name="r">Right ReciprocalVolume.</param>
            <returns>True if the left ReciprocalVolume is greater than or equal to the right ReciprocalVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_GreaterThan(Nalco.Numerics.SI.ReciprocalVolume,Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Determines if the left ReciprocalVolume is greater than the right ReciprocalVolume.
            </summary>
            <param name="l">Left ReciprocalVolume.</param>
            <param name="r">Right ReciprocalVolume.</param>
            <returns>True if the left ReciprocalVolume is greater than the right ReciprocalVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_Addition(Nalco.Numerics.SI.ReciprocalVolume,Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Add two ReciprocalVolumes together.
            </summary>
            <param name="l">Left ReciprocalVolume.</param>
            <param name="r">Right ReciprocalVolume.</param>
            <returns>Sum of ReciprocalVolumes.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_UnaryNegation(Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Negate a ReciprocalVolume.
            </summary>
            <param name="l">Left ReciprocalVolume.</param>
            <returns>Negative ReciprocalVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_Subtraction(Nalco.Numerics.SI.ReciprocalVolume,Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Subtract two ReciprocalVolumes.
            </summary>
            <param name="l">Left ReciprocalVolume.</param>
            <param name="r">Right ReciprocalVolume.</param>
            <returns>Difference of ReciprocalVolumes.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_Multiply(Nalco.Numerics.SI.ReciprocalVolume,System.Double)">
            <summary>
            Multiply a ReciprocalVolume with a double.
            </summary>
            <param name="l">Left ReciprocalVolume.</param>
            <param name="r">Double value.</param>
            <returns>ReciprocalVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_Multiply(System.Double,Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Multiply a ReciprocalVolume with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right ReciprocalVolume.</param>
            <returns>ReciprocalVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_Division(Nalco.Numerics.SI.ReciprocalVolume,System.Double)">
            <summary>
            Divide a ReciprocalVolume by a double.
            </summary>
            <param name="l">Left ReciprocalVolume.</param>
            <param name="r">Double value.</param>
            <returns>ReciprocalVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_Division(Nalco.Numerics.SI.ReciprocalVolume,Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Divide a ReciprocalVolume by another ReciprocalVolume.
            </summary>
            <param name="l">Left ReciprocalVolume.</param>
            <param name="r">Right ReciprocalVolume.</param>
            <returns>Ratio of the two ReciprocalVolumes.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_Modulus(Nalco.Numerics.SI.ReciprocalVolume,Nalco.Numerics.SI.ReciprocalVolume)">
            <summary>
            Divide a ReciprocalVolume by another ReciprocalVolume and return the remainder.
            </summary>
            <param name="l">Left ReciprocalVolume.</param>
            <param name="r">Right ReciprocalVolume.</param>
            <returns>Remainder after a ReciprocalVolume is divided by a ReciprocalVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_Explicit(Nalco.Numerics.SI.ReciprocalVolume)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the ReciprocalVolume into a weakly typed Scalar.
            </summary>
            <param name="l">ReciprocalVolume.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalVolume.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.ReciprocalVolume">
            <summary>
            Explicitly convert the weakly typed Scalar into a ReciprocalVolume.
            </summary>
            <param name="s">Scalar.</param>
            <returns>ReciprocalVolume.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.PowerEfficiency">
            <summary>
            Power efficiency(watts per watt).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.PowerEfficiency.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.PowerEfficiency.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.PowerEfficiency.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.#ctor(System.Double)">
            <summary>
            Construct a new PowerEfficiency with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_Multiply(Nalco.Numerics.SI.PowerEfficiency,Nalco.Numerics.SI.Power)">
            <summary>
            Multiply a power efficiency by power
            </summary>
            <param name="l">Left power efficiency.</param>
            <param name="r">Right power.</param>
            <returns>Resulting power.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.PowerEfficiency.Zero">
            <summary>
            PowerEfficiency of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.#ctor(System.Double,Nalco.Numerics.SI.PowerEfficiency.Subunit)">
            <summary>
            Construct a PowerEfficiency with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.PowerEfficiency.Item(Nalco.Numerics.SI.PowerEfficiency.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.PowerEfficiency.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.Abbreviation(Nalco.Numerics.SI.PowerEfficiency.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.Description(Nalco.Numerics.SI.PowerEfficiency.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.PowerEfficiency.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.Parse(System.String)">
            <summary>
            Converts the string representation of a PowerEfficiency to a PowerEfficiency.
            </summary>
            <param name="s">A string that contains a PowerEfficiency to convert.</param>
            <returns>A PowerEfficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a PowerEfficiency to a PowerEfficiency.
            </summary>
            <param name="s">A string that contains a PowerEfficiency to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A PowerEfficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a PowerEfficiency to a PowerEfficiency.
            </summary>
            <param name="s">A string that contains a PowerEfficiency to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A PowerEfficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.PowerEfficiency.Subunit)">
            <summary>
            Converts the string representation of a PowerEfficiency to a PowerEfficiency.
            </summary>
            <param name="s">A string that contains a PowerEfficiency to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A PowerEfficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.TryParse(System.String,Nalco.Numerics.SI.PowerEfficiency@)">
            <summary>
            Converts the string representation of a PowerEfficiency to a PowerEfficiency. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a PowerEfficiency to convert.</param>
            <param name="result">When this method returns, contains the PowerEfficiency, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.PowerEfficiency@)">
            <summary>
            Converts the string representation of a PowerEfficiency to a PowerEfficiency. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a PowerEfficiency to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the PowerEfficiency, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.PowerEfficiency@)">
            <summary>
            Converts the string representation of a PowerEfficiency to a PowerEfficiency. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a PowerEfficiency to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the PowerEfficiency, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.PowerEfficiency.Subunit,Nalco.Numerics.SI.PowerEfficiency@)">
            <summary>
            Converts the string representation of a PowerEfficiency to a PowerEfficiency. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a PowerEfficiency to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the PowerEfficiency, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.CompareTo(System.Object)">
            <summary>
            Compares the current PowerEfficiency with another PowerEfficiency.
            </summary>
            <param name="obj">PowerEfficiency to compare with this PowerEfficiency.</param>
            <returns>Less than zero when this PowerEfficiency is less than the other parameter.
            Zero when this PowerEfficiency is equal to the other parameter.
            Greater than zero when this PowerEfficiency is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of PowerEfficiency.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.CompareTo(Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Compares the current PowerEfficiency with another PowerEfficiency.
            </summary>
            <param name="other">PowerEfficiency to compare with this PowerEfficiency.</param>
            <returns>Less than zero when this PowerEfficiency is less than the other parameter.
            Zero when this PowerEfficiency is equal to the other parameter.
            Greater than zero when this PowerEfficiency is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current PowerEfficiency.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.Abs(Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Returns the absolute value of a PowerEfficiency.
            </summary>
            <param name="value">A PowerEfficiency.</param>
            <returns>A PowerEfficiency that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.Round(Nalco.Numerics.SI.PowerEfficiency,Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Returns a PowerEfficiency rounded to the nearest interval.
            </summary>
            <param name="value">A PowerEfficiency.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A PowerEfficiency rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.Round(Nalco.Numerics.SI.PowerEfficiency,Nalco.Numerics.SI.PowerEfficiency,System.MidpointRounding)">
            <summary>
            Returns a PowerEfficiency rounded to the nearest interval.
            </summary>
            <param name="value">A PowerEfficiency.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A PowerEfficiency rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.Floor(Nalco.Numerics.SI.PowerEfficiency,Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Returns a PowerEfficiency rounded down to the nearest interval.
            </summary>
            <param name="value">A PowerEfficiency.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A PowerEfficiency rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.Ceiling(Nalco.Numerics.SI.PowerEfficiency,Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Returns a PowerEfficiency rounded up to the nearest interval.
            </summary>
            <param name="value">A PowerEfficiency.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A PowerEfficiency rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_Equality(Nalco.Numerics.SI.PowerEfficiency,Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Determines whether two PowerEfficiencys are equal.
            </summary>
            <param name="l">Left PowerEfficiency.</param>
            <param name="r">Right PowerEfficiency.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_Inequality(Nalco.Numerics.SI.PowerEfficiency,Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Determines whether two PowerEfficiencys are not equal.
            </summary>
            <param name="l">Left PowerEfficiency.</param>
            <param name="r">Right PowerEfficiency.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_LessThan(Nalco.Numerics.SI.PowerEfficiency,Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Determines if the left PowerEfficiency is less than the right PowerEfficiency.
            </summary>
            <param name="l">Left PowerEfficiency.</param>
            <param name="r">Right PowerEfficiency.</param>
            <returns>True if the left PowerEfficiency is less than the right PowerEfficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_LessThanOrEqual(Nalco.Numerics.SI.PowerEfficiency,Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Determines if the left PowerEfficiency is less than or equal to the right PowerEfficiency.
            </summary>
            <param name="l">Left PowerEfficiency.</param>
            <param name="r">Right PowerEfficiency.</param>
            <returns>True if the left PowerEfficiency is less than or equal to the right PowerEfficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_GreaterThanOrEqual(Nalco.Numerics.SI.PowerEfficiency,Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Determines if the left PowerEfficiency is greater than or equal to the right PowerEfficiency.
            </summary>
            <param name="l">Left PowerEfficiency.</param>
            <param name="r">Right PowerEfficiency.</param>
            <returns>True if the left PowerEfficiency is greater than or equal to the right PowerEfficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_GreaterThan(Nalco.Numerics.SI.PowerEfficiency,Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Determines if the left PowerEfficiency is greater than the right PowerEfficiency.
            </summary>
            <param name="l">Left PowerEfficiency.</param>
            <param name="r">Right PowerEfficiency.</param>
            <returns>True if the left PowerEfficiency is greater than the right PowerEfficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_Addition(Nalco.Numerics.SI.PowerEfficiency,Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Add two PowerEfficiencys together.
            </summary>
            <param name="l">Left PowerEfficiency.</param>
            <param name="r">Right PowerEfficiency.</param>
            <returns>Sum of PowerEfficiencys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_UnaryNegation(Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Negate a PowerEfficiency.
            </summary>
            <param name="l">Left PowerEfficiency.</param>
            <returns>Negative PowerEfficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_Subtraction(Nalco.Numerics.SI.PowerEfficiency,Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Subtract two PowerEfficiencys.
            </summary>
            <param name="l">Left PowerEfficiency.</param>
            <param name="r">Right PowerEfficiency.</param>
            <returns>Difference of PowerEfficiencys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_Multiply(Nalco.Numerics.SI.PowerEfficiency,System.Double)">
            <summary>
            Multiply a PowerEfficiency with a double.
            </summary>
            <param name="l">Left PowerEfficiency.</param>
            <param name="r">Double value.</param>
            <returns>PowerEfficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_Multiply(System.Double,Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Multiply a PowerEfficiency with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right PowerEfficiency.</param>
            <returns>PowerEfficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_Division(Nalco.Numerics.SI.PowerEfficiency,System.Double)">
            <summary>
            Divide a PowerEfficiency by a double.
            </summary>
            <param name="l">Left PowerEfficiency.</param>
            <param name="r">Double value.</param>
            <returns>PowerEfficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_Division(Nalco.Numerics.SI.PowerEfficiency,Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Divide a PowerEfficiency by another PowerEfficiency.
            </summary>
            <param name="l">Left PowerEfficiency.</param>
            <param name="r">Right PowerEfficiency.</param>
            <returns>Ratio of the two PowerEfficiencys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_Modulus(Nalco.Numerics.SI.PowerEfficiency,Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Divide a PowerEfficiency by another PowerEfficiency and return the remainder.
            </summary>
            <param name="l">Left PowerEfficiency.</param>
            <param name="r">Right PowerEfficiency.</param>
            <returns>Remainder after a PowerEfficiency is divided by a PowerEfficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_Explicit(Nalco.Numerics.SI.PowerEfficiency)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the PowerEfficiency into a weakly typed Scalar.
            </summary>
            <param name="l">PowerEfficiency.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PowerEfficiency.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.PowerEfficiency">
            <summary>
            Explicitly convert the weakly typed Scalar into a PowerEfficiency.
            </summary>
            <param name="s">Scalar.</param>
            <returns>PowerEfficiency.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.SpecificEnthalpy">
            <summary>
            Specific Enthalpy (joules per kilogram).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.SpecificEnthalpy.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.SpecificEnthalpy.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
            <remarks>
            kJ/kg = 1000 * m2 kg s-2 kg-1 = 1000 * m2 s-2
            </remarks>
        </member>
        <member name="F:Nalco.Numerics.SI.SpecificEnthalpy.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.#ctor(System.Double)">
            <summary>
            Construct a new SpecificEnthalpy with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Multiply(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.Mass)">
            <summary>
            Multiply a specific enthalpy by a mass.
            </summary>
            <param name="l">Left specific enthalpy.</param>
            <param name="r">Right mass.</param>
            <returns>Resulting energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Explicit(Nalco.Numerics.SI.AvailableEnergy)~Nalco.Numerics.SI.SpecificEnthalpy">
            <summary>
            Implicitly convert the available energy into a specific enthalpy.
            </summary>
            <param name="l">Available energy.</param>
            <returns>Specific enthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Multiply(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.MassRate)">
            <summary>
            Multiply a specific enthalpy by a mass rate.
            </summary>
            <param name="l">Left specific enthalpy.</param>
            <param name="r">Right mass rate.</param>
            <returns>Resulting power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Division(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Divide a specific enthalpy by a temperature interval.
            </summary>
            <param name="l">Left specific enthalpy.</param>
            <param name="r">Right temperature interval.</param>
            <returns>Resulting specific entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Division(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Divide a specific enthalpy by a specific entropy.
            </summary>
            <param name="l">Left specific enthalpy.</param>
            <param name="r">Right specific entropy.</param>
            <returns>Resulting temperature interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Division(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.Temperature)">
            <summary>
            Divide a specific enthalpy by a temperature.
            </summary>
            <param name="l">Left specific enthalpy.</param>
            <param name="r">Right temperature.</param>
            <returns>Resulting specific heat capacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Division(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Divide a specific enthalpy by a specific heat capacity.
            </summary>
            <param name="l">Left specific enthalpy.</param>
            <param name="r">Right specific heat capacity.</param>
            <returns>Resulting temperature.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Division(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.Pressure)">
            <summary>
            Divide a specific enthalpy by a pressure.
            </summary>
            <param name="l">Left specific enthalpy.</param>
            <param name="r">Right pressure.</param>
            <returns>Resulting specific volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Division(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Divide a specific enthalpy by a specific volume.
            </summary>
            <param name="l">Left specific enthalpy.</param>
            <param name="r">Right specific volume.</param>
            <returns>Resulting pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Explicit(Nalco.Numerics.SI.Velocity)~Nalco.Numerics.SI.SpecificEnthalpy">
            <summary>
            Implicitly convert the velocity into a specific enthalpy.
            </summary>
            <param name="l">Velocity.</param>
            <returns>Specific Enthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Multiply(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.Density)">
            <summary>
            Multiply a specific enthalpy by a density.
            </summary>
            <param name="l">Left specific enthalpy.</param>
            <param name="r">Right density.</param>
            <returns>Resulting pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Division(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Divide a specific enthalpy by an available energy
            </summary>
            <param name="l">Left specific enthalpy.</param>
            <param name="r">Right available energy.</param>
            <returns>Ratio of the specific enthalpy over available energy.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.SpecificEnthalpy.Zero">
            <summary>
            SpecificEnthalpy of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.#ctor(System.Double,Nalco.Numerics.SI.SpecificEnthalpy.Subunit)">
            <summary>
            Construct a SpecificEnthalpy with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.SpecificEnthalpy.Item(Nalco.Numerics.SI.SpecificEnthalpy.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.SpecificEnthalpy.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.Abbreviation(Nalco.Numerics.SI.SpecificEnthalpy.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.Description(Nalco.Numerics.SI.SpecificEnthalpy.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificEnthalpy.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.Parse(System.String)">
            <summary>
            Converts the string representation of a SpecificEnthalpy to a SpecificEnthalpy.
            </summary>
            <param name="s">A string that contains a SpecificEnthalpy to convert.</param>
            <returns>A SpecificEnthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a SpecificEnthalpy to a SpecificEnthalpy.
            </summary>
            <param name="s">A string that contains a SpecificEnthalpy to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A SpecificEnthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a SpecificEnthalpy to a SpecificEnthalpy.
            </summary>
            <param name="s">A string that contains a SpecificEnthalpy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A SpecificEnthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificEnthalpy.Subunit)">
            <summary>
            Converts the string representation of a SpecificEnthalpy to a SpecificEnthalpy.
            </summary>
            <param name="s">A string that contains a SpecificEnthalpy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A SpecificEnthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.TryParse(System.String,Nalco.Numerics.SI.SpecificEnthalpy@)">
            <summary>
            Converts the string representation of a SpecificEnthalpy to a SpecificEnthalpy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificEnthalpy to convert.</param>
            <param name="result">When this method returns, contains the SpecificEnthalpy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificEnthalpy@)">
            <summary>
            Converts the string representation of a SpecificEnthalpy to a SpecificEnthalpy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificEnthalpy to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the SpecificEnthalpy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificEnthalpy@)">
            <summary>
            Converts the string representation of a SpecificEnthalpy to a SpecificEnthalpy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificEnthalpy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the SpecificEnthalpy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificEnthalpy.Subunit,Nalco.Numerics.SI.SpecificEnthalpy@)">
            <summary>
            Converts the string representation of a SpecificEnthalpy to a SpecificEnthalpy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificEnthalpy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the SpecificEnthalpy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.CompareTo(System.Object)">
            <summary>
            Compares the current SpecificEnthalpy with another SpecificEnthalpy.
            </summary>
            <param name="obj">SpecificEnthalpy to compare with this SpecificEnthalpy.</param>
            <returns>Less than zero when this SpecificEnthalpy is less than the other parameter.
            Zero when this SpecificEnthalpy is equal to the other parameter.
            Greater than zero when this SpecificEnthalpy is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of SpecificEnthalpy.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.CompareTo(Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Compares the current SpecificEnthalpy with another SpecificEnthalpy.
            </summary>
            <param name="other">SpecificEnthalpy to compare with this SpecificEnthalpy.</param>
            <returns>Less than zero when this SpecificEnthalpy is less than the other parameter.
            Zero when this SpecificEnthalpy is equal to the other parameter.
            Greater than zero when this SpecificEnthalpy is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current SpecificEnthalpy.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.Abs(Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Returns the absolute value of a SpecificEnthalpy.
            </summary>
            <param name="value">A SpecificEnthalpy.</param>
            <returns>A SpecificEnthalpy that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.Round(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Returns a SpecificEnthalpy rounded to the nearest interval.
            </summary>
            <param name="value">A SpecificEnthalpy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SpecificEnthalpy rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.Round(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificEnthalpy,System.MidpointRounding)">
            <summary>
            Returns a SpecificEnthalpy rounded to the nearest interval.
            </summary>
            <param name="value">A SpecificEnthalpy.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A SpecificEnthalpy rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.Floor(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Returns a SpecificEnthalpy rounded down to the nearest interval.
            </summary>
            <param name="value">A SpecificEnthalpy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SpecificEnthalpy rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.Ceiling(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Returns a SpecificEnthalpy rounded up to the nearest interval.
            </summary>
            <param name="value">A SpecificEnthalpy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SpecificEnthalpy rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Equality(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Determines whether two SpecificEnthalpys are equal.
            </summary>
            <param name="l">Left SpecificEnthalpy.</param>
            <param name="r">Right SpecificEnthalpy.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Inequality(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Determines whether two SpecificEnthalpys are not equal.
            </summary>
            <param name="l">Left SpecificEnthalpy.</param>
            <param name="r">Right SpecificEnthalpy.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_LessThan(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Determines if the left SpecificEnthalpy is less than the right SpecificEnthalpy.
            </summary>
            <param name="l">Left SpecificEnthalpy.</param>
            <param name="r">Right SpecificEnthalpy.</param>
            <returns>True if the left SpecificEnthalpy is less than the right SpecificEnthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_LessThanOrEqual(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Determines if the left SpecificEnthalpy is less than or equal to the right SpecificEnthalpy.
            </summary>
            <param name="l">Left SpecificEnthalpy.</param>
            <param name="r">Right SpecificEnthalpy.</param>
            <returns>True if the left SpecificEnthalpy is less than or equal to the right SpecificEnthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_GreaterThanOrEqual(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Determines if the left SpecificEnthalpy is greater than or equal to the right SpecificEnthalpy.
            </summary>
            <param name="l">Left SpecificEnthalpy.</param>
            <param name="r">Right SpecificEnthalpy.</param>
            <returns>True if the left SpecificEnthalpy is greater than or equal to the right SpecificEnthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_GreaterThan(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Determines if the left SpecificEnthalpy is greater than the right SpecificEnthalpy.
            </summary>
            <param name="l">Left SpecificEnthalpy.</param>
            <param name="r">Right SpecificEnthalpy.</param>
            <returns>True if the left SpecificEnthalpy is greater than the right SpecificEnthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Addition(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Add two SpecificEnthalpys together.
            </summary>
            <param name="l">Left SpecificEnthalpy.</param>
            <param name="r">Right SpecificEnthalpy.</param>
            <returns>Sum of SpecificEnthalpys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_UnaryNegation(Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Negate a SpecificEnthalpy.
            </summary>
            <param name="l">Left SpecificEnthalpy.</param>
            <returns>Negative SpecificEnthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Subtraction(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Subtract two SpecificEnthalpys.
            </summary>
            <param name="l">Left SpecificEnthalpy.</param>
            <param name="r">Right SpecificEnthalpy.</param>
            <returns>Difference of SpecificEnthalpys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Multiply(Nalco.Numerics.SI.SpecificEnthalpy,System.Double)">
            <summary>
            Multiply a SpecificEnthalpy with a double.
            </summary>
            <param name="l">Left SpecificEnthalpy.</param>
            <param name="r">Double value.</param>
            <returns>SpecificEnthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Multiply(System.Double,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Multiply a SpecificEnthalpy with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right SpecificEnthalpy.</param>
            <returns>SpecificEnthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Division(Nalco.Numerics.SI.SpecificEnthalpy,System.Double)">
            <summary>
            Divide a SpecificEnthalpy by a double.
            </summary>
            <param name="l">Left SpecificEnthalpy.</param>
            <param name="r">Double value.</param>
            <returns>SpecificEnthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Division(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Divide a SpecificEnthalpy by another SpecificEnthalpy.
            </summary>
            <param name="l">Left SpecificEnthalpy.</param>
            <param name="r">Right SpecificEnthalpy.</param>
            <returns>Ratio of the two SpecificEnthalpys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Modulus(Nalco.Numerics.SI.SpecificEnthalpy,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Divide a SpecificEnthalpy by another SpecificEnthalpy and return the remainder.
            </summary>
            <param name="l">Left SpecificEnthalpy.</param>
            <param name="r">Right SpecificEnthalpy.</param>
            <returns>Remainder after a SpecificEnthalpy is divided by a SpecificEnthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Explicit(Nalco.Numerics.SI.SpecificEnthalpy)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the SpecificEnthalpy into a weakly typed Scalar.
            </summary>
            <param name="l">SpecificEnthalpy.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEnthalpy.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.SpecificEnthalpy">
            <summary>
            Explicitly convert the weakly typed Scalar into a SpecificEnthalpy.
            </summary>
            <param name="s">Scalar.</param>
            <returns>SpecificEnthalpy.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.SpecificEntropy">
            <summary>
            Specific Entropy (joules per kilogram kelvin).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.SpecificEntropy.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.SpecificEntropy.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
            <remarks>
            J/(kg K) = m2 kg s-2 kg-1 K-1 = m2 s-2 K-1
            </remarks>
        </member>
        <member name="F:Nalco.Numerics.SI.SpecificEntropy.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.#ctor(System.Double)">
            <summary>
            Construct a new SpecificEntropy with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_Multiply(Nalco.Numerics.SI.SpecificEntropy,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Multiply a specific entropy by a temperature interval.
            </summary>
            <param name="l">Left specific entropy.</param>
            <param name="r">Right temperature interval.</param>
            <returns>Resulting specific enthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_Multiply(Nalco.Numerics.SI.SpecificEntropy,Nalco.Numerics.SI.Mass)">
            <summary>
            Multiply a specific entropy by a mass.
            </summary>
            <param name="l">Left specific entropy.</param>
            <param name="r">Right mass.</param>
            <returns>Resulting entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_Implicit(Nalco.Numerics.SI.SpecificHeatCapacity)~Nalco.Numerics.SI.SpecificEntropy">
            <summary>
            Implicitly convert the specific heat capacity into a specific
            entropy.
            </summary>
            <param name="l">Specific heat capacity.</param>
        </member>
        <member name="F:Nalco.Numerics.SI.SpecificEntropy.Zero">
            <summary>
            SpecificEntropy of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.#ctor(System.Double,Nalco.Numerics.SI.SpecificEntropy.Subunit)">
            <summary>
            Construct a SpecificEntropy with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.SpecificEntropy.Item(Nalco.Numerics.SI.SpecificEntropy.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.SpecificEntropy.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.Abbreviation(Nalco.Numerics.SI.SpecificEntropy.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.Description(Nalco.Numerics.SI.SpecificEntropy.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificEntropy.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.Parse(System.String)">
            <summary>
            Converts the string representation of a SpecificEntropy to a SpecificEntropy.
            </summary>
            <param name="s">A string that contains a SpecificEntropy to convert.</param>
            <returns>A SpecificEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a SpecificEntropy to a SpecificEntropy.
            </summary>
            <param name="s">A string that contains a SpecificEntropy to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A SpecificEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a SpecificEntropy to a SpecificEntropy.
            </summary>
            <param name="s">A string that contains a SpecificEntropy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A SpecificEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificEntropy.Subunit)">
            <summary>
            Converts the string representation of a SpecificEntropy to a SpecificEntropy.
            </summary>
            <param name="s">A string that contains a SpecificEntropy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A SpecificEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.TryParse(System.String,Nalco.Numerics.SI.SpecificEntropy@)">
            <summary>
            Converts the string representation of a SpecificEntropy to a SpecificEntropy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificEntropy to convert.</param>
            <param name="result">When this method returns, contains the SpecificEntropy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificEntropy@)">
            <summary>
            Converts the string representation of a SpecificEntropy to a SpecificEntropy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificEntropy to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the SpecificEntropy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificEntropy@)">
            <summary>
            Converts the string representation of a SpecificEntropy to a SpecificEntropy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificEntropy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the SpecificEntropy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificEntropy.Subunit,Nalco.Numerics.SI.SpecificEntropy@)">
            <summary>
            Converts the string representation of a SpecificEntropy to a SpecificEntropy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificEntropy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the SpecificEntropy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.CompareTo(System.Object)">
            <summary>
            Compares the current SpecificEntropy with another SpecificEntropy.
            </summary>
            <param name="obj">SpecificEntropy to compare with this SpecificEntropy.</param>
            <returns>Less than zero when this SpecificEntropy is less than the other parameter.
            Zero when this SpecificEntropy is equal to the other parameter.
            Greater than zero when this SpecificEntropy is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of SpecificEntropy.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.CompareTo(Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Compares the current SpecificEntropy with another SpecificEntropy.
            </summary>
            <param name="other">SpecificEntropy to compare with this SpecificEntropy.</param>
            <returns>Less than zero when this SpecificEntropy is less than the other parameter.
            Zero when this SpecificEntropy is equal to the other parameter.
            Greater than zero when this SpecificEntropy is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current SpecificEntropy.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.Abs(Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Returns the absolute value of a SpecificEntropy.
            </summary>
            <param name="value">A SpecificEntropy.</param>
            <returns>A SpecificEntropy that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.Round(Nalco.Numerics.SI.SpecificEntropy,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Returns a SpecificEntropy rounded to the nearest interval.
            </summary>
            <param name="value">A SpecificEntropy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SpecificEntropy rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.Round(Nalco.Numerics.SI.SpecificEntropy,Nalco.Numerics.SI.SpecificEntropy,System.MidpointRounding)">
            <summary>
            Returns a SpecificEntropy rounded to the nearest interval.
            </summary>
            <param name="value">A SpecificEntropy.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A SpecificEntropy rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.Floor(Nalco.Numerics.SI.SpecificEntropy,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Returns a SpecificEntropy rounded down to the nearest interval.
            </summary>
            <param name="value">A SpecificEntropy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SpecificEntropy rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.Ceiling(Nalco.Numerics.SI.SpecificEntropy,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Returns a SpecificEntropy rounded up to the nearest interval.
            </summary>
            <param name="value">A SpecificEntropy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SpecificEntropy rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_Equality(Nalco.Numerics.SI.SpecificEntropy,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Determines whether two SpecificEntropys are equal.
            </summary>
            <param name="l">Left SpecificEntropy.</param>
            <param name="r">Right SpecificEntropy.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_Inequality(Nalco.Numerics.SI.SpecificEntropy,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Determines whether two SpecificEntropys are not equal.
            </summary>
            <param name="l">Left SpecificEntropy.</param>
            <param name="r">Right SpecificEntropy.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_LessThan(Nalco.Numerics.SI.SpecificEntropy,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Determines if the left SpecificEntropy is less than the right SpecificEntropy.
            </summary>
            <param name="l">Left SpecificEntropy.</param>
            <param name="r">Right SpecificEntropy.</param>
            <returns>True if the left SpecificEntropy is less than the right SpecificEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_LessThanOrEqual(Nalco.Numerics.SI.SpecificEntropy,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Determines if the left SpecificEntropy is less than or equal to the right SpecificEntropy.
            </summary>
            <param name="l">Left SpecificEntropy.</param>
            <param name="r">Right SpecificEntropy.</param>
            <returns>True if the left SpecificEntropy is less than or equal to the right SpecificEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_GreaterThanOrEqual(Nalco.Numerics.SI.SpecificEntropy,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Determines if the left SpecificEntropy is greater than or equal to the right SpecificEntropy.
            </summary>
            <param name="l">Left SpecificEntropy.</param>
            <param name="r">Right SpecificEntropy.</param>
            <returns>True if the left SpecificEntropy is greater than or equal to the right SpecificEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_GreaterThan(Nalco.Numerics.SI.SpecificEntropy,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Determines if the left SpecificEntropy is greater than the right SpecificEntropy.
            </summary>
            <param name="l">Left SpecificEntropy.</param>
            <param name="r">Right SpecificEntropy.</param>
            <returns>True if the left SpecificEntropy is greater than the right SpecificEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_Addition(Nalco.Numerics.SI.SpecificEntropy,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Add two SpecificEntropys together.
            </summary>
            <param name="l">Left SpecificEntropy.</param>
            <param name="r">Right SpecificEntropy.</param>
            <returns>Sum of SpecificEntropys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_UnaryNegation(Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Negate a SpecificEntropy.
            </summary>
            <param name="l">Left SpecificEntropy.</param>
            <returns>Negative SpecificEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_Subtraction(Nalco.Numerics.SI.SpecificEntropy,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Subtract two SpecificEntropys.
            </summary>
            <param name="l">Left SpecificEntropy.</param>
            <param name="r">Right SpecificEntropy.</param>
            <returns>Difference of SpecificEntropys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_Multiply(Nalco.Numerics.SI.SpecificEntropy,System.Double)">
            <summary>
            Multiply a SpecificEntropy with a double.
            </summary>
            <param name="l">Left SpecificEntropy.</param>
            <param name="r">Double value.</param>
            <returns>SpecificEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_Multiply(System.Double,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Multiply a SpecificEntropy with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right SpecificEntropy.</param>
            <returns>SpecificEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_Division(Nalco.Numerics.SI.SpecificEntropy,System.Double)">
            <summary>
            Divide a SpecificEntropy by a double.
            </summary>
            <param name="l">Left SpecificEntropy.</param>
            <param name="r">Double value.</param>
            <returns>SpecificEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_Division(Nalco.Numerics.SI.SpecificEntropy,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Divide a SpecificEntropy by another SpecificEntropy.
            </summary>
            <param name="l">Left SpecificEntropy.</param>
            <param name="r">Right SpecificEntropy.</param>
            <returns>Ratio of the two SpecificEntropys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_Modulus(Nalco.Numerics.SI.SpecificEntropy,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Divide a SpecificEntropy by another SpecificEntropy and return the remainder.
            </summary>
            <param name="l">Left SpecificEntropy.</param>
            <param name="r">Right SpecificEntropy.</param>
            <returns>Remainder after a SpecificEntropy is divided by a SpecificEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_Explicit(Nalco.Numerics.SI.SpecificEntropy)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the SpecificEntropy into a weakly typed Scalar.
            </summary>
            <param name="l">SpecificEntropy.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificEntropy.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.SpecificEntropy">
            <summary>
            Explicitly convert the weakly typed Scalar into a SpecificEntropy.
            </summary>
            <param name="s">Scalar.</param>
            <returns>SpecificEntropy.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.SpecificHeatCapacity">
            <summary>
            Specific Heat Capacity(joules per kilogram kelvin).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.SpecificHeatCapacity.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.SpecificHeatCapacity.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
            <remarks>
            J/(kg K) = m2 kg s-2 kg-1 K-1 = m2 s-2 K-1
            </remarks>
        </member>
        <member name="F:Nalco.Numerics.SI.SpecificHeatCapacity.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.#ctor(System.Double)">
            <summary>
            Construct a new SpecificHeatCapacity with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_Multiply(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Multiply a specific heat capacity by a molar mass.
            </summary>
            <param name="l">Left specific heat capacity.</param>
            <param name="r">Right molar mass.</param>
            <returns>Resulting molar heat capacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_Multiply(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.Temperature)">
            <summary>
            Multiply a specific heat capacity by a temperature.
            </summary>
            <param name="l">Left specific heat capacity.</param>
            <param name="r">Right temperature.</param>
            <returns>Resulting specific enthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_Multiply(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Multiply a specific heat capacity by a temperature interval.
            </summary>
            <param name="l">Left specific heat capacity.</param>
            <param name="r">Right temperature interval.</param>
            <returns>Resulting specific enthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_Implicit(Nalco.Numerics.SI.SpecificEntropy)~Nalco.Numerics.SI.SpecificHeatCapacity">
            <summary>
            Implicitly convert the specific entropy into a specific heat
            capacity.
            </summary>
            <param name="l">Specific entropy.</param>
        </member>
        <member name="F:Nalco.Numerics.SI.SpecificHeatCapacity.Zero">
            <summary>
            SpecificHeatCapacity of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.#ctor(System.Double,Nalco.Numerics.SI.SpecificHeatCapacity.Subunit)">
            <summary>
            Construct a SpecificHeatCapacity with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.SpecificHeatCapacity.Item(Nalco.Numerics.SI.SpecificHeatCapacity.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.SpecificHeatCapacity.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.Abbreviation(Nalco.Numerics.SI.SpecificHeatCapacity.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.Description(Nalco.Numerics.SI.SpecificHeatCapacity.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificHeatCapacity.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.Parse(System.String)">
            <summary>
            Converts the string representation of a SpecificHeatCapacity to a SpecificHeatCapacity.
            </summary>
            <param name="s">A string that contains a SpecificHeatCapacity to convert.</param>
            <returns>A SpecificHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a SpecificHeatCapacity to a SpecificHeatCapacity.
            </summary>
            <param name="s">A string that contains a SpecificHeatCapacity to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A SpecificHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a SpecificHeatCapacity to a SpecificHeatCapacity.
            </summary>
            <param name="s">A string that contains a SpecificHeatCapacity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A SpecificHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificHeatCapacity.Subunit)">
            <summary>
            Converts the string representation of a SpecificHeatCapacity to a SpecificHeatCapacity.
            </summary>
            <param name="s">A string that contains a SpecificHeatCapacity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A SpecificHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.TryParse(System.String,Nalco.Numerics.SI.SpecificHeatCapacity@)">
            <summary>
            Converts the string representation of a SpecificHeatCapacity to a SpecificHeatCapacity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificHeatCapacity to convert.</param>
            <param name="result">When this method returns, contains the SpecificHeatCapacity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificHeatCapacity@)">
            <summary>
            Converts the string representation of a SpecificHeatCapacity to a SpecificHeatCapacity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificHeatCapacity to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the SpecificHeatCapacity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificHeatCapacity@)">
            <summary>
            Converts the string representation of a SpecificHeatCapacity to a SpecificHeatCapacity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificHeatCapacity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the SpecificHeatCapacity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificHeatCapacity.Subunit,Nalco.Numerics.SI.SpecificHeatCapacity@)">
            <summary>
            Converts the string representation of a SpecificHeatCapacity to a SpecificHeatCapacity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificHeatCapacity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the SpecificHeatCapacity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.CompareTo(System.Object)">
            <summary>
            Compares the current SpecificHeatCapacity with another SpecificHeatCapacity.
            </summary>
            <param name="obj">SpecificHeatCapacity to compare with this SpecificHeatCapacity.</param>
            <returns>Less than zero when this SpecificHeatCapacity is less than the other parameter.
            Zero when this SpecificHeatCapacity is equal to the other parameter.
            Greater than zero when this SpecificHeatCapacity is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of SpecificHeatCapacity.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.CompareTo(Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Compares the current SpecificHeatCapacity with another SpecificHeatCapacity.
            </summary>
            <param name="other">SpecificHeatCapacity to compare with this SpecificHeatCapacity.</param>
            <returns>Less than zero when this SpecificHeatCapacity is less than the other parameter.
            Zero when this SpecificHeatCapacity is equal to the other parameter.
            Greater than zero when this SpecificHeatCapacity is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current SpecificHeatCapacity.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.Abs(Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Returns the absolute value of a SpecificHeatCapacity.
            </summary>
            <param name="value">A SpecificHeatCapacity.</param>
            <returns>A SpecificHeatCapacity that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.Round(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Returns a SpecificHeatCapacity rounded to the nearest interval.
            </summary>
            <param name="value">A SpecificHeatCapacity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SpecificHeatCapacity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.Round(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.SpecificHeatCapacity,System.MidpointRounding)">
            <summary>
            Returns a SpecificHeatCapacity rounded to the nearest interval.
            </summary>
            <param name="value">A SpecificHeatCapacity.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A SpecificHeatCapacity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.Floor(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Returns a SpecificHeatCapacity rounded down to the nearest interval.
            </summary>
            <param name="value">A SpecificHeatCapacity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SpecificHeatCapacity rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.Ceiling(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Returns a SpecificHeatCapacity rounded up to the nearest interval.
            </summary>
            <param name="value">A SpecificHeatCapacity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SpecificHeatCapacity rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_Equality(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Determines whether two SpecificHeatCapacitys are equal.
            </summary>
            <param name="l">Left SpecificHeatCapacity.</param>
            <param name="r">Right SpecificHeatCapacity.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_Inequality(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Determines whether two SpecificHeatCapacitys are not equal.
            </summary>
            <param name="l">Left SpecificHeatCapacity.</param>
            <param name="r">Right SpecificHeatCapacity.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_LessThan(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Determines if the left SpecificHeatCapacity is less than the right SpecificHeatCapacity.
            </summary>
            <param name="l">Left SpecificHeatCapacity.</param>
            <param name="r">Right SpecificHeatCapacity.</param>
            <returns>True if the left SpecificHeatCapacity is less than the right SpecificHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_LessThanOrEqual(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Determines if the left SpecificHeatCapacity is less than or equal to the right SpecificHeatCapacity.
            </summary>
            <param name="l">Left SpecificHeatCapacity.</param>
            <param name="r">Right SpecificHeatCapacity.</param>
            <returns>True if the left SpecificHeatCapacity is less than or equal to the right SpecificHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_GreaterThanOrEqual(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Determines if the left SpecificHeatCapacity is greater than or equal to the right SpecificHeatCapacity.
            </summary>
            <param name="l">Left SpecificHeatCapacity.</param>
            <param name="r">Right SpecificHeatCapacity.</param>
            <returns>True if the left SpecificHeatCapacity is greater than or equal to the right SpecificHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_GreaterThan(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Determines if the left SpecificHeatCapacity is greater than the right SpecificHeatCapacity.
            </summary>
            <param name="l">Left SpecificHeatCapacity.</param>
            <param name="r">Right SpecificHeatCapacity.</param>
            <returns>True if the left SpecificHeatCapacity is greater than the right SpecificHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_Addition(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Add two SpecificHeatCapacitys together.
            </summary>
            <param name="l">Left SpecificHeatCapacity.</param>
            <param name="r">Right SpecificHeatCapacity.</param>
            <returns>Sum of SpecificHeatCapacitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_UnaryNegation(Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Negate a SpecificHeatCapacity.
            </summary>
            <param name="l">Left SpecificHeatCapacity.</param>
            <returns>Negative SpecificHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_Subtraction(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Subtract two SpecificHeatCapacitys.
            </summary>
            <param name="l">Left SpecificHeatCapacity.</param>
            <param name="r">Right SpecificHeatCapacity.</param>
            <returns>Difference of SpecificHeatCapacitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_Multiply(Nalco.Numerics.SI.SpecificHeatCapacity,System.Double)">
            <summary>
            Multiply a SpecificHeatCapacity with a double.
            </summary>
            <param name="l">Left SpecificHeatCapacity.</param>
            <param name="r">Double value.</param>
            <returns>SpecificHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_Multiply(System.Double,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Multiply a SpecificHeatCapacity with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right SpecificHeatCapacity.</param>
            <returns>SpecificHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_Division(Nalco.Numerics.SI.SpecificHeatCapacity,System.Double)">
            <summary>
            Divide a SpecificHeatCapacity by a double.
            </summary>
            <param name="l">Left SpecificHeatCapacity.</param>
            <param name="r">Double value.</param>
            <returns>SpecificHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_Division(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Divide a SpecificHeatCapacity by another SpecificHeatCapacity.
            </summary>
            <param name="l">Left SpecificHeatCapacity.</param>
            <param name="r">Right SpecificHeatCapacity.</param>
            <returns>Ratio of the two SpecificHeatCapacitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_Modulus(Nalco.Numerics.SI.SpecificHeatCapacity,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Divide a SpecificHeatCapacity by another SpecificHeatCapacity and return the remainder.
            </summary>
            <param name="l">Left SpecificHeatCapacity.</param>
            <param name="r">Right SpecificHeatCapacity.</param>
            <returns>Remainder after a SpecificHeatCapacity is divided by a SpecificHeatCapacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_Explicit(Nalco.Numerics.SI.SpecificHeatCapacity)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the SpecificHeatCapacity into a weakly typed Scalar.
            </summary>
            <param name="l">SpecificHeatCapacity.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHeatCapacity.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.SpecificHeatCapacity">
            <summary>
            Explicitly convert the weakly typed Scalar into a SpecificHeatCapacity.
            </summary>
            <param name="s">Scalar.</param>
            <returns>SpecificHeatCapacity.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.SurfaceTension">
            <summary>
            Surface Tension (newtons per meter).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.SurfaceTension.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.SurfaceTension.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
            <remarks>
            N/m = m kg s-2 m-1 = kg s-2
            </remarks>
        </member>
        <member name="F:Nalco.Numerics.SI.SurfaceTension.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.#ctor(System.Double)">
            <summary>
            Construct a new SurfaceTension with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.#ctor(System.Double,Nalco.Numerics.SI.SurfaceTension.Subunit)">
            <summary>
            Construct a SurfaceTension with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.SurfaceTension.Item(Nalco.Numerics.SI.SurfaceTension.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.SurfaceTension.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.Abbreviation(Nalco.Numerics.SI.SurfaceTension.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.Description(Nalco.Numerics.SI.SurfaceTension.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.SurfaceTension.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.Parse(System.String)">
            <summary>
            Converts the string representation of a SurfaceTension to a SurfaceTension.
            </summary>
            <param name="s">A string that contains a SurfaceTension to convert.</param>
            <returns>A SurfaceTension.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a SurfaceTension to a SurfaceTension.
            </summary>
            <param name="s">A string that contains a SurfaceTension to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A SurfaceTension.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a SurfaceTension to a SurfaceTension.
            </summary>
            <param name="s">A string that contains a SurfaceTension to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A SurfaceTension.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SurfaceTension.Subunit)">
            <summary>
            Converts the string representation of a SurfaceTension to a SurfaceTension.
            </summary>
            <param name="s">A string that contains a SurfaceTension to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A SurfaceTension.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.TryParse(System.String,Nalco.Numerics.SI.SurfaceTension@)">
            <summary>
            Converts the string representation of a SurfaceTension to a SurfaceTension. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SurfaceTension to convert.</param>
            <param name="result">When this method returns, contains the SurfaceTension, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.SurfaceTension@)">
            <summary>
            Converts the string representation of a SurfaceTension to a SurfaceTension. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SurfaceTension to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the SurfaceTension, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SurfaceTension@)">
            <summary>
            Converts the string representation of a SurfaceTension to a SurfaceTension. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SurfaceTension to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the SurfaceTension, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SurfaceTension.Subunit,Nalco.Numerics.SI.SurfaceTension@)">
            <summary>
            Converts the string representation of a SurfaceTension to a SurfaceTension. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SurfaceTension to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the SurfaceTension, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.CompareTo(System.Object)">
            <summary>
            Compares the current SurfaceTension with another SurfaceTension.
            </summary>
            <param name="obj">SurfaceTension to compare with this SurfaceTension.</param>
            <returns>Less than zero when this SurfaceTension is less than the other parameter.
            Zero when this SurfaceTension is equal to the other parameter.
            Greater than zero when this SurfaceTension is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of SurfaceTension.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.CompareTo(Nalco.Numerics.SI.SurfaceTension)">
            <summary>
            Compares the current SurfaceTension with another SurfaceTension.
            </summary>
            <param name="other">SurfaceTension to compare with this SurfaceTension.</param>
            <returns>Less than zero when this SurfaceTension is less than the other parameter.
            Zero when this SurfaceTension is equal to the other parameter.
            Greater than zero when this SurfaceTension is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current SurfaceTension.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.Abs(Nalco.Numerics.SI.SurfaceTension)">
            <summary>
            Returns the absolute value of a SurfaceTension.
            </summary>
            <param name="value">A SurfaceTension.</param>
            <returns>A SurfaceTension that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.Round(Nalco.Numerics.SI.SurfaceTension,Nalco.Numerics.SI.SurfaceTension)">
            <summary>
            Returns a SurfaceTension rounded to the nearest interval.
            </summary>
            <param name="value">A SurfaceTension.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SurfaceTension rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.Round(Nalco.Numerics.SI.SurfaceTension,Nalco.Numerics.SI.SurfaceTension,System.MidpointRounding)">
            <summary>
            Returns a SurfaceTension rounded to the nearest interval.
            </summary>
            <param name="value">A SurfaceTension.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A SurfaceTension rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.Floor(Nalco.Numerics.SI.SurfaceTension,Nalco.Numerics.SI.SurfaceTension)">
            <summary>
            Returns a SurfaceTension rounded down to the nearest interval.
            </summary>
            <param name="value">A SurfaceTension.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SurfaceTension rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.Ceiling(Nalco.Numerics.SI.SurfaceTension,Nalco.Numerics.SI.SurfaceTension)">
            <summary>
            Returns a SurfaceTension rounded up to the nearest interval.
            </summary>
            <param name="value">A SurfaceTension.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SurfaceTension rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.op_Equality(Nalco.Numerics.SI.SurfaceTension,Nalco.Numerics.SI.SurfaceTension)">
            <summary>
            Determines whether two SurfaceTensions are equal.
            </summary>
            <param name="l">Left SurfaceTension.</param>
            <param name="r">Right SurfaceTension.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.op_Inequality(Nalco.Numerics.SI.SurfaceTension,Nalco.Numerics.SI.SurfaceTension)">
            <summary>
            Determines whether two SurfaceTensions are not equal.
            </summary>
            <param name="l">Left SurfaceTension.</param>
            <param name="r">Right SurfaceTension.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.op_LessThan(Nalco.Numerics.SI.SurfaceTension,Nalco.Numerics.SI.SurfaceTension)">
            <summary>
            Determines if the left SurfaceTension is less than the right SurfaceTension.
            </summary>
            <param name="l">Left SurfaceTension.</param>
            <param name="r">Right SurfaceTension.</param>
            <returns>True if the left SurfaceTension is less than the right SurfaceTension.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.op_LessThanOrEqual(Nalco.Numerics.SI.SurfaceTension,Nalco.Numerics.SI.SurfaceTension)">
            <summary>
            Determines if the left SurfaceTension is less than or equal to the right SurfaceTension.
            </summary>
            <param name="l">Left SurfaceTension.</param>
            <param name="r">Right SurfaceTension.</param>
            <returns>True if the left SurfaceTension is less than or equal to the right SurfaceTension.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.op_GreaterThanOrEqual(Nalco.Numerics.SI.SurfaceTension,Nalco.Numerics.SI.SurfaceTension)">
            <summary>
            Determines if the left SurfaceTension is greater than or equal to the right SurfaceTension.
            </summary>
            <param name="l">Left SurfaceTension.</param>
            <param name="r">Right SurfaceTension.</param>
            <returns>True if the left SurfaceTension is greater than or equal to the right SurfaceTension.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.op_GreaterThan(Nalco.Numerics.SI.SurfaceTension,Nalco.Numerics.SI.SurfaceTension)">
            <summary>
            Determines if the left SurfaceTension is greater than the right SurfaceTension.
            </summary>
            <param name="l">Left SurfaceTension.</param>
            <param name="r">Right SurfaceTension.</param>
            <returns>True if the left SurfaceTension is greater than the right SurfaceTension.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.op_Explicit(Nalco.Numerics.SI.SurfaceTension)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the SurfaceTension into a weakly typed Scalar.
            </summary>
            <param name="l">SurfaceTension.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SurfaceTension.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.SurfaceTension">
            <summary>
            Explicitly convert the weakly typed Scalar into a SurfaceTension.
            </summary>
            <param name="s">Scalar.</param>
            <returns>SurfaceTension.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.ThermalConductivity">
            <summary>
            Thermal Conductivity (watts per meter Kelvin).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.ThermalConductivity.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ThermalConductivity.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
            <remarks>
            W/(m K) = m2 kg s-3 m-1 K-1 = m kg s-3 K-1
            </remarks>
        </member>
        <member name="F:Nalco.Numerics.SI.ThermalConductivity.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.#ctor(System.Double)">
            <summary>
            Construct a new ThermalConductivity with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.#ctor(System.Double,Nalco.Numerics.SI.ThermalConductivity.Subunit)">
            <summary>
            Construct a ThermalConductivity with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.ThermalConductivity.Item(Nalco.Numerics.SI.ThermalConductivity.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.ThermalConductivity.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.Abbreviation(Nalco.Numerics.SI.ThermalConductivity.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.Description(Nalco.Numerics.SI.ThermalConductivity.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.ThermalConductivity.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.Parse(System.String)">
            <summary>
            Converts the string representation of a ThermalConductivity to a ThermalConductivity.
            </summary>
            <param name="s">A string that contains a ThermalConductivity to convert.</param>
            <returns>A ThermalConductivity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ThermalConductivity to a ThermalConductivity.
            </summary>
            <param name="s">A string that contains a ThermalConductivity to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A ThermalConductivity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ThermalConductivity to a ThermalConductivity.
            </summary>
            <param name="s">A string that contains a ThermalConductivity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A ThermalConductivity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ThermalConductivity.Subunit)">
            <summary>
            Converts the string representation of a ThermalConductivity to a ThermalConductivity.
            </summary>
            <param name="s">A string that contains a ThermalConductivity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A ThermalConductivity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.TryParse(System.String,Nalco.Numerics.SI.ThermalConductivity@)">
            <summary>
            Converts the string representation of a ThermalConductivity to a ThermalConductivity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ThermalConductivity to convert.</param>
            <param name="result">When this method returns, contains the ThermalConductivity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.ThermalConductivity@)">
            <summary>
            Converts the string representation of a ThermalConductivity to a ThermalConductivity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ThermalConductivity to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ThermalConductivity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ThermalConductivity@)">
            <summary>
            Converts the string representation of a ThermalConductivity to a ThermalConductivity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ThermalConductivity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ThermalConductivity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ThermalConductivity.Subunit,Nalco.Numerics.SI.ThermalConductivity@)">
            <summary>
            Converts the string representation of a ThermalConductivity to a ThermalConductivity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ThermalConductivity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the ThermalConductivity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.CompareTo(System.Object)">
            <summary>
            Compares the current ThermalConductivity with another ThermalConductivity.
            </summary>
            <param name="obj">ThermalConductivity to compare with this ThermalConductivity.</param>
            <returns>Less than zero when this ThermalConductivity is less than the other parameter.
            Zero when this ThermalConductivity is equal to the other parameter.
            Greater than zero when this ThermalConductivity is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of ThermalConductivity.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.CompareTo(Nalco.Numerics.SI.ThermalConductivity)">
            <summary>
            Compares the current ThermalConductivity with another ThermalConductivity.
            </summary>
            <param name="other">ThermalConductivity to compare with this ThermalConductivity.</param>
            <returns>Less than zero when this ThermalConductivity is less than the other parameter.
            Zero when this ThermalConductivity is equal to the other parameter.
            Greater than zero when this ThermalConductivity is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current ThermalConductivity.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.Abs(Nalco.Numerics.SI.ThermalConductivity)">
            <summary>
            Returns the absolute value of a ThermalConductivity.
            </summary>
            <param name="value">A ThermalConductivity.</param>
            <returns>A ThermalConductivity that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.Round(Nalco.Numerics.SI.ThermalConductivity,Nalco.Numerics.SI.ThermalConductivity)">
            <summary>
            Returns a ThermalConductivity rounded to the nearest interval.
            </summary>
            <param name="value">A ThermalConductivity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ThermalConductivity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.Round(Nalco.Numerics.SI.ThermalConductivity,Nalco.Numerics.SI.ThermalConductivity,System.MidpointRounding)">
            <summary>
            Returns a ThermalConductivity rounded to the nearest interval.
            </summary>
            <param name="value">A ThermalConductivity.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A ThermalConductivity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.Floor(Nalco.Numerics.SI.ThermalConductivity,Nalco.Numerics.SI.ThermalConductivity)">
            <summary>
            Returns a ThermalConductivity rounded down to the nearest interval.
            </summary>
            <param name="value">A ThermalConductivity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ThermalConductivity rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.Ceiling(Nalco.Numerics.SI.ThermalConductivity,Nalco.Numerics.SI.ThermalConductivity)">
            <summary>
            Returns a ThermalConductivity rounded up to the nearest interval.
            </summary>
            <param name="value">A ThermalConductivity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ThermalConductivity rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.op_Equality(Nalco.Numerics.SI.ThermalConductivity,Nalco.Numerics.SI.ThermalConductivity)">
            <summary>
            Determines whether two ThermalConductivitys are equal.
            </summary>
            <param name="l">Left ThermalConductivity.</param>
            <param name="r">Right ThermalConductivity.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.op_Inequality(Nalco.Numerics.SI.ThermalConductivity,Nalco.Numerics.SI.ThermalConductivity)">
            <summary>
            Determines whether two ThermalConductivitys are not equal.
            </summary>
            <param name="l">Left ThermalConductivity.</param>
            <param name="r">Right ThermalConductivity.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.op_LessThan(Nalco.Numerics.SI.ThermalConductivity,Nalco.Numerics.SI.ThermalConductivity)">
            <summary>
            Determines if the left ThermalConductivity is less than the right ThermalConductivity.
            </summary>
            <param name="l">Left ThermalConductivity.</param>
            <param name="r">Right ThermalConductivity.</param>
            <returns>True if the left ThermalConductivity is less than the right ThermalConductivity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.op_LessThanOrEqual(Nalco.Numerics.SI.ThermalConductivity,Nalco.Numerics.SI.ThermalConductivity)">
            <summary>
            Determines if the left ThermalConductivity is less than or equal to the right ThermalConductivity.
            </summary>
            <param name="l">Left ThermalConductivity.</param>
            <param name="r">Right ThermalConductivity.</param>
            <returns>True if the left ThermalConductivity is less than or equal to the right ThermalConductivity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.op_GreaterThanOrEqual(Nalco.Numerics.SI.ThermalConductivity,Nalco.Numerics.SI.ThermalConductivity)">
            <summary>
            Determines if the left ThermalConductivity is greater than or equal to the right ThermalConductivity.
            </summary>
            <param name="l">Left ThermalConductivity.</param>
            <param name="r">Right ThermalConductivity.</param>
            <returns>True if the left ThermalConductivity is greater than or equal to the right ThermalConductivity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.op_GreaterThan(Nalco.Numerics.SI.ThermalConductivity,Nalco.Numerics.SI.ThermalConductivity)">
            <summary>
            Determines if the left ThermalConductivity is greater than the right ThermalConductivity.
            </summary>
            <param name="l">Left ThermalConductivity.</param>
            <param name="r">Right ThermalConductivity.</param>
            <returns>True if the left ThermalConductivity is greater than the right ThermalConductivity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.op_Explicit(Nalco.Numerics.SI.ThermalConductivity)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the ThermalConductivity into a weakly typed Scalar.
            </summary>
            <param name="l">ThermalConductivity.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalConductivity.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.ThermalConductivity">
            <summary>
            Explicitly convert the weakly typed Scalar into a ThermalConductivity.
            </summary>
            <param name="s">Scalar.</param>
            <returns>ThermalConductivity.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.ThermalInsulance">
            <summary>
            Thermal insulance (square meters kelvin per watt).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.ThermalInsulance.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ThermalInsulance.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ThermalInsulance.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.#ctor(System.Double)">
            <summary>
            Construct a new Thermal insulance with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="F:Nalco.Numerics.SI.ThermalInsulance.Zero">
            <summary>
            ThermalInsulance of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.#ctor(System.Double,Nalco.Numerics.SI.ThermalInsulance.Subunit)">
            <summary>
            Construct a ThermalInsulance with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.ThermalInsulance.Item(Nalco.Numerics.SI.ThermalInsulance.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.ThermalInsulance.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.Abbreviation(Nalco.Numerics.SI.ThermalInsulance.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.Description(Nalco.Numerics.SI.ThermalInsulance.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.ThermalInsulance.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.Parse(System.String)">
            <summary>
            Converts the string representation of a ThermalInsulance to a ThermalInsulance.
            </summary>
            <param name="s">A string that contains a ThermalInsulance to convert.</param>
            <returns>A ThermalInsulance.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ThermalInsulance to a ThermalInsulance.
            </summary>
            <param name="s">A string that contains a ThermalInsulance to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A ThermalInsulance.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ThermalInsulance to a ThermalInsulance.
            </summary>
            <param name="s">A string that contains a ThermalInsulance to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A ThermalInsulance.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ThermalInsulance.Subunit)">
            <summary>
            Converts the string representation of a ThermalInsulance to a ThermalInsulance.
            </summary>
            <param name="s">A string that contains a ThermalInsulance to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A ThermalInsulance.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.TryParse(System.String,Nalco.Numerics.SI.ThermalInsulance@)">
            <summary>
            Converts the string representation of a ThermalInsulance to a ThermalInsulance. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ThermalInsulance to convert.</param>
            <param name="result">When this method returns, contains the ThermalInsulance, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.ThermalInsulance@)">
            <summary>
            Converts the string representation of a ThermalInsulance to a ThermalInsulance. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ThermalInsulance to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ThermalInsulance, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ThermalInsulance@)">
            <summary>
            Converts the string representation of a ThermalInsulance to a ThermalInsulance. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ThermalInsulance to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ThermalInsulance, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ThermalInsulance.Subunit,Nalco.Numerics.SI.ThermalInsulance@)">
            <summary>
            Converts the string representation of a ThermalInsulance to a ThermalInsulance. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ThermalInsulance to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the ThermalInsulance, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.CompareTo(System.Object)">
            <summary>
            Compares the current ThermalInsulance with another ThermalInsulance.
            </summary>
            <param name="obj">ThermalInsulance to compare with this ThermalInsulance.</param>
            <returns>Less than zero when this ThermalInsulance is less than the other parameter.
            Zero when this ThermalInsulance is equal to the other parameter.
            Greater than zero when this ThermalInsulance is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of ThermalInsulance.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.CompareTo(Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Compares the current ThermalInsulance with another ThermalInsulance.
            </summary>
            <param name="other">ThermalInsulance to compare with this ThermalInsulance.</param>
            <returns>Less than zero when this ThermalInsulance is less than the other parameter.
            Zero when this ThermalInsulance is equal to the other parameter.
            Greater than zero when this ThermalInsulance is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current ThermalInsulance.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.Abs(Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Returns the absolute value of a ThermalInsulance.
            </summary>
            <param name="value">A ThermalInsulance.</param>
            <returns>A ThermalInsulance that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.Round(Nalco.Numerics.SI.ThermalInsulance,Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Returns a ThermalInsulance rounded to the nearest interval.
            </summary>
            <param name="value">A ThermalInsulance.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ThermalInsulance rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.Round(Nalco.Numerics.SI.ThermalInsulance,Nalco.Numerics.SI.ThermalInsulance,System.MidpointRounding)">
            <summary>
            Returns a ThermalInsulance rounded to the nearest interval.
            </summary>
            <param name="value">A ThermalInsulance.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A ThermalInsulance rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.Floor(Nalco.Numerics.SI.ThermalInsulance,Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Returns a ThermalInsulance rounded down to the nearest interval.
            </summary>
            <param name="value">A ThermalInsulance.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ThermalInsulance rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.Ceiling(Nalco.Numerics.SI.ThermalInsulance,Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Returns a ThermalInsulance rounded up to the nearest interval.
            </summary>
            <param name="value">A ThermalInsulance.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ThermalInsulance rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.op_Equality(Nalco.Numerics.SI.ThermalInsulance,Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Determines whether two ThermalInsulances are equal.
            </summary>
            <param name="l">Left ThermalInsulance.</param>
            <param name="r">Right ThermalInsulance.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.op_Inequality(Nalco.Numerics.SI.ThermalInsulance,Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Determines whether two ThermalInsulances are not equal.
            </summary>
            <param name="l">Left ThermalInsulance.</param>
            <param name="r">Right ThermalInsulance.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.op_LessThan(Nalco.Numerics.SI.ThermalInsulance,Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Determines if the left ThermalInsulance is less than the right ThermalInsulance.
            </summary>
            <param name="l">Left ThermalInsulance.</param>
            <param name="r">Right ThermalInsulance.</param>
            <returns>True if the left ThermalInsulance is less than the right ThermalInsulance.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.op_LessThanOrEqual(Nalco.Numerics.SI.ThermalInsulance,Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Determines if the left ThermalInsulance is less than or equal to the right ThermalInsulance.
            </summary>
            <param name="l">Left ThermalInsulance.</param>
            <param name="r">Right ThermalInsulance.</param>
            <returns>True if the left ThermalInsulance is less than or equal to the right ThermalInsulance.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.op_GreaterThanOrEqual(Nalco.Numerics.SI.ThermalInsulance,Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Determines if the left ThermalInsulance is greater than or equal to the right ThermalInsulance.
            </summary>
            <param name="l">Left ThermalInsulance.</param>
            <param name="r">Right ThermalInsulance.</param>
            <returns>True if the left ThermalInsulance is greater than or equal to the right ThermalInsulance.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.op_GreaterThan(Nalco.Numerics.SI.ThermalInsulance,Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Determines if the left ThermalInsulance is greater than the right ThermalInsulance.
            </summary>
            <param name="l">Left ThermalInsulance.</param>
            <param name="r">Right ThermalInsulance.</param>
            <returns>True if the left ThermalInsulance is greater than the right ThermalInsulance.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.op_Addition(Nalco.Numerics.SI.ThermalInsulance,Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Add two ThermalInsulances together.
            </summary>
            <param name="l">Left ThermalInsulance.</param>
            <param name="r">Right ThermalInsulance.</param>
            <returns>Sum of ThermalInsulances.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.op_UnaryNegation(Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Negate a ThermalInsulance.
            </summary>
            <param name="l">Left ThermalInsulance.</param>
            <returns>Negative ThermalInsulance.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.op_Subtraction(Nalco.Numerics.SI.ThermalInsulance,Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Subtract two ThermalInsulances.
            </summary>
            <param name="l">Left ThermalInsulance.</param>
            <param name="r">Right ThermalInsulance.</param>
            <returns>Difference of ThermalInsulances.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.op_Multiply(Nalco.Numerics.SI.ThermalInsulance,System.Double)">
            <summary>
            Multiply a ThermalInsulance with a double.
            </summary>
            <param name="l">Left ThermalInsulance.</param>
            <param name="r">Double value.</param>
            <returns>ThermalInsulance.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.op_Multiply(System.Double,Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Multiply a ThermalInsulance with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right ThermalInsulance.</param>
            <returns>ThermalInsulance.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.op_Division(Nalco.Numerics.SI.ThermalInsulance,System.Double)">
            <summary>
            Divide a ThermalInsulance by a double.
            </summary>
            <param name="l">Left ThermalInsulance.</param>
            <param name="r">Double value.</param>
            <returns>ThermalInsulance.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.op_Division(Nalco.Numerics.SI.ThermalInsulance,Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Divide a ThermalInsulance by another ThermalInsulance.
            </summary>
            <param name="l">Left ThermalInsulance.</param>
            <param name="r">Right ThermalInsulance.</param>
            <returns>Ratio of the two ThermalInsulances.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.op_Modulus(Nalco.Numerics.SI.ThermalInsulance,Nalco.Numerics.SI.ThermalInsulance)">
            <summary>
            Divide a ThermalInsulance by another ThermalInsulance and return the remainder.
            </summary>
            <param name="l">Left ThermalInsulance.</param>
            <param name="r">Right ThermalInsulance.</param>
            <returns>Remainder after a ThermalInsulance is divided by a ThermalInsulance.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.op_Explicit(Nalco.Numerics.SI.ThermalInsulance)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the ThermalInsulance into a weakly typed Scalar.
            </summary>
            <param name="l">ThermalInsulance.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ThermalInsulance.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.ThermalInsulance">
            <summary>
            Explicitly convert the weakly typed Scalar into a ThermalInsulance.
            </summary>
            <param name="s">Scalar.</param>
            <returns>ThermalInsulance.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.TimePerMass">
            <summary>
            Time per mass (seconds per kilogram).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.TimePerMass.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.TimePerMass.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.TimePerMass.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.#ctor(System.Double)">
            <summary>
            Construct a new TimePerMass with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_Multiply(Nalco.Numerics.SI.TimePerMass,Nalco.Numerics.SI.Mass)">
            <summary>
            Multiply a time per mass by a mass.
            </summary>
            <param name="l">Left time per mass.</param>
            <param name="r">Right mass.</param>
            <returns>Resulting time.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.TimePerMass.Zero">
            <summary>
            TimePerMass of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.#ctor(System.Double,Nalco.Numerics.SI.TimePerMass.Subunit)">
            <summary>
            Construct a TimePerMass with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.TimePerMass.Item(Nalco.Numerics.SI.TimePerMass.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.TimePerMass.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.Abbreviation(Nalco.Numerics.SI.TimePerMass.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.Description(Nalco.Numerics.SI.TimePerMass.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.TimePerMass.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.Parse(System.String)">
            <summary>
            Converts the string representation of a TimePerMass to a TimePerMass.
            </summary>
            <param name="s">A string that contains a TimePerMass to convert.</param>
            <returns>A TimePerMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a TimePerMass to a TimePerMass.
            </summary>
            <param name="s">A string that contains a TimePerMass to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A TimePerMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a TimePerMass to a TimePerMass.
            </summary>
            <param name="s">A string that contains a TimePerMass to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A TimePerMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.TimePerMass.Subunit)">
            <summary>
            Converts the string representation of a TimePerMass to a TimePerMass.
            </summary>
            <param name="s">A string that contains a TimePerMass to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A TimePerMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.TryParse(System.String,Nalco.Numerics.SI.TimePerMass@)">
            <summary>
            Converts the string representation of a TimePerMass to a TimePerMass. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a TimePerMass to convert.</param>
            <param name="result">When this method returns, contains the TimePerMass, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.TimePerMass@)">
            <summary>
            Converts the string representation of a TimePerMass to a TimePerMass. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a TimePerMass to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the TimePerMass, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.TimePerMass@)">
            <summary>
            Converts the string representation of a TimePerMass to a TimePerMass. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a TimePerMass to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the TimePerMass, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.TimePerMass.Subunit,Nalco.Numerics.SI.TimePerMass@)">
            <summary>
            Converts the string representation of a TimePerMass to a TimePerMass. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a TimePerMass to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the TimePerMass, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.CompareTo(System.Object)">
            <summary>
            Compares the current TimePerMass with another TimePerMass.
            </summary>
            <param name="obj">TimePerMass to compare with this TimePerMass.</param>
            <returns>Less than zero when this TimePerMass is less than the other parameter.
            Zero when this TimePerMass is equal to the other parameter.
            Greater than zero when this TimePerMass is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of TimePerMass.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.CompareTo(Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Compares the current TimePerMass with another TimePerMass.
            </summary>
            <param name="other">TimePerMass to compare with this TimePerMass.</param>
            <returns>Less than zero when this TimePerMass is less than the other parameter.
            Zero when this TimePerMass is equal to the other parameter.
            Greater than zero when this TimePerMass is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current TimePerMass.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.Abs(Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Returns the absolute value of a TimePerMass.
            </summary>
            <param name="value">A TimePerMass.</param>
            <returns>A TimePerMass that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.Round(Nalco.Numerics.SI.TimePerMass,Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Returns a TimePerMass rounded to the nearest interval.
            </summary>
            <param name="value">A TimePerMass.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A TimePerMass rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.Round(Nalco.Numerics.SI.TimePerMass,Nalco.Numerics.SI.TimePerMass,System.MidpointRounding)">
            <summary>
            Returns a TimePerMass rounded to the nearest interval.
            </summary>
            <param name="value">A TimePerMass.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A TimePerMass rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.Floor(Nalco.Numerics.SI.TimePerMass,Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Returns a TimePerMass rounded down to the nearest interval.
            </summary>
            <param name="value">A TimePerMass.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A TimePerMass rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.Ceiling(Nalco.Numerics.SI.TimePerMass,Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Returns a TimePerMass rounded up to the nearest interval.
            </summary>
            <param name="value">A TimePerMass.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A TimePerMass rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_Equality(Nalco.Numerics.SI.TimePerMass,Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Determines whether two TimePerMasss are equal.
            </summary>
            <param name="l">Left TimePerMass.</param>
            <param name="r">Right TimePerMass.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_Inequality(Nalco.Numerics.SI.TimePerMass,Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Determines whether two TimePerMasss are not equal.
            </summary>
            <param name="l">Left TimePerMass.</param>
            <param name="r">Right TimePerMass.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_LessThan(Nalco.Numerics.SI.TimePerMass,Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Determines if the left TimePerMass is less than the right TimePerMass.
            </summary>
            <param name="l">Left TimePerMass.</param>
            <param name="r">Right TimePerMass.</param>
            <returns>True if the left TimePerMass is less than the right TimePerMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_LessThanOrEqual(Nalco.Numerics.SI.TimePerMass,Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Determines if the left TimePerMass is less than or equal to the right TimePerMass.
            </summary>
            <param name="l">Left TimePerMass.</param>
            <param name="r">Right TimePerMass.</param>
            <returns>True if the left TimePerMass is less than or equal to the right TimePerMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_GreaterThanOrEqual(Nalco.Numerics.SI.TimePerMass,Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Determines if the left TimePerMass is greater than or equal to the right TimePerMass.
            </summary>
            <param name="l">Left TimePerMass.</param>
            <param name="r">Right TimePerMass.</param>
            <returns>True if the left TimePerMass is greater than or equal to the right TimePerMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_GreaterThan(Nalco.Numerics.SI.TimePerMass,Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Determines if the left TimePerMass is greater than the right TimePerMass.
            </summary>
            <param name="l">Left TimePerMass.</param>
            <param name="r">Right TimePerMass.</param>
            <returns>True if the left TimePerMass is greater than the right TimePerMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_Addition(Nalco.Numerics.SI.TimePerMass,Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Add two TimePerMasss together.
            </summary>
            <param name="l">Left TimePerMass.</param>
            <param name="r">Right TimePerMass.</param>
            <returns>Sum of TimePerMasss.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_UnaryNegation(Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Negate a TimePerMass.
            </summary>
            <param name="l">Left TimePerMass.</param>
            <returns>Negative TimePerMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_Subtraction(Nalco.Numerics.SI.TimePerMass,Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Subtract two TimePerMasss.
            </summary>
            <param name="l">Left TimePerMass.</param>
            <param name="r">Right TimePerMass.</param>
            <returns>Difference of TimePerMasss.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_Multiply(Nalco.Numerics.SI.TimePerMass,System.Double)">
            <summary>
            Multiply a TimePerMass with a double.
            </summary>
            <param name="l">Left TimePerMass.</param>
            <param name="r">Double value.</param>
            <returns>TimePerMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_Multiply(System.Double,Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Multiply a TimePerMass with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right TimePerMass.</param>
            <returns>TimePerMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_Division(Nalco.Numerics.SI.TimePerMass,System.Double)">
            <summary>
            Divide a TimePerMass by a double.
            </summary>
            <param name="l">Left TimePerMass.</param>
            <param name="r">Double value.</param>
            <returns>TimePerMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_Division(Nalco.Numerics.SI.TimePerMass,Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Divide a TimePerMass by another TimePerMass.
            </summary>
            <param name="l">Left TimePerMass.</param>
            <param name="r">Right TimePerMass.</param>
            <returns>Ratio of the two TimePerMasss.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_Modulus(Nalco.Numerics.SI.TimePerMass,Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Divide a TimePerMass by another TimePerMass and return the remainder.
            </summary>
            <param name="l">Left TimePerMass.</param>
            <param name="r">Right TimePerMass.</param>
            <returns>Remainder after a TimePerMass is divided by a TimePerMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_Explicit(Nalco.Numerics.SI.TimePerMass)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the TimePerMass into a weakly typed Scalar.
            </summary>
            <param name="l">TimePerMass.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TimePerMass.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.TimePerMass">
            <summary>
            Explicitly convert the weakly typed Scalar into a TimePerMass.
            </summary>
            <param name="s">Scalar.</param>
            <returns>TimePerMass.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Viscosity">
            <summary>
            Viscosity (pascal second).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.Viscosity.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Viscosity.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Viscosity.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.#ctor(System.Double)">
            <summary>
            Construct a new Viscosity with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_Division(Nalco.Numerics.SI.Viscosity,Nalco.Numerics.SI.Time)">
            <summary>
            Divide a Viscosity by a Time.
            </summary>
            <param name="l">Left Viscosity.</param>
            <param name="r">Right Time.</param>
            <returns>Resulting Pressure.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.Viscosity.Zero">
            <summary>
            Viscosity of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.#ctor(System.Double,Nalco.Numerics.SI.Viscosity.Subunit)">
            <summary>
            Construct a Viscosity with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Viscosity.Item(Nalco.Numerics.SI.Viscosity.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Viscosity.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.Abbreviation(Nalco.Numerics.SI.Viscosity.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.Description(Nalco.Numerics.SI.Viscosity.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Viscosity.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.Parse(System.String)">
            <summary>
            Converts the string representation of a Viscosity to a Viscosity.
            </summary>
            <param name="s">A string that contains a Viscosity to convert.</param>
            <returns>A Viscosity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Viscosity to a Viscosity.
            </summary>
            <param name="s">A string that contains a Viscosity to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Viscosity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Viscosity to a Viscosity.
            </summary>
            <param name="s">A string that contains a Viscosity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Viscosity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Viscosity.Subunit)">
            <summary>
            Converts the string representation of a Viscosity to a Viscosity.
            </summary>
            <param name="s">A string that contains a Viscosity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Viscosity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.TryParse(System.String,Nalco.Numerics.SI.Viscosity@)">
            <summary>
            Converts the string representation of a Viscosity to a Viscosity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Viscosity to convert.</param>
            <param name="result">When this method returns, contains the Viscosity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Viscosity@)">
            <summary>
            Converts the string representation of a Viscosity to a Viscosity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Viscosity to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Viscosity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Viscosity@)">
            <summary>
            Converts the string representation of a Viscosity to a Viscosity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Viscosity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Viscosity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Viscosity.Subunit,Nalco.Numerics.SI.Viscosity@)">
            <summary>
            Converts the string representation of a Viscosity to a Viscosity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Viscosity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Viscosity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.CompareTo(System.Object)">
            <summary>
            Compares the current Viscosity with another Viscosity.
            </summary>
            <param name="obj">Viscosity to compare with this Viscosity.</param>
            <returns>Less than zero when this Viscosity is less than the other parameter.
            Zero when this Viscosity is equal to the other parameter.
            Greater than zero when this Viscosity is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Viscosity.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.CompareTo(Nalco.Numerics.SI.Viscosity)">
            <summary>
            Compares the current Viscosity with another Viscosity.
            </summary>
            <param name="other">Viscosity to compare with this Viscosity.</param>
            <returns>Less than zero when this Viscosity is less than the other parameter.
            Zero when this Viscosity is equal to the other parameter.
            Greater than zero when this Viscosity is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Viscosity.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.Abs(Nalco.Numerics.SI.Viscosity)">
            <summary>
            Returns the absolute value of a Viscosity.
            </summary>
            <param name="value">A Viscosity.</param>
            <returns>A Viscosity that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.Round(Nalco.Numerics.SI.Viscosity,Nalco.Numerics.SI.Viscosity)">
            <summary>
            Returns a Viscosity rounded to the nearest interval.
            </summary>
            <param name="value">A Viscosity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Viscosity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.Round(Nalco.Numerics.SI.Viscosity,Nalco.Numerics.SI.Viscosity,System.MidpointRounding)">
            <summary>
            Returns a Viscosity rounded to the nearest interval.
            </summary>
            <param name="value">A Viscosity.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Viscosity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.Floor(Nalco.Numerics.SI.Viscosity,Nalco.Numerics.SI.Viscosity)">
            <summary>
            Returns a Viscosity rounded down to the nearest interval.
            </summary>
            <param name="value">A Viscosity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Viscosity rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.Ceiling(Nalco.Numerics.SI.Viscosity,Nalco.Numerics.SI.Viscosity)">
            <summary>
            Returns a Viscosity rounded up to the nearest interval.
            </summary>
            <param name="value">A Viscosity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Viscosity rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_Equality(Nalco.Numerics.SI.Viscosity,Nalco.Numerics.SI.Viscosity)">
            <summary>
            Determines whether two Viscositys are equal.
            </summary>
            <param name="l">Left Viscosity.</param>
            <param name="r">Right Viscosity.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_Inequality(Nalco.Numerics.SI.Viscosity,Nalco.Numerics.SI.Viscosity)">
            <summary>
            Determines whether two Viscositys are not equal.
            </summary>
            <param name="l">Left Viscosity.</param>
            <param name="r">Right Viscosity.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_LessThan(Nalco.Numerics.SI.Viscosity,Nalco.Numerics.SI.Viscosity)">
            <summary>
            Determines if the left Viscosity is less than the right Viscosity.
            </summary>
            <param name="l">Left Viscosity.</param>
            <param name="r">Right Viscosity.</param>
            <returns>True if the left Viscosity is less than the right Viscosity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_LessThanOrEqual(Nalco.Numerics.SI.Viscosity,Nalco.Numerics.SI.Viscosity)">
            <summary>
            Determines if the left Viscosity is less than or equal to the right Viscosity.
            </summary>
            <param name="l">Left Viscosity.</param>
            <param name="r">Right Viscosity.</param>
            <returns>True if the left Viscosity is less than or equal to the right Viscosity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_GreaterThanOrEqual(Nalco.Numerics.SI.Viscosity,Nalco.Numerics.SI.Viscosity)">
            <summary>
            Determines if the left Viscosity is greater than or equal to the right Viscosity.
            </summary>
            <param name="l">Left Viscosity.</param>
            <param name="r">Right Viscosity.</param>
            <returns>True if the left Viscosity is greater than or equal to the right Viscosity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_GreaterThan(Nalco.Numerics.SI.Viscosity,Nalco.Numerics.SI.Viscosity)">
            <summary>
            Determines if the left Viscosity is greater than the right Viscosity.
            </summary>
            <param name="l">Left Viscosity.</param>
            <param name="r">Right Viscosity.</param>
            <returns>True if the left Viscosity is greater than the right Viscosity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_Addition(Nalco.Numerics.SI.Viscosity,Nalco.Numerics.SI.Viscosity)">
            <summary>
            Add two Viscositys together.
            </summary>
            <param name="l">Left Viscosity.</param>
            <param name="r">Right Viscosity.</param>
            <returns>Sum of Viscositys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_UnaryNegation(Nalco.Numerics.SI.Viscosity)">
            <summary>
            Negate a Viscosity.
            </summary>
            <param name="l">Left Viscosity.</param>
            <returns>Negative Viscosity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_Subtraction(Nalco.Numerics.SI.Viscosity,Nalco.Numerics.SI.Viscosity)">
            <summary>
            Subtract two Viscositys.
            </summary>
            <param name="l">Left Viscosity.</param>
            <param name="r">Right Viscosity.</param>
            <returns>Difference of Viscositys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_Multiply(Nalco.Numerics.SI.Viscosity,System.Double)">
            <summary>
            Multiply a Viscosity with a double.
            </summary>
            <param name="l">Left Viscosity.</param>
            <param name="r">Double value.</param>
            <returns>Viscosity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_Multiply(System.Double,Nalco.Numerics.SI.Viscosity)">
            <summary>
            Multiply a Viscosity with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Viscosity.</param>
            <returns>Viscosity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_Division(Nalco.Numerics.SI.Viscosity,System.Double)">
            <summary>
            Divide a Viscosity by a double.
            </summary>
            <param name="l">Left Viscosity.</param>
            <param name="r">Double value.</param>
            <returns>Viscosity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_Division(Nalco.Numerics.SI.Viscosity,Nalco.Numerics.SI.Viscosity)">
            <summary>
            Divide a Viscosity by another Viscosity.
            </summary>
            <param name="l">Left Viscosity.</param>
            <param name="r">Right Viscosity.</param>
            <returns>Ratio of the two Viscositys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_Modulus(Nalco.Numerics.SI.Viscosity,Nalco.Numerics.SI.Viscosity)">
            <summary>
            Divide a Viscosity by another Viscosity and return the remainder.
            </summary>
            <param name="l">Left Viscosity.</param>
            <param name="r">Right Viscosity.</param>
            <returns>Remainder after a Viscosity is divided by a Viscosity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_Explicit(Nalco.Numerics.SI.Viscosity)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Viscosity into a weakly typed Scalar.
            </summary>
            <param name="l">Viscosity.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Viscosity.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Viscosity">
            <summary>
            Explicitly convert the weakly typed Scalar into a Viscosity.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Viscosity.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.ReciprocalLength">
            <summary>
            Reciprocal length (reciprocal meters).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.ReciprocalLength.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ReciprocalLength.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ReciprocalLength.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.#ctor(System.Double)">
            <summary>
            Construct a new ReciprocalLength with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_Multiply(Nalco.Numerics.SI.ReciprocalLength,Nalco.Numerics.SI.Length)">
            <summary>
            Multiply a reciprocal length by a length.
            </summary>
            <param name="l">Left reciprocal length.</param>
            <param name="r">Right length.</param>
            <returns>Value.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.ReciprocalLength.Zero">
            <summary>
            ReciprocalLength of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.#ctor(System.Double,Nalco.Numerics.SI.ReciprocalLength.Subunit)">
            <summary>
            Construct a ReciprocalLength with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.ReciprocalLength.Item(Nalco.Numerics.SI.ReciprocalLength.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.ReciprocalLength.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.Abbreviation(Nalco.Numerics.SI.ReciprocalLength.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.Description(Nalco.Numerics.SI.ReciprocalLength.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalLength.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.Parse(System.String)">
            <summary>
            Converts the string representation of a ReciprocalLength to a ReciprocalLength.
            </summary>
            <param name="s">A string that contains a ReciprocalLength to convert.</param>
            <returns>A ReciprocalLength.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ReciprocalLength to a ReciprocalLength.
            </summary>
            <param name="s">A string that contains a ReciprocalLength to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A ReciprocalLength.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ReciprocalLength to a ReciprocalLength.
            </summary>
            <param name="s">A string that contains a ReciprocalLength to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A ReciprocalLength.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalLength.Subunit)">
            <summary>
            Converts the string representation of a ReciprocalLength to a ReciprocalLength.
            </summary>
            <param name="s">A string that contains a ReciprocalLength to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A ReciprocalLength.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.TryParse(System.String,Nalco.Numerics.SI.ReciprocalLength@)">
            <summary>
            Converts the string representation of a ReciprocalLength to a ReciprocalLength. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ReciprocalLength to convert.</param>
            <param name="result">When this method returns, contains the ReciprocalLength, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalLength@)">
            <summary>
            Converts the string representation of a ReciprocalLength to a ReciprocalLength. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ReciprocalLength to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ReciprocalLength, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalLength@)">
            <summary>
            Converts the string representation of a ReciprocalLength to a ReciprocalLength. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ReciprocalLength to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ReciprocalLength, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ReciprocalLength.Subunit,Nalco.Numerics.SI.ReciprocalLength@)">
            <summary>
            Converts the string representation of a ReciprocalLength to a ReciprocalLength. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ReciprocalLength to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the ReciprocalLength, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.CompareTo(System.Object)">
            <summary>
            Compares the current ReciprocalLength with another ReciprocalLength.
            </summary>
            <param name="obj">ReciprocalLength to compare with this ReciprocalLength.</param>
            <returns>Less than zero when this ReciprocalLength is less than the other parameter.
            Zero when this ReciprocalLength is equal to the other parameter.
            Greater than zero when this ReciprocalLength is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of ReciprocalLength.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.CompareTo(Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Compares the current ReciprocalLength with another ReciprocalLength.
            </summary>
            <param name="other">ReciprocalLength to compare with this ReciprocalLength.</param>
            <returns>Less than zero when this ReciprocalLength is less than the other parameter.
            Zero when this ReciprocalLength is equal to the other parameter.
            Greater than zero when this ReciprocalLength is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current ReciprocalLength.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.Abs(Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Returns the absolute value of a ReciprocalLength.
            </summary>
            <param name="value">A ReciprocalLength.</param>
            <returns>A ReciprocalLength that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.Round(Nalco.Numerics.SI.ReciprocalLength,Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Returns a ReciprocalLength rounded to the nearest interval.
            </summary>
            <param name="value">A ReciprocalLength.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ReciprocalLength rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.Round(Nalco.Numerics.SI.ReciprocalLength,Nalco.Numerics.SI.ReciprocalLength,System.MidpointRounding)">
            <summary>
            Returns a ReciprocalLength rounded to the nearest interval.
            </summary>
            <param name="value">A ReciprocalLength.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A ReciprocalLength rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.Floor(Nalco.Numerics.SI.ReciprocalLength,Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Returns a ReciprocalLength rounded down to the nearest interval.
            </summary>
            <param name="value">A ReciprocalLength.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ReciprocalLength rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.Ceiling(Nalco.Numerics.SI.ReciprocalLength,Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Returns a ReciprocalLength rounded up to the nearest interval.
            </summary>
            <param name="value">A ReciprocalLength.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ReciprocalLength rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_Equality(Nalco.Numerics.SI.ReciprocalLength,Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Determines whether two ReciprocalLengths are equal.
            </summary>
            <param name="l">Left ReciprocalLength.</param>
            <param name="r">Right ReciprocalLength.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_Inequality(Nalco.Numerics.SI.ReciprocalLength,Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Determines whether two ReciprocalLengths are not equal.
            </summary>
            <param name="l">Left ReciprocalLength.</param>
            <param name="r">Right ReciprocalLength.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_LessThan(Nalco.Numerics.SI.ReciprocalLength,Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Determines if the left ReciprocalLength is less than the right ReciprocalLength.
            </summary>
            <param name="l">Left ReciprocalLength.</param>
            <param name="r">Right ReciprocalLength.</param>
            <returns>True if the left ReciprocalLength is less than the right ReciprocalLength.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_LessThanOrEqual(Nalco.Numerics.SI.ReciprocalLength,Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Determines if the left ReciprocalLength is less than or equal to the right ReciprocalLength.
            </summary>
            <param name="l">Left ReciprocalLength.</param>
            <param name="r">Right ReciprocalLength.</param>
            <returns>True if the left ReciprocalLength is less than or equal to the right ReciprocalLength.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_GreaterThanOrEqual(Nalco.Numerics.SI.ReciprocalLength,Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Determines if the left ReciprocalLength is greater than or equal to the right ReciprocalLength.
            </summary>
            <param name="l">Left ReciprocalLength.</param>
            <param name="r">Right ReciprocalLength.</param>
            <returns>True if the left ReciprocalLength is greater than or equal to the right ReciprocalLength.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_GreaterThan(Nalco.Numerics.SI.ReciprocalLength,Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Determines if the left ReciprocalLength is greater than the right ReciprocalLength.
            </summary>
            <param name="l">Left ReciprocalLength.</param>
            <param name="r">Right ReciprocalLength.</param>
            <returns>True if the left ReciprocalLength is greater than the right ReciprocalLength.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_Addition(Nalco.Numerics.SI.ReciprocalLength,Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Add two ReciprocalLengths together.
            </summary>
            <param name="l">Left ReciprocalLength.</param>
            <param name="r">Right ReciprocalLength.</param>
            <returns>Sum of ReciprocalLengths.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_UnaryNegation(Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Negate a ReciprocalLength.
            </summary>
            <param name="l">Left ReciprocalLength.</param>
            <returns>Negative ReciprocalLength.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_Subtraction(Nalco.Numerics.SI.ReciprocalLength,Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Subtract two ReciprocalLengths.
            </summary>
            <param name="l">Left ReciprocalLength.</param>
            <param name="r">Right ReciprocalLength.</param>
            <returns>Difference of ReciprocalLengths.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_Multiply(Nalco.Numerics.SI.ReciprocalLength,System.Double)">
            <summary>
            Multiply a ReciprocalLength with a double.
            </summary>
            <param name="l">Left ReciprocalLength.</param>
            <param name="r">Double value.</param>
            <returns>ReciprocalLength.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_Multiply(System.Double,Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Multiply a ReciprocalLength with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right ReciprocalLength.</param>
            <returns>ReciprocalLength.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_Division(Nalco.Numerics.SI.ReciprocalLength,System.Double)">
            <summary>
            Divide a ReciprocalLength by a double.
            </summary>
            <param name="l">Left ReciprocalLength.</param>
            <param name="r">Double value.</param>
            <returns>ReciprocalLength.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_Division(Nalco.Numerics.SI.ReciprocalLength,Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Divide a ReciprocalLength by another ReciprocalLength.
            </summary>
            <param name="l">Left ReciprocalLength.</param>
            <param name="r">Right ReciprocalLength.</param>
            <returns>Ratio of the two ReciprocalLengths.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_Modulus(Nalco.Numerics.SI.ReciprocalLength,Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Divide a ReciprocalLength by another ReciprocalLength and return the remainder.
            </summary>
            <param name="l">Left ReciprocalLength.</param>
            <param name="r">Right ReciprocalLength.</param>
            <returns>Remainder after a ReciprocalLength is divided by a ReciprocalLength.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_Explicit(Nalco.Numerics.SI.ReciprocalLength)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the ReciprocalLength into a weakly typed Scalar.
            </summary>
            <param name="l">ReciprocalLength.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ReciprocalLength.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.ReciprocalLength">
            <summary>
            Explicitly convert the weakly typed Scalar into a ReciprocalLength.
            </summary>
            <param name="s">Scalar.</param>
            <returns>ReciprocalLength.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.MolarEntropy">
            <summary>
            Molar entropy (joules per mole kelvin).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.MolarEntropy.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.MolarEntropy.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.MolarEntropy.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.#ctor(System.Double)">
            <summary>
            Construct a new MolarEntropy with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="F:Nalco.Numerics.SI.MolarEntropy.Zero">
            <summary>
            MolarEntropy of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.#ctor(System.Double,Nalco.Numerics.SI.MolarEntropy.Subunit)">
            <summary>
            Construct a MolarEntropy with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.MolarEntropy.Item(Nalco.Numerics.SI.MolarEntropy.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.MolarEntropy.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.Abbreviation(Nalco.Numerics.SI.MolarEntropy.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.Description(Nalco.Numerics.SI.MolarEntropy.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarEntropy.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.Parse(System.String)">
            <summary>
            Converts the string representation of a MolarEntropy to a MolarEntropy.
            </summary>
            <param name="s">A string that contains a MolarEntropy to convert.</param>
            <returns>A MolarEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a MolarEntropy to a MolarEntropy.
            </summary>
            <param name="s">A string that contains a MolarEntropy to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A MolarEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a MolarEntropy to a MolarEntropy.
            </summary>
            <param name="s">A string that contains a MolarEntropy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A MolarEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarEntropy.Subunit)">
            <summary>
            Converts the string representation of a MolarEntropy to a MolarEntropy.
            </summary>
            <param name="s">A string that contains a MolarEntropy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A MolarEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.TryParse(System.String,Nalco.Numerics.SI.MolarEntropy@)">
            <summary>
            Converts the string representation of a MolarEntropy to a MolarEntropy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolarEntropy to convert.</param>
            <param name="result">When this method returns, contains the MolarEntropy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarEntropy@)">
            <summary>
            Converts the string representation of a MolarEntropy to a MolarEntropy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolarEntropy to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the MolarEntropy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarEntropy@)">
            <summary>
            Converts the string representation of a MolarEntropy to a MolarEntropy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolarEntropy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the MolarEntropy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarEntropy.Subunit,Nalco.Numerics.SI.MolarEntropy@)">
            <summary>
            Converts the string representation of a MolarEntropy to a MolarEntropy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolarEntropy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the MolarEntropy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.CompareTo(System.Object)">
            <summary>
            Compares the current MolarEntropy with another MolarEntropy.
            </summary>
            <param name="obj">MolarEntropy to compare with this MolarEntropy.</param>
            <returns>Less than zero when this MolarEntropy is less than the other parameter.
            Zero when this MolarEntropy is equal to the other parameter.
            Greater than zero when this MolarEntropy is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of MolarEntropy.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.CompareTo(Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Compares the current MolarEntropy with another MolarEntropy.
            </summary>
            <param name="other">MolarEntropy to compare with this MolarEntropy.</param>
            <returns>Less than zero when this MolarEntropy is less than the other parameter.
            Zero when this MolarEntropy is equal to the other parameter.
            Greater than zero when this MolarEntropy is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current MolarEntropy.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.Abs(Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Returns the absolute value of a MolarEntropy.
            </summary>
            <param name="value">A MolarEntropy.</param>
            <returns>A MolarEntropy that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.Round(Nalco.Numerics.SI.MolarEntropy,Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Returns a MolarEntropy rounded to the nearest interval.
            </summary>
            <param name="value">A MolarEntropy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MolarEntropy rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.Round(Nalco.Numerics.SI.MolarEntropy,Nalco.Numerics.SI.MolarEntropy,System.MidpointRounding)">
            <summary>
            Returns a MolarEntropy rounded to the nearest interval.
            </summary>
            <param name="value">A MolarEntropy.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A MolarEntropy rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.Floor(Nalco.Numerics.SI.MolarEntropy,Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Returns a MolarEntropy rounded down to the nearest interval.
            </summary>
            <param name="value">A MolarEntropy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MolarEntropy rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.Ceiling(Nalco.Numerics.SI.MolarEntropy,Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Returns a MolarEntropy rounded up to the nearest interval.
            </summary>
            <param name="value">A MolarEntropy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MolarEntropy rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.op_Equality(Nalco.Numerics.SI.MolarEntropy,Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Determines whether two MolarEntropys are equal.
            </summary>
            <param name="l">Left MolarEntropy.</param>
            <param name="r">Right MolarEntropy.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.op_Inequality(Nalco.Numerics.SI.MolarEntropy,Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Determines whether two MolarEntropys are not equal.
            </summary>
            <param name="l">Left MolarEntropy.</param>
            <param name="r">Right MolarEntropy.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.op_LessThan(Nalco.Numerics.SI.MolarEntropy,Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Determines if the left MolarEntropy is less than the right MolarEntropy.
            </summary>
            <param name="l">Left MolarEntropy.</param>
            <param name="r">Right MolarEntropy.</param>
            <returns>True if the left MolarEntropy is less than the right MolarEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.op_LessThanOrEqual(Nalco.Numerics.SI.MolarEntropy,Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Determines if the left MolarEntropy is less than or equal to the right MolarEntropy.
            </summary>
            <param name="l">Left MolarEntropy.</param>
            <param name="r">Right MolarEntropy.</param>
            <returns>True if the left MolarEntropy is less than or equal to the right MolarEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.op_GreaterThanOrEqual(Nalco.Numerics.SI.MolarEntropy,Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Determines if the left MolarEntropy is greater than or equal to the right MolarEntropy.
            </summary>
            <param name="l">Left MolarEntropy.</param>
            <param name="r">Right MolarEntropy.</param>
            <returns>True if the left MolarEntropy is greater than or equal to the right MolarEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.op_GreaterThan(Nalco.Numerics.SI.MolarEntropy,Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Determines if the left MolarEntropy is greater than the right MolarEntropy.
            </summary>
            <param name="l">Left MolarEntropy.</param>
            <param name="r">Right MolarEntropy.</param>
            <returns>True if the left MolarEntropy is greater than the right MolarEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.op_Addition(Nalco.Numerics.SI.MolarEntropy,Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Add two MolarEntropys together.
            </summary>
            <param name="l">Left MolarEntropy.</param>
            <param name="r">Right MolarEntropy.</param>
            <returns>Sum of MolarEntropys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.op_UnaryNegation(Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Negate a MolarEntropy.
            </summary>
            <param name="l">Left MolarEntropy.</param>
            <returns>Negative MolarEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.op_Subtraction(Nalco.Numerics.SI.MolarEntropy,Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Subtract two MolarEntropys.
            </summary>
            <param name="l">Left MolarEntropy.</param>
            <param name="r">Right MolarEntropy.</param>
            <returns>Difference of MolarEntropys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.op_Multiply(Nalco.Numerics.SI.MolarEntropy,System.Double)">
            <summary>
            Multiply a MolarEntropy with a double.
            </summary>
            <param name="l">Left MolarEntropy.</param>
            <param name="r">Double value.</param>
            <returns>MolarEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.op_Multiply(System.Double,Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Multiply a MolarEntropy with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right MolarEntropy.</param>
            <returns>MolarEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.op_Division(Nalco.Numerics.SI.MolarEntropy,System.Double)">
            <summary>
            Divide a MolarEntropy by a double.
            </summary>
            <param name="l">Left MolarEntropy.</param>
            <param name="r">Double value.</param>
            <returns>MolarEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.op_Division(Nalco.Numerics.SI.MolarEntropy,Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Divide a MolarEntropy by another MolarEntropy.
            </summary>
            <param name="l">Left MolarEntropy.</param>
            <param name="r">Right MolarEntropy.</param>
            <returns>Ratio of the two MolarEntropys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.op_Modulus(Nalco.Numerics.SI.MolarEntropy,Nalco.Numerics.SI.MolarEntropy)">
            <summary>
            Divide a MolarEntropy by another MolarEntropy and return the remainder.
            </summary>
            <param name="l">Left MolarEntropy.</param>
            <param name="r">Right MolarEntropy.</param>
            <returns>Remainder after a MolarEntropy is divided by a MolarEntropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.op_Explicit(Nalco.Numerics.SI.MolarEntropy)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the MolarEntropy into a weakly typed Scalar.
            </summary>
            <param name="l">MolarEntropy.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarEntropy.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.MolarEntropy">
            <summary>
            Explicitly convert the weakly typed Scalar into a MolarEntropy.
            </summary>
            <param name="s">Scalar.</param>
            <returns>MolarEntropy.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.MolarMass">
            <summary>
            Molar mass (kilograms per mole).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.MolarMass.DryAir">
            <summary>
            The Molar Mass of dry air.
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.MolarMass.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.MolarMass.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.MolarMass.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.#ctor(System.Double)">
            <summary>
            Construct a new MolarMass with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_Multiply(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Multiply a molar mass by a specific heat capacity.
            </summary>
            <param name="l">Left molar mass.</param>
            <param name="r">Right specific heat capacity.</param>
            <returns>Resulting molar heat capacity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_Multiply(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Multiply a molar mass by a molar concentration.
            </summary>
            <param name="l">Left molar mass.</param>
            <param name="r">Right molar concentration.</param>
            <returns>Resulting density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_Multiply(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Multiply a molar mass by a molal concentration.
            </summary>
            <param name="l">Left molar mass.</param>
            <param name="r">Right molal concentration.</param>
            <returns>Resulting mass fraction.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_Explicit(Nalco.Numerics.SI.MolarMass)~Nalco.Numerics.SI.MolalConcentration">
            <summary>
            Explicitly convert the molar mass into a molal concentration
            </summary>
            <param name="l">Molar mass.</param>
        </member>
        <member name="F:Nalco.Numerics.SI.MolarMass.Zero">
            <summary>
            MolarMass of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.#ctor(System.Double,Nalco.Numerics.SI.MolarMass.Subunit)">
            <summary>
            Construct a MolarMass with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.MolarMass.Item(Nalco.Numerics.SI.MolarMass.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.MolarMass.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.Abbreviation(Nalco.Numerics.SI.MolarMass.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.Description(Nalco.Numerics.SI.MolarMass.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarMass.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.Parse(System.String)">
            <summary>
            Converts the string representation of a MolarMass to a MolarMass.
            </summary>
            <param name="s">A string that contains a MolarMass to convert.</param>
            <returns>A MolarMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a MolarMass to a MolarMass.
            </summary>
            <param name="s">A string that contains a MolarMass to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A MolarMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a MolarMass to a MolarMass.
            </summary>
            <param name="s">A string that contains a MolarMass to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A MolarMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarMass.Subunit)">
            <summary>
            Converts the string representation of a MolarMass to a MolarMass.
            </summary>
            <param name="s">A string that contains a MolarMass to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A MolarMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.TryParse(System.String,Nalco.Numerics.SI.MolarMass@)">
            <summary>
            Converts the string representation of a MolarMass to a MolarMass. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolarMass to convert.</param>
            <param name="result">When this method returns, contains the MolarMass, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarMass@)">
            <summary>
            Converts the string representation of a MolarMass to a MolarMass. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolarMass to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the MolarMass, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarMass@)">
            <summary>
            Converts the string representation of a MolarMass to a MolarMass. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolarMass to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the MolarMass, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MolarMass.Subunit,Nalco.Numerics.SI.MolarMass@)">
            <summary>
            Converts the string representation of a MolarMass to a MolarMass. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MolarMass to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the MolarMass, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.CompareTo(System.Object)">
            <summary>
            Compares the current MolarMass with another MolarMass.
            </summary>
            <param name="obj">MolarMass to compare with this MolarMass.</param>
            <returns>Less than zero when this MolarMass is less than the other parameter.
            Zero when this MolarMass is equal to the other parameter.
            Greater than zero when this MolarMass is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of MolarMass.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.CompareTo(Nalco.Numerics.SI.MolarMass)">
            <summary>
            Compares the current MolarMass with another MolarMass.
            </summary>
            <param name="other">MolarMass to compare with this MolarMass.</param>
            <returns>Less than zero when this MolarMass is less than the other parameter.
            Zero when this MolarMass is equal to the other parameter.
            Greater than zero when this MolarMass is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current MolarMass.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.Abs(Nalco.Numerics.SI.MolarMass)">
            <summary>
            Returns the absolute value of a MolarMass.
            </summary>
            <param name="value">A MolarMass.</param>
            <returns>A MolarMass that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.Round(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Returns a MolarMass rounded to the nearest interval.
            </summary>
            <param name="value">A MolarMass.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MolarMass rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.Round(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.MolarMass,System.MidpointRounding)">
            <summary>
            Returns a MolarMass rounded to the nearest interval.
            </summary>
            <param name="value">A MolarMass.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A MolarMass rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.Floor(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Returns a MolarMass rounded down to the nearest interval.
            </summary>
            <param name="value">A MolarMass.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MolarMass rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.Ceiling(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Returns a MolarMass rounded up to the nearest interval.
            </summary>
            <param name="value">A MolarMass.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MolarMass rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_Equality(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Determines whether two MolarMasss are equal.
            </summary>
            <param name="l">Left MolarMass.</param>
            <param name="r">Right MolarMass.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_Inequality(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Determines whether two MolarMasss are not equal.
            </summary>
            <param name="l">Left MolarMass.</param>
            <param name="r">Right MolarMass.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_LessThan(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Determines if the left MolarMass is less than the right MolarMass.
            </summary>
            <param name="l">Left MolarMass.</param>
            <param name="r">Right MolarMass.</param>
            <returns>True if the left MolarMass is less than the right MolarMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_LessThanOrEqual(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Determines if the left MolarMass is less than or equal to the right MolarMass.
            </summary>
            <param name="l">Left MolarMass.</param>
            <param name="r">Right MolarMass.</param>
            <returns>True if the left MolarMass is less than or equal to the right MolarMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_GreaterThanOrEqual(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Determines if the left MolarMass is greater than or equal to the right MolarMass.
            </summary>
            <param name="l">Left MolarMass.</param>
            <param name="r">Right MolarMass.</param>
            <returns>True if the left MolarMass is greater than or equal to the right MolarMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_GreaterThan(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Determines if the left MolarMass is greater than the right MolarMass.
            </summary>
            <param name="l">Left MolarMass.</param>
            <param name="r">Right MolarMass.</param>
            <returns>True if the left MolarMass is greater than the right MolarMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_Addition(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Add two MolarMasss together.
            </summary>
            <param name="l">Left MolarMass.</param>
            <param name="r">Right MolarMass.</param>
            <returns>Sum of MolarMasss.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_UnaryNegation(Nalco.Numerics.SI.MolarMass)">
            <summary>
            Negate a MolarMass.
            </summary>
            <param name="l">Left MolarMass.</param>
            <returns>Negative MolarMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_Subtraction(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Subtract two MolarMasss.
            </summary>
            <param name="l">Left MolarMass.</param>
            <param name="r">Right MolarMass.</param>
            <returns>Difference of MolarMasss.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_Multiply(Nalco.Numerics.SI.MolarMass,System.Double)">
            <summary>
            Multiply a MolarMass with a double.
            </summary>
            <param name="l">Left MolarMass.</param>
            <param name="r">Double value.</param>
            <returns>MolarMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_Multiply(System.Double,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Multiply a MolarMass with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right MolarMass.</param>
            <returns>MolarMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_Division(Nalco.Numerics.SI.MolarMass,System.Double)">
            <summary>
            Divide a MolarMass by a double.
            </summary>
            <param name="l">Left MolarMass.</param>
            <param name="r">Double value.</param>
            <returns>MolarMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_Division(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Divide a MolarMass by another MolarMass.
            </summary>
            <param name="l">Left MolarMass.</param>
            <param name="r">Right MolarMass.</param>
            <returns>Ratio of the two MolarMasss.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_Modulus(Nalco.Numerics.SI.MolarMass,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Divide a MolarMass by another MolarMass and return the remainder.
            </summary>
            <param name="l">Left MolarMass.</param>
            <param name="r">Right MolarMass.</param>
            <returns>Remainder after a MolarMass is divided by a MolarMass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_Explicit(Nalco.Numerics.SI.MolarMass)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the MolarMass into a weakly typed Scalar.
            </summary>
            <param name="l">MolarMass.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MolarMass.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.MolarMass">
            <summary>
            Explicitly convert the weakly typed Scalar into a MolarMass.
            </summary>
            <param name="s">Scalar.</param>
            <returns>MolarMass.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.RelativeHumidity">
            <summary>
            Relative humidity (pascals per pascal).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.RelativeHumidity.Water">
            <summary>
            RelativeHumidity at which solution is "wicked wet".
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.RelativeHumidity.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.RelativeHumidity.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.RelativeHumidity.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.#ctor(System.Double)">
            <summary>
            Construct a new RelativeHumidity with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="F:Nalco.Numerics.SI.RelativeHumidity.Zero">
            <summary>
            RelativeHumidity of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.#ctor(System.Double,Nalco.Numerics.SI.RelativeHumidity.Subunit)">
            <summary>
            Construct a RelativeHumidity with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.RelativeHumidity.Item(Nalco.Numerics.SI.RelativeHumidity.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.RelativeHumidity.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.Abbreviation(Nalco.Numerics.SI.RelativeHumidity.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.Description(Nalco.Numerics.SI.RelativeHumidity.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.RelativeHumidity.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.Parse(System.String)">
            <summary>
            Converts the string representation of a RelativeHumidity to a RelativeHumidity.
            </summary>
            <param name="s">A string that contains a RelativeHumidity to convert.</param>
            <returns>A RelativeHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a RelativeHumidity to a RelativeHumidity.
            </summary>
            <param name="s">A string that contains a RelativeHumidity to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A RelativeHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a RelativeHumidity to a RelativeHumidity.
            </summary>
            <param name="s">A string that contains a RelativeHumidity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A RelativeHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.RelativeHumidity.Subunit)">
            <summary>
            Converts the string representation of a RelativeHumidity to a RelativeHumidity.
            </summary>
            <param name="s">A string that contains a RelativeHumidity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A RelativeHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.TryParse(System.String,Nalco.Numerics.SI.RelativeHumidity@)">
            <summary>
            Converts the string representation of a RelativeHumidity to a RelativeHumidity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a RelativeHumidity to convert.</param>
            <param name="result">When this method returns, contains the RelativeHumidity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.RelativeHumidity@)">
            <summary>
            Converts the string representation of a RelativeHumidity to a RelativeHumidity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a RelativeHumidity to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the RelativeHumidity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.RelativeHumidity@)">
            <summary>
            Converts the string representation of a RelativeHumidity to a RelativeHumidity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a RelativeHumidity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the RelativeHumidity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.RelativeHumidity.Subunit,Nalco.Numerics.SI.RelativeHumidity@)">
            <summary>
            Converts the string representation of a RelativeHumidity to a RelativeHumidity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a RelativeHumidity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the RelativeHumidity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.CompareTo(System.Object)">
            <summary>
            Compares the current RelativeHumidity with another RelativeHumidity.
            </summary>
            <param name="obj">RelativeHumidity to compare with this RelativeHumidity.</param>
            <returns>Less than zero when this RelativeHumidity is less than the other parameter.
            Zero when this RelativeHumidity is equal to the other parameter.
            Greater than zero when this RelativeHumidity is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of RelativeHumidity.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.CompareTo(Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Compares the current RelativeHumidity with another RelativeHumidity.
            </summary>
            <param name="other">RelativeHumidity to compare with this RelativeHumidity.</param>
            <returns>Less than zero when this RelativeHumidity is less than the other parameter.
            Zero when this RelativeHumidity is equal to the other parameter.
            Greater than zero when this RelativeHumidity is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current RelativeHumidity.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.Abs(Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Returns the absolute value of a RelativeHumidity.
            </summary>
            <param name="value">A RelativeHumidity.</param>
            <returns>A RelativeHumidity that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.Round(Nalco.Numerics.SI.RelativeHumidity,Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Returns a RelativeHumidity rounded to the nearest interval.
            </summary>
            <param name="value">A RelativeHumidity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A RelativeHumidity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.Round(Nalco.Numerics.SI.RelativeHumidity,Nalco.Numerics.SI.RelativeHumidity,System.MidpointRounding)">
            <summary>
            Returns a RelativeHumidity rounded to the nearest interval.
            </summary>
            <param name="value">A RelativeHumidity.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A RelativeHumidity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.Floor(Nalco.Numerics.SI.RelativeHumidity,Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Returns a RelativeHumidity rounded down to the nearest interval.
            </summary>
            <param name="value">A RelativeHumidity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A RelativeHumidity rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.Ceiling(Nalco.Numerics.SI.RelativeHumidity,Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Returns a RelativeHumidity rounded up to the nearest interval.
            </summary>
            <param name="value">A RelativeHumidity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A RelativeHumidity rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.op_Equality(Nalco.Numerics.SI.RelativeHumidity,Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Determines whether two RelativeHumiditys are equal.
            </summary>
            <param name="l">Left RelativeHumidity.</param>
            <param name="r">Right RelativeHumidity.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.op_Inequality(Nalco.Numerics.SI.RelativeHumidity,Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Determines whether two RelativeHumiditys are not equal.
            </summary>
            <param name="l">Left RelativeHumidity.</param>
            <param name="r">Right RelativeHumidity.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.op_LessThan(Nalco.Numerics.SI.RelativeHumidity,Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Determines if the left RelativeHumidity is less than the right RelativeHumidity.
            </summary>
            <param name="l">Left RelativeHumidity.</param>
            <param name="r">Right RelativeHumidity.</param>
            <returns>True if the left RelativeHumidity is less than the right RelativeHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.op_LessThanOrEqual(Nalco.Numerics.SI.RelativeHumidity,Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Determines if the left RelativeHumidity is less than or equal to the right RelativeHumidity.
            </summary>
            <param name="l">Left RelativeHumidity.</param>
            <param name="r">Right RelativeHumidity.</param>
            <returns>True if the left RelativeHumidity is less than or equal to the right RelativeHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.op_GreaterThanOrEqual(Nalco.Numerics.SI.RelativeHumidity,Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Determines if the left RelativeHumidity is greater than or equal to the right RelativeHumidity.
            </summary>
            <param name="l">Left RelativeHumidity.</param>
            <param name="r">Right RelativeHumidity.</param>
            <returns>True if the left RelativeHumidity is greater than or equal to the right RelativeHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.op_GreaterThan(Nalco.Numerics.SI.RelativeHumidity,Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Determines if the left RelativeHumidity is greater than the right RelativeHumidity.
            </summary>
            <param name="l">Left RelativeHumidity.</param>
            <param name="r">Right RelativeHumidity.</param>
            <returns>True if the left RelativeHumidity is greater than the right RelativeHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.op_Addition(Nalco.Numerics.SI.RelativeHumidity,Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Add two RelativeHumiditys together.
            </summary>
            <param name="l">Left RelativeHumidity.</param>
            <param name="r">Right RelativeHumidity.</param>
            <returns>Sum of RelativeHumiditys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.op_UnaryNegation(Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Negate a RelativeHumidity.
            </summary>
            <param name="l">Left RelativeHumidity.</param>
            <returns>Negative RelativeHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.op_Subtraction(Nalco.Numerics.SI.RelativeHumidity,Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Subtract two RelativeHumiditys.
            </summary>
            <param name="l">Left RelativeHumidity.</param>
            <param name="r">Right RelativeHumidity.</param>
            <returns>Difference of RelativeHumiditys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.op_Multiply(Nalco.Numerics.SI.RelativeHumidity,System.Double)">
            <summary>
            Multiply a RelativeHumidity with a double.
            </summary>
            <param name="l">Left RelativeHumidity.</param>
            <param name="r">Double value.</param>
            <returns>RelativeHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.op_Multiply(System.Double,Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Multiply a RelativeHumidity with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right RelativeHumidity.</param>
            <returns>RelativeHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.op_Division(Nalco.Numerics.SI.RelativeHumidity,System.Double)">
            <summary>
            Divide a RelativeHumidity by a double.
            </summary>
            <param name="l">Left RelativeHumidity.</param>
            <param name="r">Double value.</param>
            <returns>RelativeHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.op_Division(Nalco.Numerics.SI.RelativeHumidity,Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Divide a RelativeHumidity by another RelativeHumidity.
            </summary>
            <param name="l">Left RelativeHumidity.</param>
            <param name="r">Right RelativeHumidity.</param>
            <returns>Ratio of the two RelativeHumiditys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.op_Modulus(Nalco.Numerics.SI.RelativeHumidity,Nalco.Numerics.SI.RelativeHumidity)">
            <summary>
            Divide a RelativeHumidity by another RelativeHumidity and return the remainder.
            </summary>
            <param name="l">Left RelativeHumidity.</param>
            <param name="r">Right RelativeHumidity.</param>
            <returns>Remainder after a RelativeHumidity is divided by a RelativeHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.op_Explicit(Nalco.Numerics.SI.RelativeHumidity)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the RelativeHumidity into a weakly typed Scalar.
            </summary>
            <param name="l">RelativeHumidity.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.RelativeHumidity.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.RelativeHumidity">
            <summary>
            Explicitly convert the weakly typed Scalar into a RelativeHumidity.
            </summary>
            <param name="s">Scalar.</param>
            <returns>RelativeHumidity.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.SpecificHumidity">
            <summary>
            Specific humidity (kilograms per kilogram).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.SpecificHumidity.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.SpecificHumidity.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.SpecificHumidity.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.#ctor(System.Double)">
            <summary>
            Construct a new SpecificHumidity with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_Multiply(Nalco.Numerics.SI.SpecificHumidity,Nalco.Numerics.SI.MassRate)">
            <summary>
            Multiply a specific humidity by a mass rate.
            </summary>
            <param name="l">Left specific humidity.</param>
            <param name="r">Right mass rate.</param>
            <returns>Resulting mass rate.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.SpecificHumidity.Zero">
            <summary>
            SpecificHumidity of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.#ctor(System.Double,Nalco.Numerics.SI.SpecificHumidity.Subunit)">
            <summary>
            Construct a SpecificHumidity with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.SpecificHumidity.Item(Nalco.Numerics.SI.SpecificHumidity.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.SpecificHumidity.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.Abbreviation(Nalco.Numerics.SI.SpecificHumidity.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.Description(Nalco.Numerics.SI.SpecificHumidity.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificHumidity.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.Parse(System.String)">
            <summary>
            Converts the string representation of a SpecificHumidity to a SpecificHumidity.
            </summary>
            <param name="s">A string that contains a SpecificHumidity to convert.</param>
            <returns>A SpecificHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a SpecificHumidity to a SpecificHumidity.
            </summary>
            <param name="s">A string that contains a SpecificHumidity to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A SpecificHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a SpecificHumidity to a SpecificHumidity.
            </summary>
            <param name="s">A string that contains a SpecificHumidity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A SpecificHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificHumidity.Subunit)">
            <summary>
            Converts the string representation of a SpecificHumidity to a SpecificHumidity.
            </summary>
            <param name="s">A string that contains a SpecificHumidity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A SpecificHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.TryParse(System.String,Nalco.Numerics.SI.SpecificHumidity@)">
            <summary>
            Converts the string representation of a SpecificHumidity to a SpecificHumidity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificHumidity to convert.</param>
            <param name="result">When this method returns, contains the SpecificHumidity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificHumidity@)">
            <summary>
            Converts the string representation of a SpecificHumidity to a SpecificHumidity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificHumidity to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the SpecificHumidity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificHumidity@)">
            <summary>
            Converts the string representation of a SpecificHumidity to a SpecificHumidity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificHumidity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the SpecificHumidity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificHumidity.Subunit,Nalco.Numerics.SI.SpecificHumidity@)">
            <summary>
            Converts the string representation of a SpecificHumidity to a SpecificHumidity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificHumidity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the SpecificHumidity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.CompareTo(System.Object)">
            <summary>
            Compares the current SpecificHumidity with another SpecificHumidity.
            </summary>
            <param name="obj">SpecificHumidity to compare with this SpecificHumidity.</param>
            <returns>Less than zero when this SpecificHumidity is less than the other parameter.
            Zero when this SpecificHumidity is equal to the other parameter.
            Greater than zero when this SpecificHumidity is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of SpecificHumidity.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.CompareTo(Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Compares the current SpecificHumidity with another SpecificHumidity.
            </summary>
            <param name="other">SpecificHumidity to compare with this SpecificHumidity.</param>
            <returns>Less than zero when this SpecificHumidity is less than the other parameter.
            Zero when this SpecificHumidity is equal to the other parameter.
            Greater than zero when this SpecificHumidity is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current SpecificHumidity.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.Abs(Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Returns the absolute value of a SpecificHumidity.
            </summary>
            <param name="value">A SpecificHumidity.</param>
            <returns>A SpecificHumidity that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.Round(Nalco.Numerics.SI.SpecificHumidity,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Returns a SpecificHumidity rounded to the nearest interval.
            </summary>
            <param name="value">A SpecificHumidity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SpecificHumidity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.Round(Nalco.Numerics.SI.SpecificHumidity,Nalco.Numerics.SI.SpecificHumidity,System.MidpointRounding)">
            <summary>
            Returns a SpecificHumidity rounded to the nearest interval.
            </summary>
            <param name="value">A SpecificHumidity.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A SpecificHumidity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.Floor(Nalco.Numerics.SI.SpecificHumidity,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Returns a SpecificHumidity rounded down to the nearest interval.
            </summary>
            <param name="value">A SpecificHumidity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SpecificHumidity rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.Ceiling(Nalco.Numerics.SI.SpecificHumidity,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Returns a SpecificHumidity rounded up to the nearest interval.
            </summary>
            <param name="value">A SpecificHumidity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SpecificHumidity rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_Equality(Nalco.Numerics.SI.SpecificHumidity,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Determines whether two SpecificHumiditys are equal.
            </summary>
            <param name="l">Left SpecificHumidity.</param>
            <param name="r">Right SpecificHumidity.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_Inequality(Nalco.Numerics.SI.SpecificHumidity,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Determines whether two SpecificHumiditys are not equal.
            </summary>
            <param name="l">Left SpecificHumidity.</param>
            <param name="r">Right SpecificHumidity.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_LessThan(Nalco.Numerics.SI.SpecificHumidity,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Determines if the left SpecificHumidity is less than the right SpecificHumidity.
            </summary>
            <param name="l">Left SpecificHumidity.</param>
            <param name="r">Right SpecificHumidity.</param>
            <returns>True if the left SpecificHumidity is less than the right SpecificHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_LessThanOrEqual(Nalco.Numerics.SI.SpecificHumidity,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Determines if the left SpecificHumidity is less than or equal to the right SpecificHumidity.
            </summary>
            <param name="l">Left SpecificHumidity.</param>
            <param name="r">Right SpecificHumidity.</param>
            <returns>True if the left SpecificHumidity is less than or equal to the right SpecificHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_GreaterThanOrEqual(Nalco.Numerics.SI.SpecificHumidity,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Determines if the left SpecificHumidity is greater than or equal to the right SpecificHumidity.
            </summary>
            <param name="l">Left SpecificHumidity.</param>
            <param name="r">Right SpecificHumidity.</param>
            <returns>True if the left SpecificHumidity is greater than or equal to the right SpecificHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_GreaterThan(Nalco.Numerics.SI.SpecificHumidity,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Determines if the left SpecificHumidity is greater than the right SpecificHumidity.
            </summary>
            <param name="l">Left SpecificHumidity.</param>
            <param name="r">Right SpecificHumidity.</param>
            <returns>True if the left SpecificHumidity is greater than the right SpecificHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_Addition(Nalco.Numerics.SI.SpecificHumidity,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Add two SpecificHumiditys together.
            </summary>
            <param name="l">Left SpecificHumidity.</param>
            <param name="r">Right SpecificHumidity.</param>
            <returns>Sum of SpecificHumiditys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_UnaryNegation(Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Negate a SpecificHumidity.
            </summary>
            <param name="l">Left SpecificHumidity.</param>
            <returns>Negative SpecificHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_Subtraction(Nalco.Numerics.SI.SpecificHumidity,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Subtract two SpecificHumiditys.
            </summary>
            <param name="l">Left SpecificHumidity.</param>
            <param name="r">Right SpecificHumidity.</param>
            <returns>Difference of SpecificHumiditys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_Multiply(Nalco.Numerics.SI.SpecificHumidity,System.Double)">
            <summary>
            Multiply a SpecificHumidity with a double.
            </summary>
            <param name="l">Left SpecificHumidity.</param>
            <param name="r">Double value.</param>
            <returns>SpecificHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_Multiply(System.Double,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Multiply a SpecificHumidity with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right SpecificHumidity.</param>
            <returns>SpecificHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_Division(Nalco.Numerics.SI.SpecificHumidity,System.Double)">
            <summary>
            Divide a SpecificHumidity by a double.
            </summary>
            <param name="l">Left SpecificHumidity.</param>
            <param name="r">Double value.</param>
            <returns>SpecificHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_Division(Nalco.Numerics.SI.SpecificHumidity,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Divide a SpecificHumidity by another SpecificHumidity.
            </summary>
            <param name="l">Left SpecificHumidity.</param>
            <param name="r">Right SpecificHumidity.</param>
            <returns>Ratio of the two SpecificHumiditys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_Modulus(Nalco.Numerics.SI.SpecificHumidity,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Divide a SpecificHumidity by another SpecificHumidity and return the remainder.
            </summary>
            <param name="l">Left SpecificHumidity.</param>
            <param name="r">Right SpecificHumidity.</param>
            <returns>Remainder after a SpecificHumidity is divided by a SpecificHumidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_Explicit(Nalco.Numerics.SI.SpecificHumidity)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the SpecificHumidity into a weakly typed Scalar.
            </summary>
            <param name="l">SpecificHumidity.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificHumidity.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.SpecificHumidity">
            <summary>
            Explicitly convert the weakly typed Scalar into a SpecificHumidity.
            </summary>
            <param name="s">Scalar.</param>
            <returns>SpecificHumidity.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.SpecificVolume">
            <summary>
            Specific volume (cubic meters per kilogram).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.SpecificVolume.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.SpecificVolume.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.SpecificVolume.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.#ctor(System.Double)">
            <summary>
            Construct a new SpecificVolume with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_Multiply(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.MassRate)">
            <summary>
            Multiply a specific volume by a mass rate.
            </summary>
            <param name="l">Left specific volume.</param>
            <param name="r">Right mass rate.</param>
            <returns>Resulting volume rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_Explicit(Nalco.Numerics.SI.Density)~Nalco.Numerics.SI.SpecificVolume">
            <summary>
            Explicitly conver the density into a specific volume.
            </summary>
            <param name="l">Density.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_Multiply(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.Pressure)">
            <summary>
            Multiply a specific volume by a pressure
            </summary>
            <param name="l">Left specific volume.</param>
            <param name="r">Right pressure.</param>
            <returns>Resulting specific enthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_Multiply(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Multiply a specific volume by a molar concentration.
            </summary>
            <param name="l">Left specific volume.</param>
            <param name="r">Right molar concentration.</param>
            <returns>Resulting molal concentration.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.SpecificVolume.Zero">
            <summary>
            SpecificVolume of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.#ctor(System.Double,Nalco.Numerics.SI.SpecificVolume.Subunit)">
            <summary>
            Construct a SpecificVolume with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.SpecificVolume.Item(Nalco.Numerics.SI.SpecificVolume.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.SpecificVolume.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.Abbreviation(Nalco.Numerics.SI.SpecificVolume.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.Description(Nalco.Numerics.SI.SpecificVolume.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificVolume.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.Parse(System.String)">
            <summary>
            Converts the string representation of a SpecificVolume to a SpecificVolume.
            </summary>
            <param name="s">A string that contains a SpecificVolume to convert.</param>
            <returns>A SpecificVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a SpecificVolume to a SpecificVolume.
            </summary>
            <param name="s">A string that contains a SpecificVolume to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A SpecificVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a SpecificVolume to a SpecificVolume.
            </summary>
            <param name="s">A string that contains a SpecificVolume to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A SpecificVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificVolume.Subunit)">
            <summary>
            Converts the string representation of a SpecificVolume to a SpecificVolume.
            </summary>
            <param name="s">A string that contains a SpecificVolume to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A SpecificVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.TryParse(System.String,Nalco.Numerics.SI.SpecificVolume@)">
            <summary>
            Converts the string representation of a SpecificVolume to a SpecificVolume. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificVolume to convert.</param>
            <param name="result">When this method returns, contains the SpecificVolume, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificVolume@)">
            <summary>
            Converts the string representation of a SpecificVolume to a SpecificVolume. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificVolume to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the SpecificVolume, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificVolume@)">
            <summary>
            Converts the string representation of a SpecificVolume to a SpecificVolume. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificVolume to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the SpecificVolume, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.SpecificVolume.Subunit,Nalco.Numerics.SI.SpecificVolume@)">
            <summary>
            Converts the string representation of a SpecificVolume to a SpecificVolume. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a SpecificVolume to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the SpecificVolume, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.CompareTo(System.Object)">
            <summary>
            Compares the current SpecificVolume with another SpecificVolume.
            </summary>
            <param name="obj">SpecificVolume to compare with this SpecificVolume.</param>
            <returns>Less than zero when this SpecificVolume is less than the other parameter.
            Zero when this SpecificVolume is equal to the other parameter.
            Greater than zero when this SpecificVolume is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of SpecificVolume.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.CompareTo(Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Compares the current SpecificVolume with another SpecificVolume.
            </summary>
            <param name="other">SpecificVolume to compare with this SpecificVolume.</param>
            <returns>Less than zero when this SpecificVolume is less than the other parameter.
            Zero when this SpecificVolume is equal to the other parameter.
            Greater than zero when this SpecificVolume is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current SpecificVolume.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.Abs(Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Returns the absolute value of a SpecificVolume.
            </summary>
            <param name="value">A SpecificVolume.</param>
            <returns>A SpecificVolume that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.Round(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Returns a SpecificVolume rounded to the nearest interval.
            </summary>
            <param name="value">A SpecificVolume.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SpecificVolume rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.Round(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.SpecificVolume,System.MidpointRounding)">
            <summary>
            Returns a SpecificVolume rounded to the nearest interval.
            </summary>
            <param name="value">A SpecificVolume.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A SpecificVolume rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.Floor(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Returns a SpecificVolume rounded down to the nearest interval.
            </summary>
            <param name="value">A SpecificVolume.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SpecificVolume rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.Ceiling(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Returns a SpecificVolume rounded up to the nearest interval.
            </summary>
            <param name="value">A SpecificVolume.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A SpecificVolume rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_Equality(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Determines whether two SpecificVolumes are equal.
            </summary>
            <param name="l">Left SpecificVolume.</param>
            <param name="r">Right SpecificVolume.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_Inequality(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Determines whether two SpecificVolumes are not equal.
            </summary>
            <param name="l">Left SpecificVolume.</param>
            <param name="r">Right SpecificVolume.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_LessThan(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Determines if the left SpecificVolume is less than the right SpecificVolume.
            </summary>
            <param name="l">Left SpecificVolume.</param>
            <param name="r">Right SpecificVolume.</param>
            <returns>True if the left SpecificVolume is less than the right SpecificVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_LessThanOrEqual(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Determines if the left SpecificVolume is less than or equal to the right SpecificVolume.
            </summary>
            <param name="l">Left SpecificVolume.</param>
            <param name="r">Right SpecificVolume.</param>
            <returns>True if the left SpecificVolume is less than or equal to the right SpecificVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_GreaterThanOrEqual(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Determines if the left SpecificVolume is greater than or equal to the right SpecificVolume.
            </summary>
            <param name="l">Left SpecificVolume.</param>
            <param name="r">Right SpecificVolume.</param>
            <returns>True if the left SpecificVolume is greater than or equal to the right SpecificVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_GreaterThan(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Determines if the left SpecificVolume is greater than the right SpecificVolume.
            </summary>
            <param name="l">Left SpecificVolume.</param>
            <param name="r">Right SpecificVolume.</param>
            <returns>True if the left SpecificVolume is greater than the right SpecificVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_Addition(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Add two SpecificVolumes together.
            </summary>
            <param name="l">Left SpecificVolume.</param>
            <param name="r">Right SpecificVolume.</param>
            <returns>Sum of SpecificVolumes.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_UnaryNegation(Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Negate a SpecificVolume.
            </summary>
            <param name="l">Left SpecificVolume.</param>
            <returns>Negative SpecificVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_Subtraction(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Subtract two SpecificVolumes.
            </summary>
            <param name="l">Left SpecificVolume.</param>
            <param name="r">Right SpecificVolume.</param>
            <returns>Difference of SpecificVolumes.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_Multiply(Nalco.Numerics.SI.SpecificVolume,System.Double)">
            <summary>
            Multiply a SpecificVolume with a double.
            </summary>
            <param name="l">Left SpecificVolume.</param>
            <param name="r">Double value.</param>
            <returns>SpecificVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_Multiply(System.Double,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Multiply a SpecificVolume with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right SpecificVolume.</param>
            <returns>SpecificVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_Division(Nalco.Numerics.SI.SpecificVolume,System.Double)">
            <summary>
            Divide a SpecificVolume by a double.
            </summary>
            <param name="l">Left SpecificVolume.</param>
            <param name="r">Double value.</param>
            <returns>SpecificVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_Division(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Divide a SpecificVolume by another SpecificVolume.
            </summary>
            <param name="l">Left SpecificVolume.</param>
            <param name="r">Right SpecificVolume.</param>
            <returns>Ratio of the two SpecificVolumes.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_Modulus(Nalco.Numerics.SI.SpecificVolume,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Divide a SpecificVolume by another SpecificVolume and return the remainder.
            </summary>
            <param name="l">Left SpecificVolume.</param>
            <param name="r">Right SpecificVolume.</param>
            <returns>Remainder after a SpecificVolume is divided by a SpecificVolume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_Explicit(Nalco.Numerics.SI.SpecificVolume)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the SpecificVolume into a weakly typed Scalar.
            </summary>
            <param name="l">SpecificVolume.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.SpecificVolume.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.SpecificVolume">
            <summary>
            Explicitly convert the weakly typed Scalar into a SpecificVolume.
            </summary>
            <param name="s">Scalar.</param>
            <returns>SpecificVolume.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Force">
            <summary>
            Force (Newtons).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.Force.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Force.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Force.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.#ctor(System.Double)">
            <summary>
            Construct a new Force with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_Division(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Mass)">
            <summary>
            Divide a Force by a Mass.
            </summary>
            <param name="l">Left Force.</param>
            <param name="r">Right Mass.</param>
            <returns>Resulting Acceleration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_Division(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Divide a Force by an Acceleration.
            </summary>
            <param name="l">Left Force.</param>
            <param name="r">Right Acceleration.</param>
            <returns>Resulting Mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_Division(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Entropy)">
            <summary>
            Divide a Force by an Entropy.
            </summary>
            <param name="l">Left Force.</param>
            <param name="r">Right Entropy.</param>
            <returns>Resulting Temperature Lapse Rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_Division(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Divide a Force by a Temperature Lapse Rate.
            </summary>
            <param name="l">Left Force.</param>
            <param name="r">Right Temperature Lapse Rate.</param>
            <returns>Resulting Entropy.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.Force.Zero">
            <summary>
            Force of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.#ctor(System.Double,Nalco.Numerics.SI.Force.Subunit)">
            <summary>
            Construct a Force with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Force.Item(Nalco.Numerics.SI.Force.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Force.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.Abbreviation(Nalco.Numerics.SI.Force.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.Description(Nalco.Numerics.SI.Force.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Force.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.Parse(System.String)">
            <summary>
            Converts the string representation of a Force to a Force.
            </summary>
            <param name="s">A string that contains a Force to convert.</param>
            <returns>A Force.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Force to a Force.
            </summary>
            <param name="s">A string that contains a Force to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Force.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Force to a Force.
            </summary>
            <param name="s">A string that contains a Force to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Force.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Force.Subunit)">
            <summary>
            Converts the string representation of a Force to a Force.
            </summary>
            <param name="s">A string that contains a Force to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Force.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.TryParse(System.String,Nalco.Numerics.SI.Force@)">
            <summary>
            Converts the string representation of a Force to a Force. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Force to convert.</param>
            <param name="result">When this method returns, contains the Force, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Force@)">
            <summary>
            Converts the string representation of a Force to a Force. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Force to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Force, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Force@)">
            <summary>
            Converts the string representation of a Force to a Force. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Force to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Force, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Force.Subunit,Nalco.Numerics.SI.Force@)">
            <summary>
            Converts the string representation of a Force to a Force. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Force to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Force, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.CompareTo(System.Object)">
            <summary>
            Compares the current Force with another Force.
            </summary>
            <param name="obj">Force to compare with this Force.</param>
            <returns>Less than zero when this Force is less than the other parameter.
            Zero when this Force is equal to the other parameter.
            Greater than zero when this Force is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Force.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.CompareTo(Nalco.Numerics.SI.Force)">
            <summary>
            Compares the current Force with another Force.
            </summary>
            <param name="other">Force to compare with this Force.</param>
            <returns>Less than zero when this Force is less than the other parameter.
            Zero when this Force is equal to the other parameter.
            Greater than zero when this Force is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Force.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.Abs(Nalco.Numerics.SI.Force)">
            <summary>
            Returns the absolute value of a Force.
            </summary>
            <param name="value">A Force.</param>
            <returns>A Force that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.Round(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Force)">
            <summary>
            Returns a Force rounded to the nearest interval.
            </summary>
            <param name="value">A Force.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Force rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.Round(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Force,System.MidpointRounding)">
            <summary>
            Returns a Force rounded to the nearest interval.
            </summary>
            <param name="value">A Force.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Force rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.Floor(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Force)">
            <summary>
            Returns a Force rounded down to the nearest interval.
            </summary>
            <param name="value">A Force.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Force rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.Ceiling(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Force)">
            <summary>
            Returns a Force rounded up to the nearest interval.
            </summary>
            <param name="value">A Force.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Force rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_Equality(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Force)">
            <summary>
            Determines whether two Forces are equal.
            </summary>
            <param name="l">Left Force.</param>
            <param name="r">Right Force.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_Inequality(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Force)">
            <summary>
            Determines whether two Forces are not equal.
            </summary>
            <param name="l">Left Force.</param>
            <param name="r">Right Force.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_LessThan(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Force)">
            <summary>
            Determines if the left Force is less than the right Force.
            </summary>
            <param name="l">Left Force.</param>
            <param name="r">Right Force.</param>
            <returns>True if the left Force is less than the right Force.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_LessThanOrEqual(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Force)">
            <summary>
            Determines if the left Force is less than or equal to the right Force.
            </summary>
            <param name="l">Left Force.</param>
            <param name="r">Right Force.</param>
            <returns>True if the left Force is less than or equal to the right Force.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_GreaterThanOrEqual(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Force)">
            <summary>
            Determines if the left Force is greater than or equal to the right Force.
            </summary>
            <param name="l">Left Force.</param>
            <param name="r">Right Force.</param>
            <returns>True if the left Force is greater than or equal to the right Force.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_GreaterThan(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Force)">
            <summary>
            Determines if the left Force is greater than the right Force.
            </summary>
            <param name="l">Left Force.</param>
            <param name="r">Right Force.</param>
            <returns>True if the left Force is greater than the right Force.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_Addition(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Force)">
            <summary>
            Add two Forces together.
            </summary>
            <param name="l">Left Force.</param>
            <param name="r">Right Force.</param>
            <returns>Sum of Forces.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_UnaryNegation(Nalco.Numerics.SI.Force)">
            <summary>
            Negate a Force.
            </summary>
            <param name="l">Left Force.</param>
            <returns>Negative Force.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_Subtraction(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Force)">
            <summary>
            Subtract two Forces.
            </summary>
            <param name="l">Left Force.</param>
            <param name="r">Right Force.</param>
            <returns>Difference of Forces.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_Multiply(Nalco.Numerics.SI.Force,System.Double)">
            <summary>
            Multiply a Force with a double.
            </summary>
            <param name="l">Left Force.</param>
            <param name="r">Double value.</param>
            <returns>Force.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_Multiply(System.Double,Nalco.Numerics.SI.Force)">
            <summary>
            Multiply a Force with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Force.</param>
            <returns>Force.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_Division(Nalco.Numerics.SI.Force,System.Double)">
            <summary>
            Divide a Force by a double.
            </summary>
            <param name="l">Left Force.</param>
            <param name="r">Double value.</param>
            <returns>Force.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_Division(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Force)">
            <summary>
            Divide a Force by another Force.
            </summary>
            <param name="l">Left Force.</param>
            <param name="r">Right Force.</param>
            <returns>Ratio of the two Forces.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_Modulus(Nalco.Numerics.SI.Force,Nalco.Numerics.SI.Force)">
            <summary>
            Divide a Force by another Force and return the remainder.
            </summary>
            <param name="l">Left Force.</param>
            <param name="r">Right Force.</param>
            <returns>Remainder after a Force is divided by a Force.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_Explicit(Nalco.Numerics.SI.Force)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Force into a weakly typed Scalar.
            </summary>
            <param name="l">Force.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Force.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Force">
            <summary>
            Explicitly convert the weakly typed Scalar into a Force.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Force.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Entropy">
            <summary>
            Entropy (joules per kelvin).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.Entropy.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Entropy.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Entropy.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.#ctor(System.Double)">
            <summary>
            Construct a new Entropy with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Multiply(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Multiply an entropy by a temperature interval.
            </summary>
            <param name="l">Left entropy.</param>
            <param name="r">Right temperature interval.</param>
            <returns>Resulting energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Multiply(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Multiply an entropy by a temperature lapse rate.
            </summary>
            <param name="l">Left entropy.</param>
            <param name="r">Right temperature lapse rate.</param>
            <returns>Resulting energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Division(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.Mass)">
            <summary>
            Divide an entropy by a mass.
            </summary>
            <param name="l">Left entropy.</param>
            <param name="r">Right mass.</param>
            <returns>Resulting specific entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Division(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Divide an entropy by a specific entropy.
            </summary>
            <param name="l">Left entropy.</param>
            <param name="r">Right specific entropy.</param>
            <returns>Resulting mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Division(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.MolarHeatCapacity)">
            <summary>
            Divide an entropy by a molar heat capacity
            </summary>
            <param name="l">Left entropy.</param>
            <param name="r">Right molar heat capacity.</param>
            <returns>Resulting chemical amount.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Division(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.ChemicalAmount)">
            <summary>
            Divide an entropy by a chemical amount.
            </summary>
            <param name="l">Left entropy.</param>
            <param name="r">Right chemical amount.</param>
            <returns>Resulting molar heat capacity</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.Entropy.Zero">
            <summary>
            Entropy of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.#ctor(System.Double,Nalco.Numerics.SI.Entropy.Subunit)">
            <summary>
            Construct a Entropy with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Entropy.Item(Nalco.Numerics.SI.Entropy.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Entropy.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.Abbreviation(Nalco.Numerics.SI.Entropy.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.Description(Nalco.Numerics.SI.Entropy.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Entropy.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.Parse(System.String)">
            <summary>
            Converts the string representation of a Entropy to a Entropy.
            </summary>
            <param name="s">A string that contains a Entropy to convert.</param>
            <returns>A Entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Entropy to a Entropy.
            </summary>
            <param name="s">A string that contains a Entropy to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Entropy to a Entropy.
            </summary>
            <param name="s">A string that contains a Entropy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Entropy.Subunit)">
            <summary>
            Converts the string representation of a Entropy to a Entropy.
            </summary>
            <param name="s">A string that contains a Entropy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.TryParse(System.String,Nalco.Numerics.SI.Entropy@)">
            <summary>
            Converts the string representation of a Entropy to a Entropy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Entropy to convert.</param>
            <param name="result">When this method returns, contains the Entropy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Entropy@)">
            <summary>
            Converts the string representation of a Entropy to a Entropy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Entropy to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Entropy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Entropy@)">
            <summary>
            Converts the string representation of a Entropy to a Entropy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Entropy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Entropy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Entropy.Subunit,Nalco.Numerics.SI.Entropy@)">
            <summary>
            Converts the string representation of a Entropy to a Entropy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Entropy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Entropy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.CompareTo(System.Object)">
            <summary>
            Compares the current Entropy with another Entropy.
            </summary>
            <param name="obj">Entropy to compare with this Entropy.</param>
            <returns>Less than zero when this Entropy is less than the other parameter.
            Zero when this Entropy is equal to the other parameter.
            Greater than zero when this Entropy is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Entropy.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.CompareTo(Nalco.Numerics.SI.Entropy)">
            <summary>
            Compares the current Entropy with another Entropy.
            </summary>
            <param name="other">Entropy to compare with this Entropy.</param>
            <returns>Less than zero when this Entropy is less than the other parameter.
            Zero when this Entropy is equal to the other parameter.
            Greater than zero when this Entropy is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Entropy.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.Abs(Nalco.Numerics.SI.Entropy)">
            <summary>
            Returns the absolute value of a Entropy.
            </summary>
            <param name="value">A Entropy.</param>
            <returns>A Entropy that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.Round(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.Entropy)">
            <summary>
            Returns a Entropy rounded to the nearest interval.
            </summary>
            <param name="value">A Entropy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Entropy rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.Round(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.Entropy,System.MidpointRounding)">
            <summary>
            Returns a Entropy rounded to the nearest interval.
            </summary>
            <param name="value">A Entropy.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Entropy rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.Floor(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.Entropy)">
            <summary>
            Returns a Entropy rounded down to the nearest interval.
            </summary>
            <param name="value">A Entropy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Entropy rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.Ceiling(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.Entropy)">
            <summary>
            Returns a Entropy rounded up to the nearest interval.
            </summary>
            <param name="value">A Entropy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Entropy rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Equality(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.Entropy)">
            <summary>
            Determines whether two Entropys are equal.
            </summary>
            <param name="l">Left Entropy.</param>
            <param name="r">Right Entropy.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Inequality(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.Entropy)">
            <summary>
            Determines whether two Entropys are not equal.
            </summary>
            <param name="l">Left Entropy.</param>
            <param name="r">Right Entropy.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_LessThan(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.Entropy)">
            <summary>
            Determines if the left Entropy is less than the right Entropy.
            </summary>
            <param name="l">Left Entropy.</param>
            <param name="r">Right Entropy.</param>
            <returns>True if the left Entropy is less than the right Entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_LessThanOrEqual(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.Entropy)">
            <summary>
            Determines if the left Entropy is less than or equal to the right Entropy.
            </summary>
            <param name="l">Left Entropy.</param>
            <param name="r">Right Entropy.</param>
            <returns>True if the left Entropy is less than or equal to the right Entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_GreaterThanOrEqual(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.Entropy)">
            <summary>
            Determines if the left Entropy is greater than or equal to the right Entropy.
            </summary>
            <param name="l">Left Entropy.</param>
            <param name="r">Right Entropy.</param>
            <returns>True if the left Entropy is greater than or equal to the right Entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_GreaterThan(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.Entropy)">
            <summary>
            Determines if the left Entropy is greater than the right Entropy.
            </summary>
            <param name="l">Left Entropy.</param>
            <param name="r">Right Entropy.</param>
            <returns>True if the left Entropy is greater than the right Entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Addition(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.Entropy)">
            <summary>
            Add two Entropys together.
            </summary>
            <param name="l">Left Entropy.</param>
            <param name="r">Right Entropy.</param>
            <returns>Sum of Entropys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_UnaryNegation(Nalco.Numerics.SI.Entropy)">
            <summary>
            Negate a Entropy.
            </summary>
            <param name="l">Left Entropy.</param>
            <returns>Negative Entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Subtraction(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.Entropy)">
            <summary>
            Subtract two Entropys.
            </summary>
            <param name="l">Left Entropy.</param>
            <param name="r">Right Entropy.</param>
            <returns>Difference of Entropys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Multiply(Nalco.Numerics.SI.Entropy,System.Double)">
            <summary>
            Multiply a Entropy with a double.
            </summary>
            <param name="l">Left Entropy.</param>
            <param name="r">Double value.</param>
            <returns>Entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Multiply(System.Double,Nalco.Numerics.SI.Entropy)">
            <summary>
            Multiply a Entropy with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Entropy.</param>
            <returns>Entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Division(Nalco.Numerics.SI.Entropy,System.Double)">
            <summary>
            Divide a Entropy by a double.
            </summary>
            <param name="l">Left Entropy.</param>
            <param name="r">Double value.</param>
            <returns>Entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Division(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.Entropy)">
            <summary>
            Divide a Entropy by another Entropy.
            </summary>
            <param name="l">Left Entropy.</param>
            <param name="r">Right Entropy.</param>
            <returns>Ratio of the two Entropys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Modulus(Nalco.Numerics.SI.Entropy,Nalco.Numerics.SI.Entropy)">
            <summary>
            Divide a Entropy by another Entropy and return the remainder.
            </summary>
            <param name="l">Left Entropy.</param>
            <param name="r">Right Entropy.</param>
            <returns>Remainder after a Entropy is divided by a Entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Explicit(Nalco.Numerics.SI.Entropy)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Entropy into a weakly typed Scalar.
            </summary>
            <param name="l">Entropy.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Entropy.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Entropy">
            <summary>
            Explicitly convert the weakly typed Scalar into a Entropy.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Entropy.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.TemperatureLapseRate">
            <summary>
            Temperature lapse rate (kelvins per meter).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.TemperatureLapseRate.ISALapseRate">
            <summary>
            The International Standard Atmosphere lapse rate.
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.TemperatureLapseRate.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.TemperatureLapseRate.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.TemperatureLapseRate.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.#ctor(System.Double)">
            <summary>
            Construct a new TemperatureLapseRate with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_Multiply(Nalco.Numerics.SI.TemperatureLapseRate,Nalco.Numerics.SI.Length)">
            <summary>
            Multiply a temperature lapse rate by a distance.
            </summary>
            <param name="l">Left temperature lapse rate.</param>
            <param name="r">Right length.</param>
            <returns>Temperature interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_Multiply(Nalco.Numerics.SI.TemperatureLapseRate,Nalco.Numerics.SI.Entropy)">
            <summary>
            Multiply a temperature lapse rate by an entropy.
            </summary>
            <param name="l">Left temperature lapse rate.</param>
            <param name="r">Right entropy.</param>
            <returns>Temperature interval.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.TemperatureLapseRate.Zero">
            <summary>
            TemperatureLapseRate of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.#ctor(System.Double,Nalco.Numerics.SI.TemperatureLapseRate.Subunit)">
            <summary>
            Construct a TemperatureLapseRate with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.TemperatureLapseRate.Item(Nalco.Numerics.SI.TemperatureLapseRate.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.TemperatureLapseRate.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.Abbreviation(Nalco.Numerics.SI.TemperatureLapseRate.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.Description(Nalco.Numerics.SI.TemperatureLapseRate.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.TemperatureLapseRate.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.Parse(System.String)">
            <summary>
            Converts the string representation of a TemperatureLapseRate to a TemperatureLapseRate.
            </summary>
            <param name="s">A string that contains a TemperatureLapseRate to convert.</param>
            <returns>A TemperatureLapseRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a TemperatureLapseRate to a TemperatureLapseRate.
            </summary>
            <param name="s">A string that contains a TemperatureLapseRate to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A TemperatureLapseRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a TemperatureLapseRate to a TemperatureLapseRate.
            </summary>
            <param name="s">A string that contains a TemperatureLapseRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A TemperatureLapseRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.TemperatureLapseRate.Subunit)">
            <summary>
            Converts the string representation of a TemperatureLapseRate to a TemperatureLapseRate.
            </summary>
            <param name="s">A string that contains a TemperatureLapseRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A TemperatureLapseRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.TryParse(System.String,Nalco.Numerics.SI.TemperatureLapseRate@)">
            <summary>
            Converts the string representation of a TemperatureLapseRate to a TemperatureLapseRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a TemperatureLapseRate to convert.</param>
            <param name="result">When this method returns, contains the TemperatureLapseRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.TemperatureLapseRate@)">
            <summary>
            Converts the string representation of a TemperatureLapseRate to a TemperatureLapseRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a TemperatureLapseRate to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the TemperatureLapseRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.TemperatureLapseRate@)">
            <summary>
            Converts the string representation of a TemperatureLapseRate to a TemperatureLapseRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a TemperatureLapseRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the TemperatureLapseRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.TemperatureLapseRate.Subunit,Nalco.Numerics.SI.TemperatureLapseRate@)">
            <summary>
            Converts the string representation of a TemperatureLapseRate to a TemperatureLapseRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a TemperatureLapseRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the TemperatureLapseRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.CompareTo(System.Object)">
            <summary>
            Compares the current TemperatureLapseRate with another TemperatureLapseRate.
            </summary>
            <param name="obj">TemperatureLapseRate to compare with this TemperatureLapseRate.</param>
            <returns>Less than zero when this TemperatureLapseRate is less than the other parameter.
            Zero when this TemperatureLapseRate is equal to the other parameter.
            Greater than zero when this TemperatureLapseRate is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of TemperatureLapseRate.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.CompareTo(Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Compares the current TemperatureLapseRate with another TemperatureLapseRate.
            </summary>
            <param name="other">TemperatureLapseRate to compare with this TemperatureLapseRate.</param>
            <returns>Less than zero when this TemperatureLapseRate is less than the other parameter.
            Zero when this TemperatureLapseRate is equal to the other parameter.
            Greater than zero when this TemperatureLapseRate is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current TemperatureLapseRate.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.Abs(Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Returns the absolute value of a TemperatureLapseRate.
            </summary>
            <param name="value">A TemperatureLapseRate.</param>
            <returns>A TemperatureLapseRate that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.Round(Nalco.Numerics.SI.TemperatureLapseRate,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Returns a TemperatureLapseRate rounded to the nearest interval.
            </summary>
            <param name="value">A TemperatureLapseRate.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A TemperatureLapseRate rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.Round(Nalco.Numerics.SI.TemperatureLapseRate,Nalco.Numerics.SI.TemperatureLapseRate,System.MidpointRounding)">
            <summary>
            Returns a TemperatureLapseRate rounded to the nearest interval.
            </summary>
            <param name="value">A TemperatureLapseRate.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A TemperatureLapseRate rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.Floor(Nalco.Numerics.SI.TemperatureLapseRate,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Returns a TemperatureLapseRate rounded down to the nearest interval.
            </summary>
            <param name="value">A TemperatureLapseRate.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A TemperatureLapseRate rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.Ceiling(Nalco.Numerics.SI.TemperatureLapseRate,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Returns a TemperatureLapseRate rounded up to the nearest interval.
            </summary>
            <param name="value">A TemperatureLapseRate.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A TemperatureLapseRate rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_Equality(Nalco.Numerics.SI.TemperatureLapseRate,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Determines whether two TemperatureLapseRates are equal.
            </summary>
            <param name="l">Left TemperatureLapseRate.</param>
            <param name="r">Right TemperatureLapseRate.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_Inequality(Nalco.Numerics.SI.TemperatureLapseRate,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Determines whether two TemperatureLapseRates are not equal.
            </summary>
            <param name="l">Left TemperatureLapseRate.</param>
            <param name="r">Right TemperatureLapseRate.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_LessThan(Nalco.Numerics.SI.TemperatureLapseRate,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Determines if the left TemperatureLapseRate is less than the right TemperatureLapseRate.
            </summary>
            <param name="l">Left TemperatureLapseRate.</param>
            <param name="r">Right TemperatureLapseRate.</param>
            <returns>True if the left TemperatureLapseRate is less than the right TemperatureLapseRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_LessThanOrEqual(Nalco.Numerics.SI.TemperatureLapseRate,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Determines if the left TemperatureLapseRate is less than or equal to the right TemperatureLapseRate.
            </summary>
            <param name="l">Left TemperatureLapseRate.</param>
            <param name="r">Right TemperatureLapseRate.</param>
            <returns>True if the left TemperatureLapseRate is less than or equal to the right TemperatureLapseRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_GreaterThanOrEqual(Nalco.Numerics.SI.TemperatureLapseRate,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Determines if the left TemperatureLapseRate is greater than or equal to the right TemperatureLapseRate.
            </summary>
            <param name="l">Left TemperatureLapseRate.</param>
            <param name="r">Right TemperatureLapseRate.</param>
            <returns>True if the left TemperatureLapseRate is greater than or equal to the right TemperatureLapseRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_GreaterThan(Nalco.Numerics.SI.TemperatureLapseRate,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Determines if the left TemperatureLapseRate is greater than the right TemperatureLapseRate.
            </summary>
            <param name="l">Left TemperatureLapseRate.</param>
            <param name="r">Right TemperatureLapseRate.</param>
            <returns>True if the left TemperatureLapseRate is greater than the right TemperatureLapseRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_Addition(Nalco.Numerics.SI.TemperatureLapseRate,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Add two TemperatureLapseRates together.
            </summary>
            <param name="l">Left TemperatureLapseRate.</param>
            <param name="r">Right TemperatureLapseRate.</param>
            <returns>Sum of TemperatureLapseRates.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_UnaryNegation(Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Negate a TemperatureLapseRate.
            </summary>
            <param name="l">Left TemperatureLapseRate.</param>
            <returns>Negative TemperatureLapseRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_Subtraction(Nalco.Numerics.SI.TemperatureLapseRate,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Subtract two TemperatureLapseRates.
            </summary>
            <param name="l">Left TemperatureLapseRate.</param>
            <param name="r">Right TemperatureLapseRate.</param>
            <returns>Difference of TemperatureLapseRates.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_Multiply(Nalco.Numerics.SI.TemperatureLapseRate,System.Double)">
            <summary>
            Multiply a TemperatureLapseRate with a double.
            </summary>
            <param name="l">Left TemperatureLapseRate.</param>
            <param name="r">Double value.</param>
            <returns>TemperatureLapseRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_Multiply(System.Double,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Multiply a TemperatureLapseRate with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right TemperatureLapseRate.</param>
            <returns>TemperatureLapseRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_Division(Nalco.Numerics.SI.TemperatureLapseRate,System.Double)">
            <summary>
            Divide a TemperatureLapseRate by a double.
            </summary>
            <param name="l">Left TemperatureLapseRate.</param>
            <param name="r">Double value.</param>
            <returns>TemperatureLapseRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_Division(Nalco.Numerics.SI.TemperatureLapseRate,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Divide a TemperatureLapseRate by another TemperatureLapseRate.
            </summary>
            <param name="l">Left TemperatureLapseRate.</param>
            <param name="r">Right TemperatureLapseRate.</param>
            <returns>Ratio of the two TemperatureLapseRates.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_Modulus(Nalco.Numerics.SI.TemperatureLapseRate,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Divide a TemperatureLapseRate by another TemperatureLapseRate and return the remainder.
            </summary>
            <param name="l">Left TemperatureLapseRate.</param>
            <param name="r">Right TemperatureLapseRate.</param>
            <returns>Remainder after a TemperatureLapseRate is divided by a TemperatureLapseRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_Explicit(Nalco.Numerics.SI.TemperatureLapseRate)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the TemperatureLapseRate into a weakly typed Scalar.
            </summary>
            <param name="l">TemperatureLapseRate.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureLapseRate.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.TemperatureLapseRate">
            <summary>
            Explicitly convert the weakly typed Scalar into a TemperatureLapseRate.
            </summary>
            <param name="s">Scalar.</param>
            <returns>TemperatureLapseRate.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Velocity">
            <summary>
            Velocity (meters per second).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.Velocity.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Velocity.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Velocity.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.#ctor(System.Double)">
            <summary>
            Construct a new TypedScalarTemplate with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_Multiply(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Time)">
            <summary>
            Multiply a velocity by a time.
            </summary>
            <param name="l">Left velocity.</param>
            <param name="r">Right time.</param>
            <returns>Resulting length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_Division(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Time)">
            <summary>
            Divide a velocity by a time.
            </summary>
            <param name="l">Left velocity.</param>
            <param name="r">Right time.</param>
            <returns>Resulting acceleration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_Division(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Divide a velocity by an acceleration.
            </summary>
            <param name="l">Left velocity.</param>
            <param name="r">Right acceleration.</param>
            <returns>Resulting time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_Explicit(Nalco.Numerics.SI.SpecificEnthalpy)~Nalco.Numerics.SI.Velocity">
            <summary>
            Implicitly convert the specific enthalpy into a velocity.
            </summary>
            <param name="l">Specific enthalpy.</param>
            <returns>Velocity.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.Velocity.Zero">
            <summary>
            Velocity of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.#ctor(System.Double,Nalco.Numerics.SI.Velocity.Subunit)">
            <summary>
            Construct a Velocity with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Velocity.Item(Nalco.Numerics.SI.Velocity.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Velocity.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.Abbreviation(Nalco.Numerics.SI.Velocity.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.Description(Nalco.Numerics.SI.Velocity.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Velocity.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.Parse(System.String)">
            <summary>
            Converts the string representation of a Velocity to a Velocity.
            </summary>
            <param name="s">A string that contains a Velocity to convert.</param>
            <returns>A Velocity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Velocity to a Velocity.
            </summary>
            <param name="s">A string that contains a Velocity to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Velocity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Velocity to a Velocity.
            </summary>
            <param name="s">A string that contains a Velocity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Velocity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Velocity.Subunit)">
            <summary>
            Converts the string representation of a Velocity to a Velocity.
            </summary>
            <param name="s">A string that contains a Velocity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Velocity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.TryParse(System.String,Nalco.Numerics.SI.Velocity@)">
            <summary>
            Converts the string representation of a Velocity to a Velocity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Velocity to convert.</param>
            <param name="result">When this method returns, contains the Velocity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Velocity@)">
            <summary>
            Converts the string representation of a Velocity to a Velocity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Velocity to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Velocity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Velocity@)">
            <summary>
            Converts the string representation of a Velocity to a Velocity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Velocity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Velocity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Velocity.Subunit,Nalco.Numerics.SI.Velocity@)">
            <summary>
            Converts the string representation of a Velocity to a Velocity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Velocity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Velocity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.CompareTo(System.Object)">
            <summary>
            Compares the current Velocity with another Velocity.
            </summary>
            <param name="obj">Velocity to compare with this Velocity.</param>
            <returns>Less than zero when this Velocity is less than the other parameter.
            Zero when this Velocity is equal to the other parameter.
            Greater than zero when this Velocity is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Velocity.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.CompareTo(Nalco.Numerics.SI.Velocity)">
            <summary>
            Compares the current Velocity with another Velocity.
            </summary>
            <param name="other">Velocity to compare with this Velocity.</param>
            <returns>Less than zero when this Velocity is less than the other parameter.
            Zero when this Velocity is equal to the other parameter.
            Greater than zero when this Velocity is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Velocity.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.Abs(Nalco.Numerics.SI.Velocity)">
            <summary>
            Returns the absolute value of a Velocity.
            </summary>
            <param name="value">A Velocity.</param>
            <returns>A Velocity that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.Round(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Velocity)">
            <summary>
            Returns a Velocity rounded to the nearest interval.
            </summary>
            <param name="value">A Velocity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Velocity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.Round(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Velocity,System.MidpointRounding)">
            <summary>
            Returns a Velocity rounded to the nearest interval.
            </summary>
            <param name="value">A Velocity.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Velocity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.Floor(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Velocity)">
            <summary>
            Returns a Velocity rounded down to the nearest interval.
            </summary>
            <param name="value">A Velocity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Velocity rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.Ceiling(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Velocity)">
            <summary>
            Returns a Velocity rounded up to the nearest interval.
            </summary>
            <param name="value">A Velocity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Velocity rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_Equality(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Velocity)">
            <summary>
            Determines whether two Velocitys are equal.
            </summary>
            <param name="l">Left Velocity.</param>
            <param name="r">Right Velocity.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_Inequality(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Velocity)">
            <summary>
            Determines whether two Velocitys are not equal.
            </summary>
            <param name="l">Left Velocity.</param>
            <param name="r">Right Velocity.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_LessThan(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Velocity)">
            <summary>
            Determines if the left Velocity is less than the right Velocity.
            </summary>
            <param name="l">Left Velocity.</param>
            <param name="r">Right Velocity.</param>
            <returns>True if the left Velocity is less than the right Velocity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_LessThanOrEqual(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Velocity)">
            <summary>
            Determines if the left Velocity is less than or equal to the right Velocity.
            </summary>
            <param name="l">Left Velocity.</param>
            <param name="r">Right Velocity.</param>
            <returns>True if the left Velocity is less than or equal to the right Velocity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_GreaterThanOrEqual(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Velocity)">
            <summary>
            Determines if the left Velocity is greater than or equal to the right Velocity.
            </summary>
            <param name="l">Left Velocity.</param>
            <param name="r">Right Velocity.</param>
            <returns>True if the left Velocity is greater than or equal to the right Velocity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_GreaterThan(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Velocity)">
            <summary>
            Determines if the left Velocity is greater than the right Velocity.
            </summary>
            <param name="l">Left Velocity.</param>
            <param name="r">Right Velocity.</param>
            <returns>True if the left Velocity is greater than the right Velocity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_Addition(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Velocity)">
            <summary>
            Add two Velocitys together.
            </summary>
            <param name="l">Left Velocity.</param>
            <param name="r">Right Velocity.</param>
            <returns>Sum of Velocitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_UnaryNegation(Nalco.Numerics.SI.Velocity)">
            <summary>
            Negate a Velocity.
            </summary>
            <param name="l">Left Velocity.</param>
            <returns>Negative Velocity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_Subtraction(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Velocity)">
            <summary>
            Subtract two Velocitys.
            </summary>
            <param name="l">Left Velocity.</param>
            <param name="r">Right Velocity.</param>
            <returns>Difference of Velocitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_Multiply(Nalco.Numerics.SI.Velocity,System.Double)">
            <summary>
            Multiply a Velocity with a double.
            </summary>
            <param name="l">Left Velocity.</param>
            <param name="r">Double value.</param>
            <returns>Velocity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_Multiply(System.Double,Nalco.Numerics.SI.Velocity)">
            <summary>
            Multiply a Velocity with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Velocity.</param>
            <returns>Velocity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_Division(Nalco.Numerics.SI.Velocity,System.Double)">
            <summary>
            Divide a Velocity by a double.
            </summary>
            <param name="l">Left Velocity.</param>
            <param name="r">Double value.</param>
            <returns>Velocity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_Division(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Velocity)">
            <summary>
            Divide a Velocity by another Velocity.
            </summary>
            <param name="l">Left Velocity.</param>
            <param name="r">Right Velocity.</param>
            <returns>Ratio of the two Velocitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_Modulus(Nalco.Numerics.SI.Velocity,Nalco.Numerics.SI.Velocity)">
            <summary>
            Divide a Velocity by another Velocity and return the remainder.
            </summary>
            <param name="l">Left Velocity.</param>
            <param name="r">Right Velocity.</param>
            <returns>Remainder after a Velocity is divided by a Velocity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_Explicit(Nalco.Numerics.SI.Velocity)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Velocity into a weakly typed Scalar.
            </summary>
            <param name="l">Velocity.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Velocity.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Velocity">
            <summary>
            Explicitly convert the weakly typed Scalar into a Velocity.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Velocity.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.HeatDensity">
            <summary>
            Heat density (joules per square meter).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.HeatDensity.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.HeatDensity.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.HeatDensity.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.#ctor(System.Double)">
            <summary>
            Construct a new TypedScalarTemplate with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_Multiply(Nalco.Numerics.SI.HeatDensity,Nalco.Numerics.SI.Area)">
            <summary>
            Multiply a heat density by an area.
            </summary>
            <param name="l">Left heat density.</param>
            <param name="r">Right area.</param>
            <returns>Resulting energy.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.HeatDensity.Zero">
            <summary>
            HeatDensity of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.#ctor(System.Double,Nalco.Numerics.SI.HeatDensity.Subunit)">
            <summary>
            Construct a HeatDensity with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.HeatDensity.Item(Nalco.Numerics.SI.HeatDensity.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.HeatDensity.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.Abbreviation(Nalco.Numerics.SI.HeatDensity.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.Description(Nalco.Numerics.SI.HeatDensity.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.HeatDensity.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.Parse(System.String)">
            <summary>
            Converts the string representation of a HeatDensity to a HeatDensity.
            </summary>
            <param name="s">A string that contains a HeatDensity to convert.</param>
            <returns>A HeatDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a HeatDensity to a HeatDensity.
            </summary>
            <param name="s">A string that contains a HeatDensity to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A HeatDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a HeatDensity to a HeatDensity.
            </summary>
            <param name="s">A string that contains a HeatDensity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A HeatDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.HeatDensity.Subunit)">
            <summary>
            Converts the string representation of a HeatDensity to a HeatDensity.
            </summary>
            <param name="s">A string that contains a HeatDensity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A HeatDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.TryParse(System.String,Nalco.Numerics.SI.HeatDensity@)">
            <summary>
            Converts the string representation of a HeatDensity to a HeatDensity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a HeatDensity to convert.</param>
            <param name="result">When this method returns, contains the HeatDensity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.HeatDensity@)">
            <summary>
            Converts the string representation of a HeatDensity to a HeatDensity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a HeatDensity to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the HeatDensity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.HeatDensity@)">
            <summary>
            Converts the string representation of a HeatDensity to a HeatDensity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a HeatDensity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the HeatDensity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.HeatDensity.Subunit,Nalco.Numerics.SI.HeatDensity@)">
            <summary>
            Converts the string representation of a HeatDensity to a HeatDensity. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a HeatDensity to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the HeatDensity, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.CompareTo(System.Object)">
            <summary>
            Compares the current HeatDensity with another HeatDensity.
            </summary>
            <param name="obj">HeatDensity to compare with this HeatDensity.</param>
            <returns>Less than zero when this HeatDensity is less than the other parameter.
            Zero when this HeatDensity is equal to the other parameter.
            Greater than zero when this HeatDensity is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of HeatDensity.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.CompareTo(Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Compares the current HeatDensity with another HeatDensity.
            </summary>
            <param name="other">HeatDensity to compare with this HeatDensity.</param>
            <returns>Less than zero when this HeatDensity is less than the other parameter.
            Zero when this HeatDensity is equal to the other parameter.
            Greater than zero when this HeatDensity is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current HeatDensity.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.Abs(Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Returns the absolute value of a HeatDensity.
            </summary>
            <param name="value">A HeatDensity.</param>
            <returns>A HeatDensity that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.Round(Nalco.Numerics.SI.HeatDensity,Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Returns a HeatDensity rounded to the nearest interval.
            </summary>
            <param name="value">A HeatDensity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A HeatDensity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.Round(Nalco.Numerics.SI.HeatDensity,Nalco.Numerics.SI.HeatDensity,System.MidpointRounding)">
            <summary>
            Returns a HeatDensity rounded to the nearest interval.
            </summary>
            <param name="value">A HeatDensity.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A HeatDensity rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.Floor(Nalco.Numerics.SI.HeatDensity,Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Returns a HeatDensity rounded down to the nearest interval.
            </summary>
            <param name="value">A HeatDensity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A HeatDensity rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.Ceiling(Nalco.Numerics.SI.HeatDensity,Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Returns a HeatDensity rounded up to the nearest interval.
            </summary>
            <param name="value">A HeatDensity.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A HeatDensity rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_Equality(Nalco.Numerics.SI.HeatDensity,Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Determines whether two HeatDensitys are equal.
            </summary>
            <param name="l">Left HeatDensity.</param>
            <param name="r">Right HeatDensity.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_Inequality(Nalco.Numerics.SI.HeatDensity,Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Determines whether two HeatDensitys are not equal.
            </summary>
            <param name="l">Left HeatDensity.</param>
            <param name="r">Right HeatDensity.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_LessThan(Nalco.Numerics.SI.HeatDensity,Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Determines if the left HeatDensity is less than the right HeatDensity.
            </summary>
            <param name="l">Left HeatDensity.</param>
            <param name="r">Right HeatDensity.</param>
            <returns>True if the left HeatDensity is less than the right HeatDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_LessThanOrEqual(Nalco.Numerics.SI.HeatDensity,Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Determines if the left HeatDensity is less than or equal to the right HeatDensity.
            </summary>
            <param name="l">Left HeatDensity.</param>
            <param name="r">Right HeatDensity.</param>
            <returns>True if the left HeatDensity is less than or equal to the right HeatDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_GreaterThanOrEqual(Nalco.Numerics.SI.HeatDensity,Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Determines if the left HeatDensity is greater than or equal to the right HeatDensity.
            </summary>
            <param name="l">Left HeatDensity.</param>
            <param name="r">Right HeatDensity.</param>
            <returns>True if the left HeatDensity is greater than or equal to the right HeatDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_GreaterThan(Nalco.Numerics.SI.HeatDensity,Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Determines if the left HeatDensity is greater than the right HeatDensity.
            </summary>
            <param name="l">Left HeatDensity.</param>
            <param name="r">Right HeatDensity.</param>
            <returns>True if the left HeatDensity is greater than the right HeatDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_Addition(Nalco.Numerics.SI.HeatDensity,Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Add two HeatDensitys together.
            </summary>
            <param name="l">Left HeatDensity.</param>
            <param name="r">Right HeatDensity.</param>
            <returns>Sum of HeatDensitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_UnaryNegation(Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Negate a HeatDensity.
            </summary>
            <param name="l">Left HeatDensity.</param>
            <returns>Negative HeatDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_Subtraction(Nalco.Numerics.SI.HeatDensity,Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Subtract two HeatDensitys.
            </summary>
            <param name="l">Left HeatDensity.</param>
            <param name="r">Right HeatDensity.</param>
            <returns>Difference of HeatDensitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_Multiply(Nalco.Numerics.SI.HeatDensity,System.Double)">
            <summary>
            Multiply a HeatDensity with a double.
            </summary>
            <param name="l">Left HeatDensity.</param>
            <param name="r">Double value.</param>
            <returns>HeatDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_Multiply(System.Double,Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Multiply a HeatDensity with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right HeatDensity.</param>
            <returns>HeatDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_Division(Nalco.Numerics.SI.HeatDensity,System.Double)">
            <summary>
            Divide a HeatDensity by a double.
            </summary>
            <param name="l">Left HeatDensity.</param>
            <param name="r">Double value.</param>
            <returns>HeatDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_Division(Nalco.Numerics.SI.HeatDensity,Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Divide a HeatDensity by another HeatDensity.
            </summary>
            <param name="l">Left HeatDensity.</param>
            <param name="r">Right HeatDensity.</param>
            <returns>Ratio of the two HeatDensitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_Modulus(Nalco.Numerics.SI.HeatDensity,Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Divide a HeatDensity by another HeatDensity and return the remainder.
            </summary>
            <param name="l">Left HeatDensity.</param>
            <param name="r">Right HeatDensity.</param>
            <returns>Remainder after a HeatDensity is divided by a HeatDensity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_Explicit(Nalco.Numerics.SI.HeatDensity)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the HeatDensity into a weakly typed Scalar.
            </summary>
            <param name="l">HeatDensity.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.HeatDensity.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.HeatDensity">
            <summary>
            Explicitly convert the weakly typed Scalar into a HeatDensity.
            </summary>
            <param name="s">Scalar.</param>
            <returns>HeatDensity.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.ElectricPotentialDifference">
            <summary>
            Electric potential difference (volts).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.ElectricPotentialDifference.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ElectricPotentialDifference.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ElectricPotentialDifference.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.#ctor(System.Double)">
            <summary>
            Construct a new ElectricPotentialDifference with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_Multiply(Nalco.Numerics.SI.ElectricPotentialDifference,Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Multiply an electric potential difference by an electric current.
            </summary>
            <param name="l">Left electric potential difference.</param>
            <param name="r">Right electric current.</param>
            <returns>Power formed.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.ElectricPotentialDifference.Zero">
            <summary>
            ElectricPotentialDifference of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.#ctor(System.Double,Nalco.Numerics.SI.ElectricPotentialDifference.Subunit)">
            <summary>
            Construct a ElectricPotentialDifference with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.ElectricPotentialDifference.Item(Nalco.Numerics.SI.ElectricPotentialDifference.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.ElectricPotentialDifference.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.Abbreviation(Nalco.Numerics.SI.ElectricPotentialDifference.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.Description(Nalco.Numerics.SI.ElectricPotentialDifference.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.ElectricPotentialDifference.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.Parse(System.String)">
            <summary>
            Converts the string representation of a ElectricPotentialDifference to a ElectricPotentialDifference.
            </summary>
            <param name="s">A string that contains a ElectricPotentialDifference to convert.</param>
            <returns>A ElectricPotentialDifference.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ElectricPotentialDifference to a ElectricPotentialDifference.
            </summary>
            <param name="s">A string that contains a ElectricPotentialDifference to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A ElectricPotentialDifference.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ElectricPotentialDifference to a ElectricPotentialDifference.
            </summary>
            <param name="s">A string that contains a ElectricPotentialDifference to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A ElectricPotentialDifference.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ElectricPotentialDifference.Subunit)">
            <summary>
            Converts the string representation of a ElectricPotentialDifference to a ElectricPotentialDifference.
            </summary>
            <param name="s">A string that contains a ElectricPotentialDifference to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A ElectricPotentialDifference.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.TryParse(System.String,Nalco.Numerics.SI.ElectricPotentialDifference@)">
            <summary>
            Converts the string representation of a ElectricPotentialDifference to a ElectricPotentialDifference. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ElectricPotentialDifference to convert.</param>
            <param name="result">When this method returns, contains the ElectricPotentialDifference, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.ElectricPotentialDifference@)">
            <summary>
            Converts the string representation of a ElectricPotentialDifference to a ElectricPotentialDifference. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ElectricPotentialDifference to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ElectricPotentialDifference, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ElectricPotentialDifference@)">
            <summary>
            Converts the string representation of a ElectricPotentialDifference to a ElectricPotentialDifference. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ElectricPotentialDifference to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ElectricPotentialDifference, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ElectricPotentialDifference.Subunit,Nalco.Numerics.SI.ElectricPotentialDifference@)">
            <summary>
            Converts the string representation of a ElectricPotentialDifference to a ElectricPotentialDifference. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ElectricPotentialDifference to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the ElectricPotentialDifference, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.CompareTo(System.Object)">
            <summary>
            Compares the current ElectricPotentialDifference with another ElectricPotentialDifference.
            </summary>
            <param name="obj">ElectricPotentialDifference to compare with this ElectricPotentialDifference.</param>
            <returns>Less than zero when this ElectricPotentialDifference is less than the other parameter.
            Zero when this ElectricPotentialDifference is equal to the other parameter.
            Greater than zero when this ElectricPotentialDifference is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of ElectricPotentialDifference.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.CompareTo(Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Compares the current ElectricPotentialDifference with another ElectricPotentialDifference.
            </summary>
            <param name="other">ElectricPotentialDifference to compare with this ElectricPotentialDifference.</param>
            <returns>Less than zero when this ElectricPotentialDifference is less than the other parameter.
            Zero when this ElectricPotentialDifference is equal to the other parameter.
            Greater than zero when this ElectricPotentialDifference is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current ElectricPotentialDifference.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.Abs(Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Returns the absolute value of a ElectricPotentialDifference.
            </summary>
            <param name="value">A ElectricPotentialDifference.</param>
            <returns>A ElectricPotentialDifference that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.Round(Nalco.Numerics.SI.ElectricPotentialDifference,Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Returns a ElectricPotentialDifference rounded to the nearest interval.
            </summary>
            <param name="value">A ElectricPotentialDifference.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ElectricPotentialDifference rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.Round(Nalco.Numerics.SI.ElectricPotentialDifference,Nalco.Numerics.SI.ElectricPotentialDifference,System.MidpointRounding)">
            <summary>
            Returns a ElectricPotentialDifference rounded to the nearest interval.
            </summary>
            <param name="value">A ElectricPotentialDifference.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A ElectricPotentialDifference rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.Floor(Nalco.Numerics.SI.ElectricPotentialDifference,Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Returns a ElectricPotentialDifference rounded down to the nearest interval.
            </summary>
            <param name="value">A ElectricPotentialDifference.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ElectricPotentialDifference rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.Ceiling(Nalco.Numerics.SI.ElectricPotentialDifference,Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Returns a ElectricPotentialDifference rounded up to the nearest interval.
            </summary>
            <param name="value">A ElectricPotentialDifference.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ElectricPotentialDifference rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_Equality(Nalco.Numerics.SI.ElectricPotentialDifference,Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Determines whether two ElectricPotentialDifferences are equal.
            </summary>
            <param name="l">Left ElectricPotentialDifference.</param>
            <param name="r">Right ElectricPotentialDifference.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_Inequality(Nalco.Numerics.SI.ElectricPotentialDifference,Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Determines whether two ElectricPotentialDifferences are not equal.
            </summary>
            <param name="l">Left ElectricPotentialDifference.</param>
            <param name="r">Right ElectricPotentialDifference.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_LessThan(Nalco.Numerics.SI.ElectricPotentialDifference,Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Determines if the left ElectricPotentialDifference is less than the right ElectricPotentialDifference.
            </summary>
            <param name="l">Left ElectricPotentialDifference.</param>
            <param name="r">Right ElectricPotentialDifference.</param>
            <returns>True if the left ElectricPotentialDifference is less than the right ElectricPotentialDifference.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_LessThanOrEqual(Nalco.Numerics.SI.ElectricPotentialDifference,Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Determines if the left ElectricPotentialDifference is less than or equal to the right ElectricPotentialDifference.
            </summary>
            <param name="l">Left ElectricPotentialDifference.</param>
            <param name="r">Right ElectricPotentialDifference.</param>
            <returns>True if the left ElectricPotentialDifference is less than or equal to the right ElectricPotentialDifference.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_GreaterThanOrEqual(Nalco.Numerics.SI.ElectricPotentialDifference,Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Determines if the left ElectricPotentialDifference is greater than or equal to the right ElectricPotentialDifference.
            </summary>
            <param name="l">Left ElectricPotentialDifference.</param>
            <param name="r">Right ElectricPotentialDifference.</param>
            <returns>True if the left ElectricPotentialDifference is greater than or equal to the right ElectricPotentialDifference.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_GreaterThan(Nalco.Numerics.SI.ElectricPotentialDifference,Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Determines if the left ElectricPotentialDifference is greater than the right ElectricPotentialDifference.
            </summary>
            <param name="l">Left ElectricPotentialDifference.</param>
            <param name="r">Right ElectricPotentialDifference.</param>
            <returns>True if the left ElectricPotentialDifference is greater than the right ElectricPotentialDifference.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_Addition(Nalco.Numerics.SI.ElectricPotentialDifference,Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Add two ElectricPotentialDifferences together.
            </summary>
            <param name="l">Left ElectricPotentialDifference.</param>
            <param name="r">Right ElectricPotentialDifference.</param>
            <returns>Sum of ElectricPotentialDifferences.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_UnaryNegation(Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Negate a ElectricPotentialDifference.
            </summary>
            <param name="l">Left ElectricPotentialDifference.</param>
            <returns>Negative ElectricPotentialDifference.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_Subtraction(Nalco.Numerics.SI.ElectricPotentialDifference,Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Subtract two ElectricPotentialDifferences.
            </summary>
            <param name="l">Left ElectricPotentialDifference.</param>
            <param name="r">Right ElectricPotentialDifference.</param>
            <returns>Difference of ElectricPotentialDifferences.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_Multiply(Nalco.Numerics.SI.ElectricPotentialDifference,System.Double)">
            <summary>
            Multiply a ElectricPotentialDifference with a double.
            </summary>
            <param name="l">Left ElectricPotentialDifference.</param>
            <param name="r">Double value.</param>
            <returns>ElectricPotentialDifference.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_Multiply(System.Double,Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Multiply a ElectricPotentialDifference with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right ElectricPotentialDifference.</param>
            <returns>ElectricPotentialDifference.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_Division(Nalco.Numerics.SI.ElectricPotentialDifference,System.Double)">
            <summary>
            Divide a ElectricPotentialDifference by a double.
            </summary>
            <param name="l">Left ElectricPotentialDifference.</param>
            <param name="r">Double value.</param>
            <returns>ElectricPotentialDifference.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_Division(Nalco.Numerics.SI.ElectricPotentialDifference,Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Divide a ElectricPotentialDifference by another ElectricPotentialDifference.
            </summary>
            <param name="l">Left ElectricPotentialDifference.</param>
            <param name="r">Right ElectricPotentialDifference.</param>
            <returns>Ratio of the two ElectricPotentialDifferences.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_Modulus(Nalco.Numerics.SI.ElectricPotentialDifference,Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Divide a ElectricPotentialDifference by another ElectricPotentialDifference and return the remainder.
            </summary>
            <param name="l">Left ElectricPotentialDifference.</param>
            <param name="r">Right ElectricPotentialDifference.</param>
            <returns>Remainder after a ElectricPotentialDifference is divided by a ElectricPotentialDifference.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_Explicit(Nalco.Numerics.SI.ElectricPotentialDifference)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the ElectricPotentialDifference into a weakly typed Scalar.
            </summary>
            <param name="l">ElectricPotentialDifference.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricPotentialDifference.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.ElectricPotentialDifference">
            <summary>
            Explicitly convert the weakly typed Scalar into a ElectricPotentialDifference.
            </summary>
            <param name="s">Scalar.</param>
            <returns>ElectricPotentialDifference.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.ElectricCurrent">
            <summary>
            Electric current (amperes).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.ElectricCurrent.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ElectricCurrent.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.ElectricCurrent.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.#ctor(System.Double)">
            <summary>
            Construct a new ElectricCurrent with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_Multiply(Nalco.Numerics.SI.ElectricCurrent,Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Multiply an electric potential difference by an electric current.
            </summary>
            <param name="l">Left electric current.</param>
            <param name="r">Right electric potential difference.</param>
            <returns>Power formed.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.ElectricCurrent.Zero">
            <summary>
            ElectricCurrent of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.#ctor(System.Double,Nalco.Numerics.SI.ElectricCurrent.Subunit)">
            <summary>
            Construct a ElectricCurrent with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.ElectricCurrent.Item(Nalco.Numerics.SI.ElectricCurrent.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.ElectricCurrent.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.Abbreviation(Nalco.Numerics.SI.ElectricCurrent.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.Description(Nalco.Numerics.SI.ElectricCurrent.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.ElectricCurrent.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.Parse(System.String)">
            <summary>
            Converts the string representation of a ElectricCurrent to a ElectricCurrent.
            </summary>
            <param name="s">A string that contains a ElectricCurrent to convert.</param>
            <returns>A ElectricCurrent.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ElectricCurrent to a ElectricCurrent.
            </summary>
            <param name="s">A string that contains a ElectricCurrent to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A ElectricCurrent.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a ElectricCurrent to a ElectricCurrent.
            </summary>
            <param name="s">A string that contains a ElectricCurrent to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A ElectricCurrent.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ElectricCurrent.Subunit)">
            <summary>
            Converts the string representation of a ElectricCurrent to a ElectricCurrent.
            </summary>
            <param name="s">A string that contains a ElectricCurrent to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A ElectricCurrent.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.TryParse(System.String,Nalco.Numerics.SI.ElectricCurrent@)">
            <summary>
            Converts the string representation of a ElectricCurrent to a ElectricCurrent. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ElectricCurrent to convert.</param>
            <param name="result">When this method returns, contains the ElectricCurrent, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.ElectricCurrent@)">
            <summary>
            Converts the string representation of a ElectricCurrent to a ElectricCurrent. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ElectricCurrent to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ElectricCurrent, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ElectricCurrent@)">
            <summary>
            Converts the string representation of a ElectricCurrent to a ElectricCurrent. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ElectricCurrent to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the ElectricCurrent, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.ElectricCurrent.Subunit,Nalco.Numerics.SI.ElectricCurrent@)">
            <summary>
            Converts the string representation of a ElectricCurrent to a ElectricCurrent. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a ElectricCurrent to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the ElectricCurrent, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.CompareTo(System.Object)">
            <summary>
            Compares the current ElectricCurrent with another ElectricCurrent.
            </summary>
            <param name="obj">ElectricCurrent to compare with this ElectricCurrent.</param>
            <returns>Less than zero when this ElectricCurrent is less than the other parameter.
            Zero when this ElectricCurrent is equal to the other parameter.
            Greater than zero when this ElectricCurrent is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of ElectricCurrent.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.CompareTo(Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Compares the current ElectricCurrent with another ElectricCurrent.
            </summary>
            <param name="other">ElectricCurrent to compare with this ElectricCurrent.</param>
            <returns>Less than zero when this ElectricCurrent is less than the other parameter.
            Zero when this ElectricCurrent is equal to the other parameter.
            Greater than zero when this ElectricCurrent is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current ElectricCurrent.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.Abs(Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Returns the absolute value of a ElectricCurrent.
            </summary>
            <param name="value">A ElectricCurrent.</param>
            <returns>A ElectricCurrent that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.Round(Nalco.Numerics.SI.ElectricCurrent,Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Returns a ElectricCurrent rounded to the nearest interval.
            </summary>
            <param name="value">A ElectricCurrent.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ElectricCurrent rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.Round(Nalco.Numerics.SI.ElectricCurrent,Nalco.Numerics.SI.ElectricCurrent,System.MidpointRounding)">
            <summary>
            Returns a ElectricCurrent rounded to the nearest interval.
            </summary>
            <param name="value">A ElectricCurrent.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A ElectricCurrent rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.Floor(Nalco.Numerics.SI.ElectricCurrent,Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Returns a ElectricCurrent rounded down to the nearest interval.
            </summary>
            <param name="value">A ElectricCurrent.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ElectricCurrent rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.Ceiling(Nalco.Numerics.SI.ElectricCurrent,Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Returns a ElectricCurrent rounded up to the nearest interval.
            </summary>
            <param name="value">A ElectricCurrent.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A ElectricCurrent rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_Equality(Nalco.Numerics.SI.ElectricCurrent,Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Determines whether two ElectricCurrents are equal.
            </summary>
            <param name="l">Left ElectricCurrent.</param>
            <param name="r">Right ElectricCurrent.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_Inequality(Nalco.Numerics.SI.ElectricCurrent,Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Determines whether two ElectricCurrents are not equal.
            </summary>
            <param name="l">Left ElectricCurrent.</param>
            <param name="r">Right ElectricCurrent.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_LessThan(Nalco.Numerics.SI.ElectricCurrent,Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Determines if the left ElectricCurrent is less than the right ElectricCurrent.
            </summary>
            <param name="l">Left ElectricCurrent.</param>
            <param name="r">Right ElectricCurrent.</param>
            <returns>True if the left ElectricCurrent is less than the right ElectricCurrent.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_LessThanOrEqual(Nalco.Numerics.SI.ElectricCurrent,Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Determines if the left ElectricCurrent is less than or equal to the right ElectricCurrent.
            </summary>
            <param name="l">Left ElectricCurrent.</param>
            <param name="r">Right ElectricCurrent.</param>
            <returns>True if the left ElectricCurrent is less than or equal to the right ElectricCurrent.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_GreaterThanOrEqual(Nalco.Numerics.SI.ElectricCurrent,Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Determines if the left ElectricCurrent is greater than or equal to the right ElectricCurrent.
            </summary>
            <param name="l">Left ElectricCurrent.</param>
            <param name="r">Right ElectricCurrent.</param>
            <returns>True if the left ElectricCurrent is greater than or equal to the right ElectricCurrent.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_GreaterThan(Nalco.Numerics.SI.ElectricCurrent,Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Determines if the left ElectricCurrent is greater than the right ElectricCurrent.
            </summary>
            <param name="l">Left ElectricCurrent.</param>
            <param name="r">Right ElectricCurrent.</param>
            <returns>True if the left ElectricCurrent is greater than the right ElectricCurrent.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_Addition(Nalco.Numerics.SI.ElectricCurrent,Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Add two ElectricCurrents together.
            </summary>
            <param name="l">Left ElectricCurrent.</param>
            <param name="r">Right ElectricCurrent.</param>
            <returns>Sum of ElectricCurrents.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_UnaryNegation(Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Negate a ElectricCurrent.
            </summary>
            <param name="l">Left ElectricCurrent.</param>
            <returns>Negative ElectricCurrent.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_Subtraction(Nalco.Numerics.SI.ElectricCurrent,Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Subtract two ElectricCurrents.
            </summary>
            <param name="l">Left ElectricCurrent.</param>
            <param name="r">Right ElectricCurrent.</param>
            <returns>Difference of ElectricCurrents.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_Multiply(Nalco.Numerics.SI.ElectricCurrent,System.Double)">
            <summary>
            Multiply a ElectricCurrent with a double.
            </summary>
            <param name="l">Left ElectricCurrent.</param>
            <param name="r">Double value.</param>
            <returns>ElectricCurrent.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_Multiply(System.Double,Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Multiply a ElectricCurrent with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right ElectricCurrent.</param>
            <returns>ElectricCurrent.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_Division(Nalco.Numerics.SI.ElectricCurrent,System.Double)">
            <summary>
            Divide a ElectricCurrent by a double.
            </summary>
            <param name="l">Left ElectricCurrent.</param>
            <param name="r">Double value.</param>
            <returns>ElectricCurrent.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_Division(Nalco.Numerics.SI.ElectricCurrent,Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Divide a ElectricCurrent by another ElectricCurrent.
            </summary>
            <param name="l">Left ElectricCurrent.</param>
            <param name="r">Right ElectricCurrent.</param>
            <returns>Ratio of the two ElectricCurrents.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_Modulus(Nalco.Numerics.SI.ElectricCurrent,Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Divide a ElectricCurrent by another ElectricCurrent and return the remainder.
            </summary>
            <param name="l">Left ElectricCurrent.</param>
            <param name="r">Right ElectricCurrent.</param>
            <returns>Remainder after a ElectricCurrent is divided by a ElectricCurrent.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_Explicit(Nalco.Numerics.SI.ElectricCurrent)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the ElectricCurrent into a weakly typed Scalar.
            </summary>
            <param name="l">ElectricCurrent.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.ElectricCurrent.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.ElectricCurrent">
            <summary>
            Explicitly convert the weakly typed Scalar into a ElectricCurrent.
            </summary>
            <param name="s">Scalar.</param>
            <returns>ElectricCurrent.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Energy">
            <summary>
            Energy (joules).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.Energy.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Energy.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Energy.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.#ctor(System.Double)">
            <summary>
            Construct a new Energy with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.GetEfficiency(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Energy)">
            <summary>
            Get an energy efficiency from two energies.
            </summary>
            <param name="numerator">The energy recovered.</param>
            <param name="denominator">The energy put in.</param>
            <returns></returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Multiply(Nalco.Numerics.SI.Efficiency,Nalco.Numerics.SI.Energy)">
            <summary>
            Multiply an efficiency by an energy.
            </summary>
            <param name="l">Left efficiency.</param>
            <param name="r">Right energy.</param>
            <returns>Resulting energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Multiply(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Efficiency)">
            <summary>
            Multiply an efficiency by an energy.
            </summary>
            <param name="l">Left energy.</param>
            <param name="r">Right efficiency.</param>
            <returns>Resulting energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Division(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Power)">
            <summary>
            Divide an energy by a power.
            </summary>
            <param name="l">Left energy.</param>
            <param name="r">Right power.</param>
            <returns>Resulting time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Division(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Time)">
            <summary>
            Divide an energy by a time.
            </summary>
            <param name="l">Left energy.</param>
            <param name="r">Right time.</param>
            <returns>Resulting power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Multiply(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Frequency)">
            <summary>
            Multiply an energy by a frequency.
            </summary>
            <param name="l">Left energy.</param>
            <param name="r">Right frequency.</param>
            <returns>Resulting power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Division(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Area)">
            <summary>
            Divide an energy by an area.
            </summary>
            <param name="l">Left energy.</param>
            <param name="r">Right area.</param>
            <returns>Resulting mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Division(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.HeatDensity)">
            <summary>
            Divide an energy by a heat density.
            </summary>
            <param name="l">Left energy.</param>
            <param name="r">Right heat density.</param>
            <returns>Resulting area.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Division(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Mass)">
            <summary>
            Divide an energy by a mass.
            </summary>
            <param name="l">Left energy.</param>
            <param name="r">Right mass.</param>
            <returns>Resulting available energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Division(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Divide an energy by a temperature interval.
            </summary>
            <param name="l">Left energy.</param>
            <param name="r">Right temperature interval.</param>
            <returns>Resulting entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Division(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Entropy)">
            <summary>
            Divide an energy by an entropy.
            </summary>
            <param name="l">Left energy.</param>
            <param name="r">Right entropy.</param>
            <returns>Resulting temperature interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Division(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Divide an energy by a specific enthalpy.
            </summary>
            <param name="l">Left energy.</param>
            <param name="r">Right specific enthalpy.</param>
            <returns>Resulting mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Division(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Volume)">
            <summary>
            Divide an energy by a volume.
            </summary>
            <param name="l">Left energy.</param>
            <param name="r">Right volume.</param>
            <returns>Resulting pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Division(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Pressure)">
            <summary>
            Divide an energy by a pressure.
            </summary>
            <param name="l">Left energy.</param>
            <param name="r">Right pressure.</param>
            <returns>Resulting volume.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.Energy.Zero">
            <summary>
            Energy of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.#ctor(System.Double,Nalco.Numerics.SI.Energy.Subunit)">
            <summary>
            Construct a Energy with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Energy.Item(Nalco.Numerics.SI.Energy.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Energy.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.Abbreviation(Nalco.Numerics.SI.Energy.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.Description(Nalco.Numerics.SI.Energy.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Energy.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.Parse(System.String)">
            <summary>
            Converts the string representation of a Energy to a Energy.
            </summary>
            <param name="s">A string that contains a Energy to convert.</param>
            <returns>A Energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Energy to a Energy.
            </summary>
            <param name="s">A string that contains a Energy to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Energy to a Energy.
            </summary>
            <param name="s">A string that contains a Energy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Energy.Subunit)">
            <summary>
            Converts the string representation of a Energy to a Energy.
            </summary>
            <param name="s">A string that contains a Energy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.TryParse(System.String,Nalco.Numerics.SI.Energy@)">
            <summary>
            Converts the string representation of a Energy to a Energy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Energy to convert.</param>
            <param name="result">When this method returns, contains the Energy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Energy@)">
            <summary>
            Converts the string representation of a Energy to a Energy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Energy to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Energy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Energy@)">
            <summary>
            Converts the string representation of a Energy to a Energy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Energy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Energy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Energy.Subunit,Nalco.Numerics.SI.Energy@)">
            <summary>
            Converts the string representation of a Energy to a Energy. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Energy to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Energy, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.CompareTo(System.Object)">
            <summary>
            Compares the current Energy with another Energy.
            </summary>
            <param name="obj">Energy to compare with this Energy.</param>
            <returns>Less than zero when this Energy is less than the other parameter.
            Zero when this Energy is equal to the other parameter.
            Greater than zero when this Energy is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Energy.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.CompareTo(Nalco.Numerics.SI.Energy)">
            <summary>
            Compares the current Energy with another Energy.
            </summary>
            <param name="other">Energy to compare with this Energy.</param>
            <returns>Less than zero when this Energy is less than the other parameter.
            Zero when this Energy is equal to the other parameter.
            Greater than zero when this Energy is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Energy.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.Abs(Nalco.Numerics.SI.Energy)">
            <summary>
            Returns the absolute value of a Energy.
            </summary>
            <param name="value">A Energy.</param>
            <returns>A Energy that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.Round(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Energy)">
            <summary>
            Returns a Energy rounded to the nearest interval.
            </summary>
            <param name="value">A Energy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Energy rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.Round(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Energy,System.MidpointRounding)">
            <summary>
            Returns a Energy rounded to the nearest interval.
            </summary>
            <param name="value">A Energy.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Energy rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.Floor(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Energy)">
            <summary>
            Returns a Energy rounded down to the nearest interval.
            </summary>
            <param name="value">A Energy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Energy rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.Ceiling(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Energy)">
            <summary>
            Returns a Energy rounded up to the nearest interval.
            </summary>
            <param name="value">A Energy.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Energy rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Equality(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Energy)">
            <summary>
            Determines whether two Energys are equal.
            </summary>
            <param name="l">Left Energy.</param>
            <param name="r">Right Energy.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Inequality(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Energy)">
            <summary>
            Determines whether two Energys are not equal.
            </summary>
            <param name="l">Left Energy.</param>
            <param name="r">Right Energy.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_LessThan(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Energy)">
            <summary>
            Determines if the left Energy is less than the right Energy.
            </summary>
            <param name="l">Left Energy.</param>
            <param name="r">Right Energy.</param>
            <returns>True if the left Energy is less than the right Energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_LessThanOrEqual(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Energy)">
            <summary>
            Determines if the left Energy is less than or equal to the right Energy.
            </summary>
            <param name="l">Left Energy.</param>
            <param name="r">Right Energy.</param>
            <returns>True if the left Energy is less than or equal to the right Energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_GreaterThanOrEqual(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Energy)">
            <summary>
            Determines if the left Energy is greater than or equal to the right Energy.
            </summary>
            <param name="l">Left Energy.</param>
            <param name="r">Right Energy.</param>
            <returns>True if the left Energy is greater than or equal to the right Energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_GreaterThan(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Energy)">
            <summary>
            Determines if the left Energy is greater than the right Energy.
            </summary>
            <param name="l">Left Energy.</param>
            <param name="r">Right Energy.</param>
            <returns>True if the left Energy is greater than the right Energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Addition(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Energy)">
            <summary>
            Add two Energys together.
            </summary>
            <param name="l">Left Energy.</param>
            <param name="r">Right Energy.</param>
            <returns>Sum of Energys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_UnaryNegation(Nalco.Numerics.SI.Energy)">
            <summary>
            Negate a Energy.
            </summary>
            <param name="l">Left Energy.</param>
            <returns>Negative Energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Subtraction(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Energy)">
            <summary>
            Subtract two Energys.
            </summary>
            <param name="l">Left Energy.</param>
            <param name="r">Right Energy.</param>
            <returns>Difference of Energys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Multiply(Nalco.Numerics.SI.Energy,System.Double)">
            <summary>
            Multiply a Energy with a double.
            </summary>
            <param name="l">Left Energy.</param>
            <param name="r">Double value.</param>
            <returns>Energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Multiply(System.Double,Nalco.Numerics.SI.Energy)">
            <summary>
            Multiply a Energy with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Energy.</param>
            <returns>Energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Division(Nalco.Numerics.SI.Energy,System.Double)">
            <summary>
            Divide a Energy by a double.
            </summary>
            <param name="l">Left Energy.</param>
            <param name="r">Double value.</param>
            <returns>Energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Division(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Energy)">
            <summary>
            Divide a Energy by another Energy.
            </summary>
            <param name="l">Left Energy.</param>
            <param name="r">Right Energy.</param>
            <returns>Ratio of the two Energys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Modulus(Nalco.Numerics.SI.Energy,Nalco.Numerics.SI.Energy)">
            <summary>
            Divide a Energy by another Energy and return the remainder.
            </summary>
            <param name="l">Left Energy.</param>
            <param name="r">Right Energy.</param>
            <returns>Remainder after a Energy is divided by a Energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Explicit(Nalco.Numerics.SI.Energy)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Energy into a weakly typed Scalar.
            </summary>
            <param name="l">Energy.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Energy.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Energy">
            <summary>
            Explicitly convert the weakly typed Scalar into a Energy.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Energy.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Efficiency">
            <summary>
            Efficiency (joules per joule).
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.Efficiency.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Efficiency.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Efficiency.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.#ctor(System.Double)">
            <summary>
            Construct a new Efficiency with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="F:Nalco.Numerics.SI.Efficiency.Zero">
            <summary>
            Efficiency of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.#ctor(System.Double,Nalco.Numerics.SI.Efficiency.Subunit)">
            <summary>
            Construct a Efficiency with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Efficiency.Item(Nalco.Numerics.SI.Efficiency.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Efficiency.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.Abbreviation(Nalco.Numerics.SI.Efficiency.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.Description(Nalco.Numerics.SI.Efficiency.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Efficiency.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.Parse(System.String)">
            <summary>
            Converts the string representation of a Efficiency to a Efficiency.
            </summary>
            <param name="s">A string that contains a Efficiency to convert.</param>
            <returns>A Efficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Efficiency to a Efficiency.
            </summary>
            <param name="s">A string that contains a Efficiency to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Efficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Efficiency to a Efficiency.
            </summary>
            <param name="s">A string that contains a Efficiency to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Efficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Efficiency.Subunit)">
            <summary>
            Converts the string representation of a Efficiency to a Efficiency.
            </summary>
            <param name="s">A string that contains a Efficiency to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Efficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.TryParse(System.String,Nalco.Numerics.SI.Efficiency@)">
            <summary>
            Converts the string representation of a Efficiency to a Efficiency. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Efficiency to convert.</param>
            <param name="result">When this method returns, contains the Efficiency, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Efficiency@)">
            <summary>
            Converts the string representation of a Efficiency to a Efficiency. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Efficiency to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Efficiency, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Efficiency@)">
            <summary>
            Converts the string representation of a Efficiency to a Efficiency. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Efficiency to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Efficiency, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Efficiency.Subunit,Nalco.Numerics.SI.Efficiency@)">
            <summary>
            Converts the string representation of a Efficiency to a Efficiency. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Efficiency to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Efficiency, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.CompareTo(System.Object)">
            <summary>
            Compares the current Efficiency with another Efficiency.
            </summary>
            <param name="obj">Efficiency to compare with this Efficiency.</param>
            <returns>Less than zero when this Efficiency is less than the other parameter.
            Zero when this Efficiency is equal to the other parameter.
            Greater than zero when this Efficiency is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Efficiency.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.CompareTo(Nalco.Numerics.SI.Efficiency)">
            <summary>
            Compares the current Efficiency with another Efficiency.
            </summary>
            <param name="other">Efficiency to compare with this Efficiency.</param>
            <returns>Less than zero when this Efficiency is less than the other parameter.
            Zero when this Efficiency is equal to the other parameter.
            Greater than zero when this Efficiency is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Efficiency.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.Abs(Nalco.Numerics.SI.Efficiency)">
            <summary>
            Returns the absolute value of a Efficiency.
            </summary>
            <param name="value">A Efficiency.</param>
            <returns>A Efficiency that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.Round(Nalco.Numerics.SI.Efficiency,Nalco.Numerics.SI.Efficiency)">
            <summary>
            Returns a Efficiency rounded to the nearest interval.
            </summary>
            <param name="value">A Efficiency.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Efficiency rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.Round(Nalco.Numerics.SI.Efficiency,Nalco.Numerics.SI.Efficiency,System.MidpointRounding)">
            <summary>
            Returns a Efficiency rounded to the nearest interval.
            </summary>
            <param name="value">A Efficiency.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Efficiency rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.Floor(Nalco.Numerics.SI.Efficiency,Nalco.Numerics.SI.Efficiency)">
            <summary>
            Returns a Efficiency rounded down to the nearest interval.
            </summary>
            <param name="value">A Efficiency.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Efficiency rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.Ceiling(Nalco.Numerics.SI.Efficiency,Nalco.Numerics.SI.Efficiency)">
            <summary>
            Returns a Efficiency rounded up to the nearest interval.
            </summary>
            <param name="value">A Efficiency.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Efficiency rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.op_Equality(Nalco.Numerics.SI.Efficiency,Nalco.Numerics.SI.Efficiency)">
            <summary>
            Determines whether two Efficiencys are equal.
            </summary>
            <param name="l">Left Efficiency.</param>
            <param name="r">Right Efficiency.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.op_Inequality(Nalco.Numerics.SI.Efficiency,Nalco.Numerics.SI.Efficiency)">
            <summary>
            Determines whether two Efficiencys are not equal.
            </summary>
            <param name="l">Left Efficiency.</param>
            <param name="r">Right Efficiency.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.op_LessThan(Nalco.Numerics.SI.Efficiency,Nalco.Numerics.SI.Efficiency)">
            <summary>
            Determines if the left Efficiency is less than the right Efficiency.
            </summary>
            <param name="l">Left Efficiency.</param>
            <param name="r">Right Efficiency.</param>
            <returns>True if the left Efficiency is less than the right Efficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.op_LessThanOrEqual(Nalco.Numerics.SI.Efficiency,Nalco.Numerics.SI.Efficiency)">
            <summary>
            Determines if the left Efficiency is less than or equal to the right Efficiency.
            </summary>
            <param name="l">Left Efficiency.</param>
            <param name="r">Right Efficiency.</param>
            <returns>True if the left Efficiency is less than or equal to the right Efficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.op_GreaterThanOrEqual(Nalco.Numerics.SI.Efficiency,Nalco.Numerics.SI.Efficiency)">
            <summary>
            Determines if the left Efficiency is greater than or equal to the right Efficiency.
            </summary>
            <param name="l">Left Efficiency.</param>
            <param name="r">Right Efficiency.</param>
            <returns>True if the left Efficiency is greater than or equal to the right Efficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.op_GreaterThan(Nalco.Numerics.SI.Efficiency,Nalco.Numerics.SI.Efficiency)">
            <summary>
            Determines if the left Efficiency is greater than the right Efficiency.
            </summary>
            <param name="l">Left Efficiency.</param>
            <param name="r">Right Efficiency.</param>
            <returns>True if the left Efficiency is greater than the right Efficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.op_Addition(Nalco.Numerics.SI.Efficiency,Nalco.Numerics.SI.Efficiency)">
            <summary>
            Add two Efficiencys together.
            </summary>
            <param name="l">Left Efficiency.</param>
            <param name="r">Right Efficiency.</param>
            <returns>Sum of Efficiencys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.op_UnaryNegation(Nalco.Numerics.SI.Efficiency)">
            <summary>
            Negate a Efficiency.
            </summary>
            <param name="l">Left Efficiency.</param>
            <returns>Negative Efficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.op_Subtraction(Nalco.Numerics.SI.Efficiency,Nalco.Numerics.SI.Efficiency)">
            <summary>
            Subtract two Efficiencys.
            </summary>
            <param name="l">Left Efficiency.</param>
            <param name="r">Right Efficiency.</param>
            <returns>Difference of Efficiencys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.op_Multiply(Nalco.Numerics.SI.Efficiency,System.Double)">
            <summary>
            Multiply a Efficiency with a double.
            </summary>
            <param name="l">Left Efficiency.</param>
            <param name="r">Double value.</param>
            <returns>Efficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.op_Multiply(System.Double,Nalco.Numerics.SI.Efficiency)">
            <summary>
            Multiply a Efficiency with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Efficiency.</param>
            <returns>Efficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.op_Division(Nalco.Numerics.SI.Efficiency,System.Double)">
            <summary>
            Divide a Efficiency by a double.
            </summary>
            <param name="l">Left Efficiency.</param>
            <param name="r">Double value.</param>
            <returns>Efficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.op_Division(Nalco.Numerics.SI.Efficiency,Nalco.Numerics.SI.Efficiency)">
            <summary>
            Divide a Efficiency by another Efficiency.
            </summary>
            <param name="l">Left Efficiency.</param>
            <param name="r">Right Efficiency.</param>
            <returns>Ratio of the two Efficiencys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.op_Modulus(Nalco.Numerics.SI.Efficiency,Nalco.Numerics.SI.Efficiency)">
            <summary>
            Divide a Efficiency by another Efficiency and return the remainder.
            </summary>
            <param name="l">Left Efficiency.</param>
            <param name="r">Right Efficiency.</param>
            <returns>Remainder after a Efficiency is divided by a Efficiency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.op_Explicit(Nalco.Numerics.SI.Efficiency)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Efficiency into a weakly typed Scalar.
            </summary>
            <param name="l">Efficiency.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Efficiency.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Efficiency">
            <summary>
            Explicitly convert the weakly typed Scalar into a Efficiency.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Efficiency.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.PressureConversion">
            <summary>
            Conversion implementation for pressures.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.PressureConversion.#ctor(System.Resources.ResourceManager,System.Resources.ResourceManager,System.Double[])">
            <summary>
            Constructor.
            </summary>
            <param name="abbreviations">Resource manager that contains
            abbreviations.</param>
            <param name="descriptions">Resource manager that contains
            descriptions.</param>
            <param name="conversions">Conversion factors for each subunit. The
            base unit's conversion should be 1.0.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.PressureConversion.ToBase(System.Double,System.Int32)">
            <summary>
            Convert the value from the given subunit to the base subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="from">Original subunit.</param>
            <returns>Value in the base subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.PressureConversion.FromBase(System.Double,System.Int32)">
            <summary>
            Convert the value from the base subunit to the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="to">Result subunit.</param>
            <returns>Value in the result subunit.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Density">
            <summary>
            Density (kilograms per cubic meter).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Density.Zero">
            <summary>
            Density of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.#ctor(System.Double,Nalco.Numerics.SI.Density.Subunit)">
            <summary>
            Construct a Density with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Density.Item(Nalco.Numerics.SI.Density.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Density.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.Abbreviation(Nalco.Numerics.SI.Density.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.Description(Nalco.Numerics.SI.Density.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Density.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.Parse(System.String)">
            <summary>
            Converts the string representation of a Density to a Density.
            </summary>
            <param name="s">A string that contains a Density to convert.</param>
            <returns>A Density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Density to a Density.
            </summary>
            <param name="s">A string that contains a Density to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Density to a Density.
            </summary>
            <param name="s">A string that contains a Density to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Density.Subunit)">
            <summary>
            Converts the string representation of a Density to a Density.
            </summary>
            <param name="s">A string that contains a Density to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.TryParse(System.String,Nalco.Numerics.SI.Density@)">
            <summary>
            Converts the string representation of a Density to a Density. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Density to convert.</param>
            <param name="result">When this method returns, contains the Density, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Density@)">
            <summary>
            Converts the string representation of a Density to a Density. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Density to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Density, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Density@)">
            <summary>
            Converts the string representation of a Density to a Density. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Density to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Density, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Density.Subunit,Nalco.Numerics.SI.Density@)">
            <summary>
            Converts the string representation of a Density to a Density. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Density to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Density, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.CompareTo(System.Object)">
            <summary>
            Compares the current Density with another Density.
            </summary>
            <param name="obj">Density to compare with this Density.</param>
            <returns>Less than zero when this Density is less than the other parameter.
            Zero when this Density is equal to the other parameter.
            Greater than zero when this Density is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Density.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.CompareTo(Nalco.Numerics.SI.Density)">
            <summary>
            Compares the current Density with another Density.
            </summary>
            <param name="other">Density to compare with this Density.</param>
            <returns>Less than zero when this Density is less than the other parameter.
            Zero when this Density is equal to the other parameter.
            Greater than zero when this Density is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Density.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.Abs(Nalco.Numerics.SI.Density)">
            <summary>
            Returns the absolute value of a Density.
            </summary>
            <param name="value">A Density.</param>
            <returns>A Density that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.Round(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.Density)">
            <summary>
            Returns a Density rounded to the nearest interval.
            </summary>
            <param name="value">A Density.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Density rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.Round(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.Density,System.MidpointRounding)">
            <summary>
            Returns a Density rounded to the nearest interval.
            </summary>
            <param name="value">A Density.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Density rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.Floor(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.Density)">
            <summary>
            Returns a Density rounded down to the nearest interval.
            </summary>
            <param name="value">A Density.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Density rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.Ceiling(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.Density)">
            <summary>
            Returns a Density rounded up to the nearest interval.
            </summary>
            <param name="value">A Density.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Density rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Equality(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.Density)">
            <summary>
            Determines whether two Densitys are equal.
            </summary>
            <param name="l">Left Density.</param>
            <param name="r">Right Density.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Inequality(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.Density)">
            <summary>
            Determines whether two Densitys are not equal.
            </summary>
            <param name="l">Left Density.</param>
            <param name="r">Right Density.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_LessThan(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.Density)">
            <summary>
            Determines if the left Density is less than the right Density.
            </summary>
            <param name="l">Left Density.</param>
            <param name="r">Right Density.</param>
            <returns>True if the left Density is less than the right Density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_LessThanOrEqual(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.Density)">
            <summary>
            Determines if the left Density is less than or equal to the right Density.
            </summary>
            <param name="l">Left Density.</param>
            <param name="r">Right Density.</param>
            <returns>True if the left Density is less than or equal to the right Density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_GreaterThanOrEqual(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.Density)">
            <summary>
            Determines if the left Density is greater than or equal to the right Density.
            </summary>
            <param name="l">Left Density.</param>
            <param name="r">Right Density.</param>
            <returns>True if the left Density is greater than or equal to the right Density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_GreaterThan(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.Density)">
            <summary>
            Determines if the left Density is greater than the right Density.
            </summary>
            <param name="l">Left Density.</param>
            <param name="r">Right Density.</param>
            <returns>True if the left Density is greater than the right Density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Addition(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.Density)">
            <summary>
            Add two Densitys together.
            </summary>
            <param name="l">Left Density.</param>
            <param name="r">Right Density.</param>
            <returns>Sum of Densitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_UnaryNegation(Nalco.Numerics.SI.Density)">
            <summary>
            Negate a Density.
            </summary>
            <param name="l">Left Density.</param>
            <returns>Negative Density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Subtraction(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.Density)">
            <summary>
            Subtract two Densitys.
            </summary>
            <param name="l">Left Density.</param>
            <param name="r">Right Density.</param>
            <returns>Difference of Densitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Multiply(Nalco.Numerics.SI.Density,System.Double)">
            <summary>
            Multiply a Density with a double.
            </summary>
            <param name="l">Left Density.</param>
            <param name="r">Double value.</param>
            <returns>Density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Multiply(System.Double,Nalco.Numerics.SI.Density)">
            <summary>
            Multiply a Density with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Density.</param>
            <returns>Density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Division(Nalco.Numerics.SI.Density,System.Double)">
            <summary>
            Divide a Density by a double.
            </summary>
            <param name="l">Left Density.</param>
            <param name="r">Double value.</param>
            <returns>Density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Division(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.Density)">
            <summary>
            Divide a Density by another Density.
            </summary>
            <param name="l">Left Density.</param>
            <param name="r">Right Density.</param>
            <returns>Ratio of the two Densitys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Modulus(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.Density)">
            <summary>
            Divide a Density by another Density and return the remainder.
            </summary>
            <param name="l">Left Density.</param>
            <param name="r">Right Density.</param>
            <returns>Remainder after a Density is divided by a Density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Explicit(Nalco.Numerics.SI.Density)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Density into a weakly typed Scalar.
            </summary>
            <param name="l">Density.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Density">
            <summary>
            Explicitly convert the weakly typed Scalar into a Density.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Density.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Density.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Density.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Density.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.#ctor(System.Double)">
            <summary>
            Construct a new Density with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Explicit(Nalco.Numerics.SI.SpecificVolume)~Nalco.Numerics.SI.Density">
            <summary>
            Explicitly convert the specific volume into a density.
            </summary>
            <param name="l">Specific volume.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Multiply(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Multiply a density by a specific enthalpy.
            </summary>
            <param name="l">Left density.</param>
            <param name="r">Right specific enthalpy.</param>
            <returns>Resulting pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Division(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.MolarMass)">
            <summary>
            Divide a density by a molar mass.
            </summary>
            <param name="l">Left density.</param>
            <param name="r">Right molar mass.</param>
            <returns>Resulting molar concentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Division(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.MolarConcentration)">
            <summary>
            Divide a density by a molar concentration.
            </summary>
            <param name="l">Left density.</param>
            <param name="r">Right molar concentration.</param>
            <returns>Resulting molar mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Multiply(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Multiply a density by a volume rate.
            </summary>
            <param name="l">Left density.</param>
            <param name="r">Right volume rate.</param>
            <returns>Resulting mass rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Multiply(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.MolalConcentration)">
            <summary>
            Multiply a density by a molal concentration.
            </summary>
            <param name="l">Left density.</param>
            <param name="r">Right molal concentration.</param>
            <returns>Resulting molar concentration.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Density.op_Multiply(Nalco.Numerics.SI.Density,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Multiply a density by an available energy.
            </summary>
            <param name="l">Left density.</param>
            <param name="r">Right available energy.</param>
            <returns>Resulting pressure.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Frequency">
            <summary>
            Frequency (hertz).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Frequency.Zero">
            <summary>
            Frequency of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.#ctor(System.Double,Nalco.Numerics.SI.Frequency.Subunit)">
            <summary>
            Construct a Frequency with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Frequency.Item(Nalco.Numerics.SI.Frequency.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Frequency.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.Abbreviation(Nalco.Numerics.SI.Frequency.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.Description(Nalco.Numerics.SI.Frequency.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Frequency.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.Parse(System.String)">
            <summary>
            Converts the string representation of a Frequency to a Frequency.
            </summary>
            <param name="s">A string that contains a Frequency to convert.</param>
            <returns>A Frequency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Frequency to a Frequency.
            </summary>
            <param name="s">A string that contains a Frequency to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Frequency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Frequency to a Frequency.
            </summary>
            <param name="s">A string that contains a Frequency to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Frequency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Frequency.Subunit)">
            <summary>
            Converts the string representation of a Frequency to a Frequency.
            </summary>
            <param name="s">A string that contains a Frequency to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Frequency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.TryParse(System.String,Nalco.Numerics.SI.Frequency@)">
            <summary>
            Converts the string representation of a Frequency to a Frequency. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Frequency to convert.</param>
            <param name="result">When this method returns, contains the Frequency, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Frequency@)">
            <summary>
            Converts the string representation of a Frequency to a Frequency. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Frequency to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Frequency, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Frequency@)">
            <summary>
            Converts the string representation of a Frequency to a Frequency. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Frequency to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Frequency, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Frequency.Subunit,Nalco.Numerics.SI.Frequency@)">
            <summary>
            Converts the string representation of a Frequency to a Frequency. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Frequency to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Frequency, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.CompareTo(System.Object)">
            <summary>
            Compares the current Frequency with another Frequency.
            </summary>
            <param name="obj">Frequency to compare with this Frequency.</param>
            <returns>Less than zero when this Frequency is less than the other parameter.
            Zero when this Frequency is equal to the other parameter.
            Greater than zero when this Frequency is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Frequency.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.CompareTo(Nalco.Numerics.SI.Frequency)">
            <summary>
            Compares the current Frequency with another Frequency.
            </summary>
            <param name="other">Frequency to compare with this Frequency.</param>
            <returns>Less than zero when this Frequency is less than the other parameter.
            Zero when this Frequency is equal to the other parameter.
            Greater than zero when this Frequency is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Frequency.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.Abs(Nalco.Numerics.SI.Frequency)">
            <summary>
            Returns the absolute value of a Frequency.
            </summary>
            <param name="value">A Frequency.</param>
            <returns>A Frequency that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.Round(Nalco.Numerics.SI.Frequency,Nalco.Numerics.SI.Frequency)">
            <summary>
            Returns a Frequency rounded to the nearest interval.
            </summary>
            <param name="value">A Frequency.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Frequency rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.Round(Nalco.Numerics.SI.Frequency,Nalco.Numerics.SI.Frequency,System.MidpointRounding)">
            <summary>
            Returns a Frequency rounded to the nearest interval.
            </summary>
            <param name="value">A Frequency.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Frequency rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.Floor(Nalco.Numerics.SI.Frequency,Nalco.Numerics.SI.Frequency)">
            <summary>
            Returns a Frequency rounded down to the nearest interval.
            </summary>
            <param name="value">A Frequency.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Frequency rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.Ceiling(Nalco.Numerics.SI.Frequency,Nalco.Numerics.SI.Frequency)">
            <summary>
            Returns a Frequency rounded up to the nearest interval.
            </summary>
            <param name="value">A Frequency.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Frequency rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_Equality(Nalco.Numerics.SI.Frequency,Nalco.Numerics.SI.Frequency)">
            <summary>
            Determines whether two Frequencys are equal.
            </summary>
            <param name="l">Left Frequency.</param>
            <param name="r">Right Frequency.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_Inequality(Nalco.Numerics.SI.Frequency,Nalco.Numerics.SI.Frequency)">
            <summary>
            Determines whether two Frequencys are not equal.
            </summary>
            <param name="l">Left Frequency.</param>
            <param name="r">Right Frequency.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_LessThan(Nalco.Numerics.SI.Frequency,Nalco.Numerics.SI.Frequency)">
            <summary>
            Determines if the left Frequency is less than the right Frequency.
            </summary>
            <param name="l">Left Frequency.</param>
            <param name="r">Right Frequency.</param>
            <returns>True if the left Frequency is less than the right Frequency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_LessThanOrEqual(Nalco.Numerics.SI.Frequency,Nalco.Numerics.SI.Frequency)">
            <summary>
            Determines if the left Frequency is less than or equal to the right Frequency.
            </summary>
            <param name="l">Left Frequency.</param>
            <param name="r">Right Frequency.</param>
            <returns>True if the left Frequency is less than or equal to the right Frequency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_GreaterThanOrEqual(Nalco.Numerics.SI.Frequency,Nalco.Numerics.SI.Frequency)">
            <summary>
            Determines if the left Frequency is greater than or equal to the right Frequency.
            </summary>
            <param name="l">Left Frequency.</param>
            <param name="r">Right Frequency.</param>
            <returns>True if the left Frequency is greater than or equal to the right Frequency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_GreaterThan(Nalco.Numerics.SI.Frequency,Nalco.Numerics.SI.Frequency)">
            <summary>
            Determines if the left Frequency is greater than the right Frequency.
            </summary>
            <param name="l">Left Frequency.</param>
            <param name="r">Right Frequency.</param>
            <returns>True if the left Frequency is greater than the right Frequency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_Addition(Nalco.Numerics.SI.Frequency,Nalco.Numerics.SI.Frequency)">
            <summary>
            Add two Frequencys together.
            </summary>
            <param name="l">Left Frequency.</param>
            <param name="r">Right Frequency.</param>
            <returns>Sum of Frequencys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_UnaryNegation(Nalco.Numerics.SI.Frequency)">
            <summary>
            Negate a Frequency.
            </summary>
            <param name="l">Left Frequency.</param>
            <returns>Negative Frequency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_Subtraction(Nalco.Numerics.SI.Frequency,Nalco.Numerics.SI.Frequency)">
            <summary>
            Subtract two Frequencys.
            </summary>
            <param name="l">Left Frequency.</param>
            <param name="r">Right Frequency.</param>
            <returns>Difference of Frequencys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_Multiply(Nalco.Numerics.SI.Frequency,System.Double)">
            <summary>
            Multiply a Frequency with a double.
            </summary>
            <param name="l">Left Frequency.</param>
            <param name="r">Double value.</param>
            <returns>Frequency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_Multiply(System.Double,Nalco.Numerics.SI.Frequency)">
            <summary>
            Multiply a Frequency with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Frequency.</param>
            <returns>Frequency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_Division(Nalco.Numerics.SI.Frequency,System.Double)">
            <summary>
            Divide a Frequency by a double.
            </summary>
            <param name="l">Left Frequency.</param>
            <param name="r">Double value.</param>
            <returns>Frequency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_Division(Nalco.Numerics.SI.Frequency,Nalco.Numerics.SI.Frequency)">
            <summary>
            Divide a Frequency by another Frequency.
            </summary>
            <param name="l">Left Frequency.</param>
            <param name="r">Right Frequency.</param>
            <returns>Ratio of the two Frequencys.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_Modulus(Nalco.Numerics.SI.Frequency,Nalco.Numerics.SI.Frequency)">
            <summary>
            Divide a Frequency by another Frequency and return the remainder.
            </summary>
            <param name="l">Left Frequency.</param>
            <param name="r">Right Frequency.</param>
            <returns>Remainder after a Frequency is divided by a Frequency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_Explicit(Nalco.Numerics.SI.Frequency)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Frequency into a weakly typed Scalar.
            </summary>
            <param name="l">Frequency.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Frequency">
            <summary>
            Explicitly convert the weakly typed Scalar into a Frequency.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Frequency.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Frequency.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Frequency.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Frequency.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.#ctor(System.Double)">
            <summary>
            Construct a new Frequency with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_Multiply(Nalco.Numerics.SI.Frequency,Nalco.Numerics.SI.Energy)">
            <summary>
            Multiply a Frequency by an Energy.
            </summary>
            <param name="l">An Frequency.</param>
            <param name="r">A Energy.</param>
            <returns>An Power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_Division(System.Double,Nalco.Numerics.SI.Frequency)">
            <summary>
            Divide a count by a frequency.
            </summary>
            <param name="l">Left count.</param>
            <param name="r">Right frequency.</param>
            <returns>Time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Frequency.op_Multiply(Nalco.Numerics.SI.Frequency,Nalco.Numerics.SI.Time)">
            <summary>
            Multiply a Frequency by a Time.
            </summary>
            <param name="l">Left Frequency.</param>
            <param name="r">Right Time.</param>
            <returns>Double.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Length">
            <summary>
            Length (meters).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Length.Zero">
            <summary>
            Length of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.#ctor(System.Double,Nalco.Numerics.SI.Length.Subunit)">
            <summary>
            Construct a Length with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Length.Item(Nalco.Numerics.SI.Length.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Length.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.Abbreviation(Nalco.Numerics.SI.Length.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.Description(Nalco.Numerics.SI.Length.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Length.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.Parse(System.String)">
            <summary>
            Converts the string representation of a Length to a Length.
            </summary>
            <param name="s">A string that contains a Length to convert.</param>
            <returns>A Length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Length to a Length.
            </summary>
            <param name="s">A string that contains a Length to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Length to a Length.
            </summary>
            <param name="s">A string that contains a Length to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Length.Subunit)">
            <summary>
            Converts the string representation of a Length to a Length.
            </summary>
            <param name="s">A string that contains a Length to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.TryParse(System.String,Nalco.Numerics.SI.Length@)">
            <summary>
            Converts the string representation of a Length to a Length. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Length to convert.</param>
            <param name="result">When this method returns, contains the Length, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Length@)">
            <summary>
            Converts the string representation of a Length to a Length. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Length to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Length, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Length@)">
            <summary>
            Converts the string representation of a Length to a Length. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Length to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Length, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Length.Subunit,Nalco.Numerics.SI.Length@)">
            <summary>
            Converts the string representation of a Length to a Length. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Length to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Length, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.CompareTo(System.Object)">
            <summary>
            Compares the current Length with another Length.
            </summary>
            <param name="obj">Length to compare with this Length.</param>
            <returns>Less than zero when this Length is less than the other parameter.
            Zero when this Length is equal to the other parameter.
            Greater than zero when this Length is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Length.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.CompareTo(Nalco.Numerics.SI.Length)">
            <summary>
            Compares the current Length with another Length.
            </summary>
            <param name="other">Length to compare with this Length.</param>
            <returns>Less than zero when this Length is less than the other parameter.
            Zero when this Length is equal to the other parameter.
            Greater than zero when this Length is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Length.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.Abs(Nalco.Numerics.SI.Length)">
            <summary>
            Returns the absolute value of a Length.
            </summary>
            <param name="value">A Length.</param>
            <returns>A Length that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.Round(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Length)">
            <summary>
            Returns a Length rounded to the nearest interval.
            </summary>
            <param name="value">A Length.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Length rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.Round(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Length,System.MidpointRounding)">
            <summary>
            Returns a Length rounded to the nearest interval.
            </summary>
            <param name="value">A Length.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Length rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.Floor(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Length)">
            <summary>
            Returns a Length rounded down to the nearest interval.
            </summary>
            <param name="value">A Length.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Length rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.Ceiling(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Length)">
            <summary>
            Returns a Length rounded up to the nearest interval.
            </summary>
            <param name="value">A Length.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Length rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Equality(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Length)">
            <summary>
            Determines whether two Lengths are equal.
            </summary>
            <param name="l">Left Length.</param>
            <param name="r">Right Length.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Inequality(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Length)">
            <summary>
            Determines whether two Lengths are not equal.
            </summary>
            <param name="l">Left Length.</param>
            <param name="r">Right Length.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_LessThan(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Length)">
            <summary>
            Determines if the left Length is less than the right Length.
            </summary>
            <param name="l">Left Length.</param>
            <param name="r">Right Length.</param>
            <returns>True if the left Length is less than the right Length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_LessThanOrEqual(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Length)">
            <summary>
            Determines if the left Length is less than or equal to the right Length.
            </summary>
            <param name="l">Left Length.</param>
            <param name="r">Right Length.</param>
            <returns>True if the left Length is less than or equal to the right Length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_GreaterThanOrEqual(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Length)">
            <summary>
            Determines if the left Length is greater than or equal to the right Length.
            </summary>
            <param name="l">Left Length.</param>
            <param name="r">Right Length.</param>
            <returns>True if the left Length is greater than or equal to the right Length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_GreaterThan(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Length)">
            <summary>
            Determines if the left Length is greater than the right Length.
            </summary>
            <param name="l">Left Length.</param>
            <param name="r">Right Length.</param>
            <returns>True if the left Length is greater than the right Length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Addition(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Length)">
            <summary>
            Add two Lengths together.
            </summary>
            <param name="l">Left Length.</param>
            <param name="r">Right Length.</param>
            <returns>Sum of Lengths.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_UnaryNegation(Nalco.Numerics.SI.Length)">
            <summary>
            Negate a Length.
            </summary>
            <param name="l">Left Length.</param>
            <returns>Negative Length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Subtraction(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Length)">
            <summary>
            Subtract two Lengths.
            </summary>
            <param name="l">Left Length.</param>
            <param name="r">Right Length.</param>
            <returns>Difference of Lengths.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Multiply(Nalco.Numerics.SI.Length,System.Double)">
            <summary>
            Multiply a Length with a double.
            </summary>
            <param name="l">Left Length.</param>
            <param name="r">Double value.</param>
            <returns>Length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Multiply(System.Double,Nalco.Numerics.SI.Length)">
            <summary>
            Multiply a Length with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Length.</param>
            <returns>Length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Division(Nalco.Numerics.SI.Length,System.Double)">
            <summary>
            Divide a Length by a double.
            </summary>
            <param name="l">Left Length.</param>
            <param name="r">Double value.</param>
            <returns>Length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Division(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Length)">
            <summary>
            Divide a Length by another Length.
            </summary>
            <param name="l">Left Length.</param>
            <param name="r">Right Length.</param>
            <returns>Ratio of the two Lengths.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Modulus(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Length)">
            <summary>
            Divide a Length by another Length and return the remainder.
            </summary>
            <param name="l">Left Length.</param>
            <param name="r">Right Length.</param>
            <returns>Remainder after a Length is divided by a Length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Explicit(Nalco.Numerics.SI.Length)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Length into a weakly typed Scalar.
            </summary>
            <param name="l">Length.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Length">
            <summary>
            Explicitly convert the weakly typed Scalar into a Length.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Length.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Length.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Length.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Length.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.#ctor(System.Double)">
            <summary>
            Construct a new Length with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Multiply(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Length)">
            <summary>
            Multiply two lengths together.
            </summary>
            <param name="l">Left length.</param>
            <param name="r">Right length.</param>
            <returns>Area formed by lengths.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Multiply(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Area)">
            <summary>
            Multiply a length by an area.
            </summary>
            <param name="l">Left length.</param>
            <param name="r">Right area.</param>
            <returns>Volume formed by length and area.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Division(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Time)">
            <summary>
            Divide a length by a time.
            </summary>
            <param name="l">Left length.</param>
            <param name="r">Right time.</param>
            <returns>Velocity formed by length divided by time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Division(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.Velocity)">
            <summary>
            Divide a length by a velocity.
            </summary>
            <param name="l">Left length.</param>
            <param name="r">Right velocity.</param>
            <returns>Time formed by length divided by velocity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Multiply(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Multiply a distance by a temperature lapse rate.
            </summary>
            <param name="l">Left length.</param>
            <param name="r">Right temperature lapse rate.</param>
            <returns>Temperature interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Length.op_Multiply(Nalco.Numerics.SI.Length,Nalco.Numerics.SI.ReciprocalLength)">
            <summary>
            Multiply a length by a reciprocal length.
            </summary>
            <param name="l">Left length.</param>
            <param name="r">Right reciprocal length.</param>
            <returns>Value.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Mass">
            <summary>
            Mass (kilograms).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Mass.Zero">
            <summary>
            Mass of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.#ctor(System.Double,Nalco.Numerics.SI.Mass.Subunit)">
            <summary>
            Construct a Mass with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Mass.Item(Nalco.Numerics.SI.Mass.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Mass.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.Abbreviation(Nalco.Numerics.SI.Mass.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.Description(Nalco.Numerics.SI.Mass.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Mass.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.Parse(System.String)">
            <summary>
            Converts the string representation of a Mass to a Mass.
            </summary>
            <param name="s">A string that contains a Mass to convert.</param>
            <returns>A Mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Mass to a Mass.
            </summary>
            <param name="s">A string that contains a Mass to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Mass to a Mass.
            </summary>
            <param name="s">A string that contains a Mass to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Mass.Subunit)">
            <summary>
            Converts the string representation of a Mass to a Mass.
            </summary>
            <param name="s">A string that contains a Mass to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.TryParse(System.String,Nalco.Numerics.SI.Mass@)">
            <summary>
            Converts the string representation of a Mass to a Mass. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Mass to convert.</param>
            <param name="result">When this method returns, contains the Mass, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Mass@)">
            <summary>
            Converts the string representation of a Mass to a Mass. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Mass to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Mass, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Mass@)">
            <summary>
            Converts the string representation of a Mass to a Mass. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Mass to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Mass, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Mass.Subunit,Nalco.Numerics.SI.Mass@)">
            <summary>
            Converts the string representation of a Mass to a Mass. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Mass to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Mass, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.CompareTo(System.Object)">
            <summary>
            Compares the current Mass with another Mass.
            </summary>
            <param name="obj">Mass to compare with this Mass.</param>
            <returns>Less than zero when this Mass is less than the other parameter.
            Zero when this Mass is equal to the other parameter.
            Greater than zero when this Mass is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Mass.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.CompareTo(Nalco.Numerics.SI.Mass)">
            <summary>
            Compares the current Mass with another Mass.
            </summary>
            <param name="other">Mass to compare with this Mass.</param>
            <returns>Less than zero when this Mass is less than the other parameter.
            Zero when this Mass is equal to the other parameter.
            Greater than zero when this Mass is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Mass.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.Abs(Nalco.Numerics.SI.Mass)">
            <summary>
            Returns the absolute value of a Mass.
            </summary>
            <param name="value">A Mass.</param>
            <returns>A Mass that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.Round(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Mass)">
            <summary>
            Returns a Mass rounded to the nearest interval.
            </summary>
            <param name="value">A Mass.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Mass rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.Round(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Mass,System.MidpointRounding)">
            <summary>
            Returns a Mass rounded to the nearest interval.
            </summary>
            <param name="value">A Mass.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Mass rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.Floor(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Mass)">
            <summary>
            Returns a Mass rounded down to the nearest interval.
            </summary>
            <param name="value">A Mass.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Mass rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.Ceiling(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Mass)">
            <summary>
            Returns a Mass rounded up to the nearest interval.
            </summary>
            <param name="value">A Mass.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Mass rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Equality(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Mass)">
            <summary>
            Determines whether two Masss are equal.
            </summary>
            <param name="l">Left Mass.</param>
            <param name="r">Right Mass.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Inequality(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Mass)">
            <summary>
            Determines whether two Masss are not equal.
            </summary>
            <param name="l">Left Mass.</param>
            <param name="r">Right Mass.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_LessThan(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Mass)">
            <summary>
            Determines if the left Mass is less than the right Mass.
            </summary>
            <param name="l">Left Mass.</param>
            <param name="r">Right Mass.</param>
            <returns>True if the left Mass is less than the right Mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_LessThanOrEqual(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Mass)">
            <summary>
            Determines if the left Mass is less than or equal to the right Mass.
            </summary>
            <param name="l">Left Mass.</param>
            <param name="r">Right Mass.</param>
            <returns>True if the left Mass is less than or equal to the right Mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_GreaterThanOrEqual(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Mass)">
            <summary>
            Determines if the left Mass is greater than or equal to the right Mass.
            </summary>
            <param name="l">Left Mass.</param>
            <param name="r">Right Mass.</param>
            <returns>True if the left Mass is greater than or equal to the right Mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_GreaterThan(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Mass)">
            <summary>
            Determines if the left Mass is greater than the right Mass.
            </summary>
            <param name="l">Left Mass.</param>
            <param name="r">Right Mass.</param>
            <returns>True if the left Mass is greater than the right Mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Addition(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Mass)">
            <summary>
            Add two Masss together.
            </summary>
            <param name="l">Left Mass.</param>
            <param name="r">Right Mass.</param>
            <returns>Sum of Masss.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_UnaryNegation(Nalco.Numerics.SI.Mass)">
            <summary>
            Negate a Mass.
            </summary>
            <param name="l">Left Mass.</param>
            <returns>Negative Mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Subtraction(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Mass)">
            <summary>
            Subtract two Masss.
            </summary>
            <param name="l">Left Mass.</param>
            <param name="r">Right Mass.</param>
            <returns>Difference of Masss.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Multiply(Nalco.Numerics.SI.Mass,System.Double)">
            <summary>
            Multiply a Mass with a double.
            </summary>
            <param name="l">Left Mass.</param>
            <param name="r">Double value.</param>
            <returns>Mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Multiply(System.Double,Nalco.Numerics.SI.Mass)">
            <summary>
            Multiply a Mass with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Mass.</param>
            <returns>Mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Division(Nalco.Numerics.SI.Mass,System.Double)">
            <summary>
            Divide a Mass by a double.
            </summary>
            <param name="l">Left Mass.</param>
            <param name="r">Double value.</param>
            <returns>Mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Division(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Mass)">
            <summary>
            Divide a Mass by another Mass.
            </summary>
            <param name="l">Left Mass.</param>
            <param name="r">Right Mass.</param>
            <returns>Ratio of the two Masss.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Modulus(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Mass)">
            <summary>
            Divide a Mass by another Mass and return the remainder.
            </summary>
            <param name="l">Left Mass.</param>
            <param name="r">Right Mass.</param>
            <returns>Remainder after a Mass is divided by a Mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Explicit(Nalco.Numerics.SI.Mass)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Mass into a weakly typed Scalar.
            </summary>
            <param name="l">Mass.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Mass">
            <summary>
            Explicitly convert the weakly typed Scalar into a Mass.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Mass.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Mass.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Mass.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Mass.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.#ctor(System.Double)">
            <summary>
            Construct a new Mass with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.GetSpecificHumidity(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Mass)">
            <summary>
            Get a specific humidity from two masses.
            </summary>
            <param name="waterVapour">The mass of water vapour.</param>
            <param name="air">The total mass of air.</param>
            <returns>Resulting specific humidity.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Multiply(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.TimePerMass)">
            <summary>
            Multiply a mass by a time per mass.
            </summary>
            <param name="l">Left mass.</param>
            <param name="r">Right time per mass.</param>
            <returns>Resulting time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Multiply(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Frequency)">
            <summary>
            Multiply a mass by a frequency.
            </summary>
            <param name="l">Left mass.</param>
            <param name="r">Right frequency.</param>
            <returns>Resulting mass rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Division(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Time)">
            <summary>
            Divide a mass by a time.
            </summary>
            <param name="l">Left mass.</param>
            <param name="r">Right time.</param>
            <returns>Resulting mass rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Division(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.MassRate)">
            <summary>
            Divide a mass by a mass rate.
            </summary>
            <param name="l">Left mass.</param>
            <param name="r">Right mass rate.</param>
            <returns>Resulting time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Division(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Volume)">
            <summary>
            Divide a mass by a volume.
            </summary>
            <param name="l">Left mass.</param>
            <param name="r">Right volume.</param>
            <returns>Resulting density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Multiply(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Multiply a mass by an acceleration.
            </summary>
            <param name="l">Left mass.</param>
            <param name="r">Right acceleration.</param>
            <returns>Resulting force.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Multiply(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Multiply a mass by a specific entropy.
            </summary>
            <param name="l">Left mass.</param>
            <param name="r">Right specific entropy.</param>
            <returns>Resulting entropy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Multiply(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Multiply a mass by a specific enthalpy.
            </summary>
            <param name="l">Left mass.</param>
            <param name="r">Right specific enthalpy.</param>
            <returns>Resulting energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Division(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.Density)">
            <summary>
            Divide a mass by a density.
            </summary>
            <param name="l">Left mass.</param>
            <param name="r">Right density.</param>
            <returns>Resulting volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Mass.op_Multiply(Nalco.Numerics.SI.Mass,Nalco.Numerics.SI.ReciprocalMass)">
            <summary>
            Multiply a mass by a reciprocal mass.
            </summary>
            <param name="l">Left mass.</param>
            <param name="r">Right reciprocal mass.</param>
            <returns>Value.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.MassRate">
            <summary>
            Mass rate (kilograms per second).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.MassRate.Zero">
            <summary>
            MassRate of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.#ctor(System.Double,Nalco.Numerics.SI.MassRate.Subunit)">
            <summary>
            Construct a MassRate with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.MassRate.Item(Nalco.Numerics.SI.MassRate.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.MassRate.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.Abbreviation(Nalco.Numerics.SI.MassRate.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.Description(Nalco.Numerics.SI.MassRate.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.MassRate.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.Parse(System.String)">
            <summary>
            Converts the string representation of a MassRate to a MassRate.
            </summary>
            <param name="s">A string that contains a MassRate to convert.</param>
            <returns>A MassRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a MassRate to a MassRate.
            </summary>
            <param name="s">A string that contains a MassRate to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A MassRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a MassRate to a MassRate.
            </summary>
            <param name="s">A string that contains a MassRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A MassRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MassRate.Subunit)">
            <summary>
            Converts the string representation of a MassRate to a MassRate.
            </summary>
            <param name="s">A string that contains a MassRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A MassRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.TryParse(System.String,Nalco.Numerics.SI.MassRate@)">
            <summary>
            Converts the string representation of a MassRate to a MassRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MassRate to convert.</param>
            <param name="result">When this method returns, contains the MassRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.MassRate@)">
            <summary>
            Converts the string representation of a MassRate to a MassRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MassRate to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the MassRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MassRate@)">
            <summary>
            Converts the string representation of a MassRate to a MassRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MassRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the MassRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.MassRate.Subunit,Nalco.Numerics.SI.MassRate@)">
            <summary>
            Converts the string representation of a MassRate to a MassRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a MassRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the MassRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.CompareTo(System.Object)">
            <summary>
            Compares the current MassRate with another MassRate.
            </summary>
            <param name="obj">MassRate to compare with this MassRate.</param>
            <returns>Less than zero when this MassRate is less than the other parameter.
            Zero when this MassRate is equal to the other parameter.
            Greater than zero when this MassRate is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of MassRate.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.CompareTo(Nalco.Numerics.SI.MassRate)">
            <summary>
            Compares the current MassRate with another MassRate.
            </summary>
            <param name="other">MassRate to compare with this MassRate.</param>
            <returns>Less than zero when this MassRate is less than the other parameter.
            Zero when this MassRate is equal to the other parameter.
            Greater than zero when this MassRate is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current MassRate.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.Abs(Nalco.Numerics.SI.MassRate)">
            <summary>
            Returns the absolute value of a MassRate.
            </summary>
            <param name="value">A MassRate.</param>
            <returns>A MassRate that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.Round(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.MassRate)">
            <summary>
            Returns a MassRate rounded to the nearest interval.
            </summary>
            <param name="value">A MassRate.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MassRate rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.Round(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.MassRate,System.MidpointRounding)">
            <summary>
            Returns a MassRate rounded to the nearest interval.
            </summary>
            <param name="value">A MassRate.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A MassRate rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.Floor(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.MassRate)">
            <summary>
            Returns a MassRate rounded down to the nearest interval.
            </summary>
            <param name="value">A MassRate.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MassRate rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.Ceiling(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.MassRate)">
            <summary>
            Returns a MassRate rounded up to the nearest interval.
            </summary>
            <param name="value">A MassRate.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A MassRate rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Equality(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.MassRate)">
            <summary>
            Determines whether two MassRates are equal.
            </summary>
            <param name="l">Left MassRate.</param>
            <param name="r">Right MassRate.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Inequality(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.MassRate)">
            <summary>
            Determines whether two MassRates are not equal.
            </summary>
            <param name="l">Left MassRate.</param>
            <param name="r">Right MassRate.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_LessThan(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.MassRate)">
            <summary>
            Determines if the left MassRate is less than the right MassRate.
            </summary>
            <param name="l">Left MassRate.</param>
            <param name="r">Right MassRate.</param>
            <returns>True if the left MassRate is less than the right MassRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_LessThanOrEqual(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.MassRate)">
            <summary>
            Determines if the left MassRate is less than or equal to the right MassRate.
            </summary>
            <param name="l">Left MassRate.</param>
            <param name="r">Right MassRate.</param>
            <returns>True if the left MassRate is less than or equal to the right MassRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_GreaterThanOrEqual(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.MassRate)">
            <summary>
            Determines if the left MassRate is greater than or equal to the right MassRate.
            </summary>
            <param name="l">Left MassRate.</param>
            <param name="r">Right MassRate.</param>
            <returns>True if the left MassRate is greater than or equal to the right MassRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_GreaterThan(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.MassRate)">
            <summary>
            Determines if the left MassRate is greater than the right MassRate.
            </summary>
            <param name="l">Left MassRate.</param>
            <param name="r">Right MassRate.</param>
            <returns>True if the left MassRate is greater than the right MassRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Addition(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.MassRate)">
            <summary>
            Add two MassRates together.
            </summary>
            <param name="l">Left MassRate.</param>
            <param name="r">Right MassRate.</param>
            <returns>Sum of MassRates.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_UnaryNegation(Nalco.Numerics.SI.MassRate)">
            <summary>
            Negate a MassRate.
            </summary>
            <param name="l">Left MassRate.</param>
            <returns>Negative MassRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Subtraction(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.MassRate)">
            <summary>
            Subtract two MassRates.
            </summary>
            <param name="l">Left MassRate.</param>
            <param name="r">Right MassRate.</param>
            <returns>Difference of MassRates.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Multiply(Nalco.Numerics.SI.MassRate,System.Double)">
            <summary>
            Multiply a MassRate with a double.
            </summary>
            <param name="l">Left MassRate.</param>
            <param name="r">Double value.</param>
            <returns>MassRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Multiply(System.Double,Nalco.Numerics.SI.MassRate)">
            <summary>
            Multiply a MassRate with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right MassRate.</param>
            <returns>MassRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Division(Nalco.Numerics.SI.MassRate,System.Double)">
            <summary>
            Divide a MassRate by a double.
            </summary>
            <param name="l">Left MassRate.</param>
            <param name="r">Double value.</param>
            <returns>MassRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Division(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.MassRate)">
            <summary>
            Divide a MassRate by another MassRate.
            </summary>
            <param name="l">Left MassRate.</param>
            <param name="r">Right MassRate.</param>
            <returns>Ratio of the two MassRates.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Modulus(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.MassRate)">
            <summary>
            Divide a MassRate by another MassRate and return the remainder.
            </summary>
            <param name="l">Left MassRate.</param>
            <param name="r">Right MassRate.</param>
            <returns>Remainder after a MassRate is divided by a MassRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Explicit(Nalco.Numerics.SI.MassRate)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the MassRate into a weakly typed Scalar.
            </summary>
            <param name="l">MassRate.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.MassRate">
            <summary>
            Explicitly convert the weakly typed Scalar into a MassRate.
            </summary>
            <param name="s">Scalar.</param>
            <returns>MassRate.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.MassRate.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.MassRate.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.MassRate.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.#ctor(System.Double)">
            <summary>
            Construct a new MassRate with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Multiply(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.Time)">
            <summary>
            Multiply a mass rate by a time.
            </summary>
            <param name="l">Left mass rate.</param>
            <param name="r">Right time.</param>
            <returns>Resulting mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Division(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.Mass)">
            <summary>
            Divide a mass rate by a mass.
            </summary>
            <param name="l">Left mass rate.</param>
            <param name="r">Right mass.</param>
            <returns>Resulting frequency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Division(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.Frequency)">
            <summary>
            Divide a mass rate by a frequency.
            </summary>
            <param name="l">Mass rate.</param>
            <param name="r">Frequency.</param>
            <returns>Resulting mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Division(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.Density)">
            <summary>
            Divide a mass rate by a density.
            </summary>
            <param name="l">Left mass rate.</param>
            <param name="r">Right density.</param>
            <returns>Resulting volume rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Multiply(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Multiply a mass rate by a specific humidity.
            </summary>
            <param name="l">Left mass rate.</param>
            <param name="r">Right specific humidity.</param>
            <returns>Resulting mass rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Division(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.SpecificHumidity)">
            <summary>
            Divide a mass rate by a specific humidity.
            </summary>
            <param name="l">Left mass rate.</param>
            <param name="r">Right specific humidity.</param>
            <returns>Resulting mass rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Multiply(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Multiply a mass rate by a specific volume.
            </summary>
            <param name="l">Left mass rate.</param>
            <param name="r">Right specific volume.</param>
            <returns>Resulting volume rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Multiply(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.AvailableEnergy)">
            <summary>
            Multiply a mass rate by an available energy.
            </summary>
            <param name="l">Left mass rate.</param>
            <param name="r">Right available energy.</param>
            <returns>Resulting power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Multiply(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Multiply a mass rate by a specific enthalpy.
            </summary>
            <param name="l">Left mass rate.</param>
            <param name="r">Right specific enthalpy.</param>
            <returns>Resulting power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Division(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Divide a mass rate by a volume rate.
            </summary>
            <param name="l">Left mass rate.</param>
            <param name="r">Right volume rate.</param>
            <returns>Resulting density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Division(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.Power)">
            <summary>
            Divide a mass rate by a power.
            </summary>
            <param name="l">Left mass rate.</param>
            <param name="r">Right power.</param>
            <returns>Resulting emission factor.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.MassRate.op_Division(Nalco.Numerics.SI.MassRate,Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Divide a mass rate by an emission factor.
            </summary>
            <param name="l">Left mass rate.</param>
            <param name="r">Right emission factor.</param>
            <returns>Resulting power.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Power">
            <summary>
            Power (watts).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Power.Zero">
            <summary>
            Power of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.#ctor(System.Double,Nalco.Numerics.SI.Power.Subunit)">
            <summary>
            Construct a Power with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Power.Item(Nalco.Numerics.SI.Power.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Power.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.Abbreviation(Nalco.Numerics.SI.Power.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.Description(Nalco.Numerics.SI.Power.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Power.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.Parse(System.String)">
            <summary>
            Converts the string representation of a Power to a Power.
            </summary>
            <param name="s">A string that contains a Power to convert.</param>
            <returns>A Power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Power to a Power.
            </summary>
            <param name="s">A string that contains a Power to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Power to a Power.
            </summary>
            <param name="s">A string that contains a Power to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Power.Subunit)">
            <summary>
            Converts the string representation of a Power to a Power.
            </summary>
            <param name="s">A string that contains a Power to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.TryParse(System.String,Nalco.Numerics.SI.Power@)">
            <summary>
            Converts the string representation of a Power to a Power. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Power to convert.</param>
            <param name="result">When this method returns, contains the Power, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Power@)">
            <summary>
            Converts the string representation of a Power to a Power. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Power to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Power, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Power@)">
            <summary>
            Converts the string representation of a Power to a Power. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Power to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Power, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Power.Subunit,Nalco.Numerics.SI.Power@)">
            <summary>
            Converts the string representation of a Power to a Power. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Power to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Power, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.CompareTo(System.Object)">
            <summary>
            Compares the current Power with another Power.
            </summary>
            <param name="obj">Power to compare with this Power.</param>
            <returns>Less than zero when this Power is less than the other parameter.
            Zero when this Power is equal to the other parameter.
            Greater than zero when this Power is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Power.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.CompareTo(Nalco.Numerics.SI.Power)">
            <summary>
            Compares the current Power with another Power.
            </summary>
            <param name="other">Power to compare with this Power.</param>
            <returns>Less than zero when this Power is less than the other parameter.
            Zero when this Power is equal to the other parameter.
            Greater than zero when this Power is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Power.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.Abs(Nalco.Numerics.SI.Power)">
            <summary>
            Returns the absolute value of a Power.
            </summary>
            <param name="value">A Power.</param>
            <returns>A Power that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.Round(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Power)">
            <summary>
            Returns a Power rounded to the nearest interval.
            </summary>
            <param name="value">A Power.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Power rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.Round(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Power,System.MidpointRounding)">
            <summary>
            Returns a Power rounded to the nearest interval.
            </summary>
            <param name="value">A Power.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Power rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.Floor(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Power)">
            <summary>
            Returns a Power rounded down to the nearest interval.
            </summary>
            <param name="value">A Power.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Power rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.Ceiling(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Power)">
            <summary>
            Returns a Power rounded up to the nearest interval.
            </summary>
            <param name="value">A Power.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Power rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Equality(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Power)">
            <summary>
            Determines whether two Powers are equal.
            </summary>
            <param name="l">Left Power.</param>
            <param name="r">Right Power.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Inequality(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Power)">
            <summary>
            Determines whether two Powers are not equal.
            </summary>
            <param name="l">Left Power.</param>
            <param name="r">Right Power.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_LessThan(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Power)">
            <summary>
            Determines if the left Power is less than the right Power.
            </summary>
            <param name="l">Left Power.</param>
            <param name="r">Right Power.</param>
            <returns>True if the left Power is less than the right Power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_LessThanOrEqual(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Power)">
            <summary>
            Determines if the left Power is less than or equal to the right Power.
            </summary>
            <param name="l">Left Power.</param>
            <param name="r">Right Power.</param>
            <returns>True if the left Power is less than or equal to the right Power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_GreaterThanOrEqual(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Power)">
            <summary>
            Determines if the left Power is greater than or equal to the right Power.
            </summary>
            <param name="l">Left Power.</param>
            <param name="r">Right Power.</param>
            <returns>True if the left Power is greater than or equal to the right Power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_GreaterThan(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Power)">
            <summary>
            Determines if the left Power is greater than the right Power.
            </summary>
            <param name="l">Left Power.</param>
            <param name="r">Right Power.</param>
            <returns>True if the left Power is greater than the right Power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Addition(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Power)">
            <summary>
            Add two Powers together.
            </summary>
            <param name="l">Left Power.</param>
            <param name="r">Right Power.</param>
            <returns>Sum of Powers.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_UnaryNegation(Nalco.Numerics.SI.Power)">
            <summary>
            Negate a Power.
            </summary>
            <param name="l">Left Power.</param>
            <returns>Negative Power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Subtraction(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Power)">
            <summary>
            Subtract two Powers.
            </summary>
            <param name="l">Left Power.</param>
            <param name="r">Right Power.</param>
            <returns>Difference of Powers.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Multiply(Nalco.Numerics.SI.Power,System.Double)">
            <summary>
            Multiply a Power with a double.
            </summary>
            <param name="l">Left Power.</param>
            <param name="r">Double value.</param>
            <returns>Power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Multiply(System.Double,Nalco.Numerics.SI.Power)">
            <summary>
            Multiply a Power with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Power.</param>
            <returns>Power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Division(Nalco.Numerics.SI.Power,System.Double)">
            <summary>
            Divide a Power by a double.
            </summary>
            <param name="l">Left Power.</param>
            <param name="r">Double value.</param>
            <returns>Power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Division(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Power)">
            <summary>
            Divide a Power by another Power.
            </summary>
            <param name="l">Left Power.</param>
            <param name="r">Right Power.</param>
            <returns>Ratio of the two Powers.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Modulus(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Power)">
            <summary>
            Divide a Power by another Power and return the remainder.
            </summary>
            <param name="l">Left Power.</param>
            <param name="r">Right Power.</param>
            <returns>Remainder after a Power is divided by a Power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Explicit(Nalco.Numerics.SI.Power)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Power into a weakly typed Scalar.
            </summary>
            <param name="l">Power.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Power">
            <summary>
            Explicitly convert the weakly typed Scalar into a Power.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Power.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Power.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Power.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Power.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.#ctor(System.Double)">
            <summary>
            Construct a new Power with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Multiply(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Time)">
            <summary>
            Multiply a power by a time.
            </summary>
            <param name="l">Left power.</param>
            <param name="r">Right time.</param>
            <returns>Resulting energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Division(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Frequency)">
            <summary>
            Divide a power by a frequency.
            </summary>
            <param name="l">Left power.</param>
            <param name="r">Right frequency.</param>
            <returns>Resulting energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Division(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Energy)">
            <summary>
            Divide a power by a energy.
            </summary>
            <param name="l">Left power.</param>
            <param name="r">Right energy.</param>
            <returns>Resulting frequency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Division(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.ElectricPotentialDifference)">
            <summary>
            Divide a power by an electric potential difference.
            </summary>
            <param name="l">Left power.</param>
            <param name="r">Right electric potential difference.</param>
            <returns>Resulting electric current.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Division(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.ElectricCurrent)">
            <summary>
            Divide a power by an electric current.
            </summary>
            <param name="l">Left power.</param>
            <param name="r">Right electric current.</param>
            <returns>Resulting electric potential difference.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Division(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.Pressure)">
            <summary>
            Divide a power by a pressure.
            </summary>
            <param name="l">Left power.</param>
            <param name="r">Right pressure.</param>
            <returns>Resulting volume rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Division(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Divide a power by a volume rate.
            </summary>
            <param name="l">Left power.</param>
            <param name="r">Right volume rate.</param>
            <returns>Resulting pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Division(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.MassRate)">
            <summary>
            Divide a power by a mass rate.
            </summary>
            <param name="l">Left power.</param>
            <param name="r">Right mass rate.</param>
            <returns>Resulting specific enthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Division(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Divide a power by a specific enthalpy.
            </summary>
            <param name="l">Left power.</param>
            <param name="r">Right specific enthalpy.</param>
            <returns>Resulting mass rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Division(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Divide a power by energy density.
            </summary>
            <param name="l">Left power.</param>
            <param name="r">Right enery density.</param>
            <returns>Resulting volume rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Multiply(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.EmissionFactor)">
            <summary>
            Multiply a power by emission factor.
            </summary>
            <param name="l">Left power.</param>
            <param name="r">Right emission factor.</param>
            <returns>Resulting mass rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Power.op_Multiply(Nalco.Numerics.SI.Power,Nalco.Numerics.SI.PowerEfficiency)">
            <summary>
            Multiply a power by power efficiency
            </summary>
            <param name="l">Left power.</param>
            <param name="r">Right power efficiency.</param>
            <returns>Resulting power.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Pressure">
            <summary>
            Pressure (pascals).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Pressure.Zero">
            <summary>
            Pressure of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.#ctor(System.Double,Nalco.Numerics.SI.Pressure.Subunit)">
            <summary>
            Construct a Pressure with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Pressure.Item(Nalco.Numerics.SI.Pressure.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Pressure.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.Abbreviation(Nalco.Numerics.SI.Pressure.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.Description(Nalco.Numerics.SI.Pressure.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Pressure.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.Parse(System.String)">
            <summary>
            Converts the string representation of a Pressure to a Pressure.
            </summary>
            <param name="s">A string that contains a Pressure to convert.</param>
            <returns>A Pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Pressure to a Pressure.
            </summary>
            <param name="s">A string that contains a Pressure to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Pressure to a Pressure.
            </summary>
            <param name="s">A string that contains a Pressure to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Pressure.Subunit)">
            <summary>
            Converts the string representation of a Pressure to a Pressure.
            </summary>
            <param name="s">A string that contains a Pressure to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.TryParse(System.String,Nalco.Numerics.SI.Pressure@)">
            <summary>
            Converts the string representation of a Pressure to a Pressure. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Pressure to convert.</param>
            <param name="result">When this method returns, contains the Pressure, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Pressure@)">
            <summary>
            Converts the string representation of a Pressure to a Pressure. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Pressure to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Pressure, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Pressure@)">
            <summary>
            Converts the string representation of a Pressure to a Pressure. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Pressure to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Pressure, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Pressure.Subunit,Nalco.Numerics.SI.Pressure@)">
            <summary>
            Converts the string representation of a Pressure to a Pressure. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Pressure to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Pressure, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.CompareTo(System.Object)">
            <summary>
            Compares the current Pressure with another Pressure.
            </summary>
            <param name="obj">Pressure to compare with this Pressure.</param>
            <returns>Less than zero when this Pressure is less than the other parameter.
            Zero when this Pressure is equal to the other parameter.
            Greater than zero when this Pressure is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Pressure.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.CompareTo(Nalco.Numerics.SI.Pressure)">
            <summary>
            Compares the current Pressure with another Pressure.
            </summary>
            <param name="other">Pressure to compare with this Pressure.</param>
            <returns>Less than zero when this Pressure is less than the other parameter.
            Zero when this Pressure is equal to the other parameter.
            Greater than zero when this Pressure is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Pressure.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.Abs(Nalco.Numerics.SI.Pressure)">
            <summary>
            Returns the absolute value of a Pressure.
            </summary>
            <param name="value">A Pressure.</param>
            <returns>A Pressure that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.Round(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.Pressure)">
            <summary>
            Returns a Pressure rounded to the nearest interval.
            </summary>
            <param name="value">A Pressure.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Pressure rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.Round(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.Pressure,System.MidpointRounding)">
            <summary>
            Returns a Pressure rounded to the nearest interval.
            </summary>
            <param name="value">A Pressure.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Pressure rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.Floor(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.Pressure)">
            <summary>
            Returns a Pressure rounded down to the nearest interval.
            </summary>
            <param name="value">A Pressure.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Pressure rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.Ceiling(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.Pressure)">
            <summary>
            Returns a Pressure rounded up to the nearest interval.
            </summary>
            <param name="value">A Pressure.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Pressure rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_Equality(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.Pressure)">
            <summary>
            Determines whether two Pressures are equal.
            </summary>
            <param name="l">Left Pressure.</param>
            <param name="r">Right Pressure.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_Inequality(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.Pressure)">
            <summary>
            Determines whether two Pressures are not equal.
            </summary>
            <param name="l">Left Pressure.</param>
            <param name="r">Right Pressure.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_LessThan(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.Pressure)">
            <summary>
            Determines if the left Pressure is less than the right Pressure.
            </summary>
            <param name="l">Left Pressure.</param>
            <param name="r">Right Pressure.</param>
            <returns>True if the left Pressure is less than the right Pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_LessThanOrEqual(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.Pressure)">
            <summary>
            Determines if the left Pressure is less than or equal to the right Pressure.
            </summary>
            <param name="l">Left Pressure.</param>
            <param name="r">Right Pressure.</param>
            <returns>True if the left Pressure is less than or equal to the right Pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_GreaterThanOrEqual(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.Pressure)">
            <summary>
            Determines if the left Pressure is greater than or equal to the right Pressure.
            </summary>
            <param name="l">Left Pressure.</param>
            <param name="r">Right Pressure.</param>
            <returns>True if the left Pressure is greater than or equal to the right Pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_GreaterThan(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.Pressure)">
            <summary>
            Determines if the left Pressure is greater than the right Pressure.
            </summary>
            <param name="l">Left Pressure.</param>
            <param name="r">Right Pressure.</param>
            <returns>True if the left Pressure is greater than the right Pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_Addition(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.Pressure)">
            <summary>
            Add two Pressures together.
            </summary>
            <param name="l">Left Pressure.</param>
            <param name="r">Right Pressure.</param>
            <returns>Sum of Pressures.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_UnaryNegation(Nalco.Numerics.SI.Pressure)">
            <summary>
            Negate a Pressure.
            </summary>
            <param name="l">Left Pressure.</param>
            <returns>Negative Pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_Subtraction(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.Pressure)">
            <summary>
            Subtract two Pressures.
            </summary>
            <param name="l">Left Pressure.</param>
            <param name="r">Right Pressure.</param>
            <returns>Difference of Pressures.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_Multiply(Nalco.Numerics.SI.Pressure,System.Double)">
            <summary>
            Multiply a Pressure with a double.
            </summary>
            <param name="l">Left Pressure.</param>
            <param name="r">Double value.</param>
            <returns>Pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_Multiply(System.Double,Nalco.Numerics.SI.Pressure)">
            <summary>
            Multiply a Pressure with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Pressure.</param>
            <returns>Pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_Division(Nalco.Numerics.SI.Pressure,System.Double)">
            <summary>
            Divide a Pressure by a double.
            </summary>
            <param name="l">Left Pressure.</param>
            <param name="r">Double value.</param>
            <returns>Pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_Division(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.Pressure)">
            <summary>
            Divide a Pressure by another Pressure.
            </summary>
            <param name="l">Left Pressure.</param>
            <param name="r">Right Pressure.</param>
            <returns>Ratio of the two Pressures.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_Modulus(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.Pressure)">
            <summary>
            Divide a Pressure by another Pressure and return the remainder.
            </summary>
            <param name="l">Left Pressure.</param>
            <param name="r">Right Pressure.</param>
            <returns>Remainder after a Pressure is divided by a Pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_Explicit(Nalco.Numerics.SI.Pressure)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Pressure into a weakly typed Scalar.
            </summary>
            <param name="l">Pressure.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Pressure">
            <summary>
            Explicitly convert the weakly typed Scalar into a Pressure.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Pressure.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.Pressure.ISAPressure">
            <summary>
            The International Standard Atmosphere pressure.
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.Pressure.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Pressure.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Pressure.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.#ctor(System.Double)">
            <summary>
            Construct a new Pressure with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.CalcPressureFromAltitude(Nalco.Numerics.SI.Length)">
            <summary>
            Calculates the pressure from a given altitude.
            </summary>
            <param name="altitude">Altitude.</param>
            <returns>Resulting pressure.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.CalcAltitudeFromPressure(Nalco.Numerics.SI.Pressure)">
            <summary>
            Calculates the altitude from a given pressure.
            </summary>
            <param name="pressure">Pressure.</param>
            <returns>Resulting altitude.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_Multiply(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Multiply a pressure by a volume rate.
            </summary>
            <param name="l">Left pressure.</param>
            <param name="r">Right volume rate.</param>
            <returns>Resulting power.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_Multiply(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Multiply a pressure by a specific volume.
            </summary>
            <param name="l">Left pressure.</param>
            <param name="r">Right specific volume.</param>
            <returns>Resulting specific enthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_Division(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.Density)">
            <summary>
            Divide a pressure by a density.
            </summary>
            <param name="l">Left pressure.</param>
            <param name="r">Right density.</param>
            <returns>Resulting specific enthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_Division(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.SpecificEnthalpy)">
            <summary>
            Divide a pressure by a specific enthalpy.
            </summary>
            <param name="l">Left pressure.</param>
            <param name="r">Right specific enthalpy.</param>
            <returns>Resulting density.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Pressure.op_Multiply(Nalco.Numerics.SI.Pressure,Nalco.Numerics.SI.Volume)">
            <summary>
            Multiply a pressure by a volume.
            </summary>
            <param name="l">Left pressure.</param>
            <param name="r">Right volume.</param>
            <returns>Resulting energy.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Temperature">
            <summary>
            Temperature (kelvins).
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.#ctor(System.Double,Nalco.Numerics.SI.Temperature.Subunit)">
            <summary>
            Construct a Temperature with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Temperature.Item(Nalco.Numerics.SI.Temperature.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Temperature.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.Abbreviation(Nalco.Numerics.SI.Temperature.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.Description(Nalco.Numerics.SI.Temperature.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Temperature.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.Parse(System.String)">
            <summary>
            Converts the string representation of a Temperature to a Temperature.
            </summary>
            <param name="s">A string that contains a Temperature to convert.</param>
            <returns>A Temperature.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Temperature to a Temperature.
            </summary>
            <param name="s">A string that contains a Temperature to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Temperature.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Temperature to a Temperature.
            </summary>
            <param name="s">A string that contains a Temperature to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Temperature.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Temperature.Subunit)">
            <summary>
            Converts the string representation of a Temperature to a Temperature.
            </summary>
            <param name="s">A string that contains a Temperature to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Temperature.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.TryParse(System.String,Nalco.Numerics.SI.Temperature@)">
            <summary>
            Converts the string representation of a Temperature to a Temperature. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Temperature to convert.</param>
            <param name="result">When this method returns, contains the Temperature, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Temperature@)">
            <summary>
            Converts the string representation of a Temperature to a Temperature. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Temperature to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Temperature, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Temperature@)">
            <summary>
            Converts the string representation of a Temperature to a Temperature. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Temperature to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Temperature, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Temperature.Subunit,Nalco.Numerics.SI.Temperature@)">
            <summary>
            Converts the string representation of a Temperature to a Temperature. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Temperature to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Temperature, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.CompareTo(System.Object)">
            <summary>
            Compares the current Temperature with another Temperature.
            </summary>
            <param name="obj">Temperature to compare with this Temperature.</param>
            <returns>Less than zero when this Temperature is less than the other parameter.
            Zero when this Temperature is equal to the other parameter.
            Greater than zero when this Temperature is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Temperature.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.CompareTo(Nalco.Numerics.SI.Temperature)">
            <summary>
            Compares the current Temperature with another Temperature.
            </summary>
            <param name="other">Temperature to compare with this Temperature.</param>
            <returns>Less than zero when this Temperature is less than the other parameter.
            Zero when this Temperature is equal to the other parameter.
            Greater than zero when this Temperature is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Temperature.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.Abs(Nalco.Numerics.SI.Temperature)">
            <summary>
            Returns the absolute value of a Temperature.
            </summary>
            <param name="value">A Temperature.</param>
            <returns>A Temperature that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.Round(Nalco.Numerics.SI.Temperature,Nalco.Numerics.SI.Temperature)">
            <summary>
            Returns a Temperature rounded to the nearest interval.
            </summary>
            <param name="value">A Temperature.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Temperature rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.Round(Nalco.Numerics.SI.Temperature,Nalco.Numerics.SI.Temperature,System.MidpointRounding)">
            <summary>
            Returns a Temperature rounded to the nearest interval.
            </summary>
            <param name="value">A Temperature.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Temperature rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.Floor(Nalco.Numerics.SI.Temperature,Nalco.Numerics.SI.Temperature)">
            <summary>
            Returns a Temperature rounded down to the nearest interval.
            </summary>
            <param name="value">A Temperature.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Temperature rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.Ceiling(Nalco.Numerics.SI.Temperature,Nalco.Numerics.SI.Temperature)">
            <summary>
            Returns a Temperature rounded up to the nearest interval.
            </summary>
            <param name="value">A Temperature.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Temperature rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.op_Equality(Nalco.Numerics.SI.Temperature,Nalco.Numerics.SI.Temperature)">
            <summary>
            Determines whether two Temperatures are equal.
            </summary>
            <param name="l">Left Temperature.</param>
            <param name="r">Right Temperature.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.op_Inequality(Nalco.Numerics.SI.Temperature,Nalco.Numerics.SI.Temperature)">
            <summary>
            Determines whether two Temperatures are not equal.
            </summary>
            <param name="l">Left Temperature.</param>
            <param name="r">Right Temperature.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.op_LessThan(Nalco.Numerics.SI.Temperature,Nalco.Numerics.SI.Temperature)">
            <summary>
            Determines if the left Temperature is less than the right Temperature.
            </summary>
            <param name="l">Left Temperature.</param>
            <param name="r">Right Temperature.</param>
            <returns>True if the left Temperature is less than the right Temperature.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.op_LessThanOrEqual(Nalco.Numerics.SI.Temperature,Nalco.Numerics.SI.Temperature)">
            <summary>
            Determines if the left Temperature is less than or equal to the right Temperature.
            </summary>
            <param name="l">Left Temperature.</param>
            <param name="r">Right Temperature.</param>
            <returns>True if the left Temperature is less than or equal to the right Temperature.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.op_GreaterThanOrEqual(Nalco.Numerics.SI.Temperature,Nalco.Numerics.SI.Temperature)">
            <summary>
            Determines if the left Temperature is greater than or equal to the right Temperature.
            </summary>
            <param name="l">Left Temperature.</param>
            <param name="r">Right Temperature.</param>
            <returns>True if the left Temperature is greater than or equal to the right Temperature.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.op_GreaterThan(Nalco.Numerics.SI.Temperature,Nalco.Numerics.SI.Temperature)">
            <summary>
            Determines if the left Temperature is greater than the right Temperature.
            </summary>
            <param name="l">Left Temperature.</param>
            <param name="r">Right Temperature.</param>
            <returns>True if the left Temperature is greater than the right Temperature.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.op_Explicit(Nalco.Numerics.SI.Temperature)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Temperature into a weakly typed Scalar.
            </summary>
            <param name="l">Temperature.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Temperature">
            <summary>
            Explicitly convert the weakly typed Scalar into a Temperature.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Temperature.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.Temperature.FreezingPoint">
            <summary>
            Temperature at which water freezes.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Temperature.Zero">
            <summary>
            Temperature at 0 kelvin. 
            This is a helper function to allow easier conversion between
            Temperature and TemperatureInterval and also for 0 kelvin
            value comparisons
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.Temperature.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Temperature.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Temperature.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.#ctor(System.Double)">
            <summary>
            Construct a new Temperature with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.op_Addition(Nalco.Numerics.SI.Temperature,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Add a temperature and a temperature interval.
            </summary>
            <param name="l">Left temperature.</param>
            <param name="r">Right temperature interval.</param>
            <returns>Resulting temperature.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.op_Subtraction(Nalco.Numerics.SI.Temperature,Nalco.Numerics.SI.Temperature)">
            <summary>
            Subtract a temperature from another temperature.
            </summary>
            <param name="l">Left temperature.</param>
            <param name="r">Right temperature.</param>
            <returns>Resulting temperature.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.op_Subtraction(Nalco.Numerics.SI.Temperature,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Subtract a temperature interval from a temperature.
            </summary>
            <param name="l">Left temperature.</param>
            <param name="r">Right temperature.</param>
            <returns>Resulting temperature.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.op_Multiply(Nalco.Numerics.SI.Temperature,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Multiply a temperature by a specific heat capacity.
            </summary>
            <param name="l">Left temperature.</param>
            <param name="r">Right specific heat capacity.</param>
            <returns>Resulting specific enthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Temperature.op_Division(Nalco.Numerics.SI.Temperature,Nalco.Numerics.SI.Temperature)">
            <summary>
            Returns the ratio of two temperatures
            </summary>
            <param name="l">Temperature</param>
            <param name="r">Temperature</param>
            <returns>Ratio of the given temperatures</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.TemperatureInterval">
            <summary>
            Temperature interval (kelvins).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.TemperatureInterval.Zero">
            <summary>
            TemperatureInterval of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.#ctor(System.Double,Nalco.Numerics.SI.TemperatureInterval.Subunit)">
            <summary>
            Construct a TemperatureInterval with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.TemperatureInterval.Item(Nalco.Numerics.SI.TemperatureInterval.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.TemperatureInterval.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.Abbreviation(Nalco.Numerics.SI.TemperatureInterval.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.Description(Nalco.Numerics.SI.TemperatureInterval.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.TemperatureInterval.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.Parse(System.String)">
            <summary>
            Converts the string representation of a TemperatureInterval to a TemperatureInterval.
            </summary>
            <param name="s">A string that contains a TemperatureInterval to convert.</param>
            <returns>A TemperatureInterval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a TemperatureInterval to a TemperatureInterval.
            </summary>
            <param name="s">A string that contains a TemperatureInterval to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A TemperatureInterval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a TemperatureInterval to a TemperatureInterval.
            </summary>
            <param name="s">A string that contains a TemperatureInterval to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A TemperatureInterval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.TemperatureInterval.Subunit)">
            <summary>
            Converts the string representation of a TemperatureInterval to a TemperatureInterval.
            </summary>
            <param name="s">A string that contains a TemperatureInterval to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A TemperatureInterval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.TryParse(System.String,Nalco.Numerics.SI.TemperatureInterval@)">
            <summary>
            Converts the string representation of a TemperatureInterval to a TemperatureInterval. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a TemperatureInterval to convert.</param>
            <param name="result">When this method returns, contains the TemperatureInterval, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.TemperatureInterval@)">
            <summary>
            Converts the string representation of a TemperatureInterval to a TemperatureInterval. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a TemperatureInterval to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the TemperatureInterval, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.TemperatureInterval@)">
            <summary>
            Converts the string representation of a TemperatureInterval to a TemperatureInterval. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a TemperatureInterval to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the TemperatureInterval, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.TemperatureInterval.Subunit,Nalco.Numerics.SI.TemperatureInterval@)">
            <summary>
            Converts the string representation of a TemperatureInterval to a TemperatureInterval. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a TemperatureInterval to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the TemperatureInterval, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.CompareTo(System.Object)">
            <summary>
            Compares the current TemperatureInterval with another TemperatureInterval.
            </summary>
            <param name="obj">TemperatureInterval to compare with this TemperatureInterval.</param>
            <returns>Less than zero when this TemperatureInterval is less than the other parameter.
            Zero when this TemperatureInterval is equal to the other parameter.
            Greater than zero when this TemperatureInterval is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of TemperatureInterval.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.CompareTo(Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Compares the current TemperatureInterval with another TemperatureInterval.
            </summary>
            <param name="other">TemperatureInterval to compare with this TemperatureInterval.</param>
            <returns>Less than zero when this TemperatureInterval is less than the other parameter.
            Zero when this TemperatureInterval is equal to the other parameter.
            Greater than zero when this TemperatureInterval is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current TemperatureInterval.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.Abs(Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Returns the absolute value of a TemperatureInterval.
            </summary>
            <param name="value">A TemperatureInterval.</param>
            <returns>A TemperatureInterval that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.Round(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Returns a TemperatureInterval rounded to the nearest interval.
            </summary>
            <param name="value">A TemperatureInterval.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A TemperatureInterval rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.Round(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.TemperatureInterval,System.MidpointRounding)">
            <summary>
            Returns a TemperatureInterval rounded to the nearest interval.
            </summary>
            <param name="value">A TemperatureInterval.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A TemperatureInterval rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.Floor(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Returns a TemperatureInterval rounded down to the nearest interval.
            </summary>
            <param name="value">A TemperatureInterval.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A TemperatureInterval rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.Ceiling(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Returns a TemperatureInterval rounded up to the nearest interval.
            </summary>
            <param name="value">A TemperatureInterval.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A TemperatureInterval rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Equality(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Determines whether two TemperatureIntervals are equal.
            </summary>
            <param name="l">Left TemperatureInterval.</param>
            <param name="r">Right TemperatureInterval.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Inequality(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Determines whether two TemperatureIntervals are not equal.
            </summary>
            <param name="l">Left TemperatureInterval.</param>
            <param name="r">Right TemperatureInterval.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_LessThan(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Determines if the left TemperatureInterval is less than the right TemperatureInterval.
            </summary>
            <param name="l">Left TemperatureInterval.</param>
            <param name="r">Right TemperatureInterval.</param>
            <returns>True if the left TemperatureInterval is less than the right TemperatureInterval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_LessThanOrEqual(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Determines if the left TemperatureInterval is less than or equal to the right TemperatureInterval.
            </summary>
            <param name="l">Left TemperatureInterval.</param>
            <param name="r">Right TemperatureInterval.</param>
            <returns>True if the left TemperatureInterval is less than or equal to the right TemperatureInterval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_GreaterThanOrEqual(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Determines if the left TemperatureInterval is greater than or equal to the right TemperatureInterval.
            </summary>
            <param name="l">Left TemperatureInterval.</param>
            <param name="r">Right TemperatureInterval.</param>
            <returns>True if the left TemperatureInterval is greater than or equal to the right TemperatureInterval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_GreaterThan(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Determines if the left TemperatureInterval is greater than the right TemperatureInterval.
            </summary>
            <param name="l">Left TemperatureInterval.</param>
            <param name="r">Right TemperatureInterval.</param>
            <returns>True if the left TemperatureInterval is greater than the right TemperatureInterval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Addition(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Add two TemperatureIntervals together.
            </summary>
            <param name="l">Left TemperatureInterval.</param>
            <param name="r">Right TemperatureInterval.</param>
            <returns>Sum of TemperatureIntervals.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_UnaryNegation(Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Negate a TemperatureInterval.
            </summary>
            <param name="l">Left TemperatureInterval.</param>
            <returns>Negative TemperatureInterval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Subtraction(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Subtract two TemperatureIntervals.
            </summary>
            <param name="l">Left TemperatureInterval.</param>
            <param name="r">Right TemperatureInterval.</param>
            <returns>Difference of TemperatureIntervals.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Multiply(Nalco.Numerics.SI.TemperatureInterval,System.Double)">
            <summary>
            Multiply a TemperatureInterval with a double.
            </summary>
            <param name="l">Left TemperatureInterval.</param>
            <param name="r">Double value.</param>
            <returns>TemperatureInterval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Multiply(System.Double,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Multiply a TemperatureInterval with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right TemperatureInterval.</param>
            <returns>TemperatureInterval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Division(Nalco.Numerics.SI.TemperatureInterval,System.Double)">
            <summary>
            Divide a TemperatureInterval by a double.
            </summary>
            <param name="l">Left TemperatureInterval.</param>
            <param name="r">Double value.</param>
            <returns>TemperatureInterval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Division(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Divide a TemperatureInterval by another TemperatureInterval.
            </summary>
            <param name="l">Left TemperatureInterval.</param>
            <param name="r">Right TemperatureInterval.</param>
            <returns>Ratio of the two TemperatureIntervals.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Modulus(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.TemperatureInterval)">
            <summary>
            Divide a TemperatureInterval by another TemperatureInterval and return the remainder.
            </summary>
            <param name="l">Left TemperatureInterval.</param>
            <param name="r">Right TemperatureInterval.</param>
            <returns>Remainder after a TemperatureInterval is divided by a TemperatureInterval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Explicit(Nalco.Numerics.SI.TemperatureInterval)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the TemperatureInterval into a weakly typed Scalar.
            </summary>
            <param name="l">TemperatureInterval.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.TemperatureInterval">
            <summary>
            Explicitly convert the weakly typed Scalar into a TemperatureInterval.
            </summary>
            <param name="s">Scalar.</param>
            <returns>TemperatureInterval.</returns>
        </member>
        <member name="F:Nalco.Numerics.SI.TemperatureInterval.ISATemperature">
            <summary>
            The International Standard Atmosphere temperature.
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.TemperatureInterval.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.TemperatureInterval.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.TemperatureInterval.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.#ctor(System.Double)">
            <summary>
            Construct a new TemperatureInterval with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Addition(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.Temperature)">
            <summary>
            Add a temperature interval to a temperature.
            </summary>
            <param name="l">Left temperature interval.</param>
            <param name="r">Right temperature.</param>
            <returns>Resulting temperature.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Division(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.Length)">
            <summary>
            Divide a temperature interval by a length.
            </summary>
            <param name="l">Left temperature interval.</param>
            <param name="r">Right length.</param>
            <returns>Resulting temperature lapse rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Division(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.TemperatureLapseRate)">
            <summary>
            Divide a temperature interval by a temperature lapse rate.
            </summary>
            <param name="l">Left temperature interval.</param>
            <param name="r">Right temperature lapse rate.</param>
            <returns>Resulting length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Multiply(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.Entropy)">
            <summary>
            Multiply a temperature interval by an entropy.
            </summary>
            <param name="l">Left temperature interval.</param>
            <param name="r">Right entropy.</param>
            <returns>Resulting energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Multiply(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.SpecificEntropy)">
            <summary>
            Multiply a temperature interval by a specific entropy.
            </summary>
            <param name="l">Left temperature interval.</param>
            <param name="r">Right specific entropy.</param>
            <returns>Resulting specific enthalpy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureInterval.op_Multiply(Nalco.Numerics.SI.TemperatureInterval,Nalco.Numerics.SI.SpecificHeatCapacity)">
            <summary>
            Multiply a temperature interval by a specific heat capacity.
            </summary>
            <param name="l">Left temperature interval.</param>
            <param name="r">Right specific heat capacity.</param>
            <returns>Resulting specific enthalpy.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Time">
            <summary>
            Time (seconds).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Time.Zero">
            <summary>
            Time of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.#ctor(System.Double,Nalco.Numerics.SI.Time.Subunit)">
            <summary>
            Construct a Time with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Time.Item(Nalco.Numerics.SI.Time.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Time.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.Abbreviation(Nalco.Numerics.SI.Time.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.Description(Nalco.Numerics.SI.Time.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Time.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.Parse(System.String)">
            <summary>
            Converts the string representation of a Time to a Time.
            </summary>
            <param name="s">A string that contains a Time to convert.</param>
            <returns>A Time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Time to a Time.
            </summary>
            <param name="s">A string that contains a Time to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Time to a Time.
            </summary>
            <param name="s">A string that contains a Time to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Time.Subunit)">
            <summary>
            Converts the string representation of a Time to a Time.
            </summary>
            <param name="s">A string that contains a Time to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.TryParse(System.String,Nalco.Numerics.SI.Time@)">
            <summary>
            Converts the string representation of a Time to a Time. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Time to convert.</param>
            <param name="result">When this method returns, contains the Time, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Time@)">
            <summary>
            Converts the string representation of a Time to a Time. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Time to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Time, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Time@)">
            <summary>
            Converts the string representation of a Time to a Time. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Time to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Time, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Time.Subunit,Nalco.Numerics.SI.Time@)">
            <summary>
            Converts the string representation of a Time to a Time. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Time to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Time, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.CompareTo(System.Object)">
            <summary>
            Compares the current Time with another Time.
            </summary>
            <param name="obj">Time to compare with this Time.</param>
            <returns>Less than zero when this Time is less than the other parameter.
            Zero when this Time is equal to the other parameter.
            Greater than zero when this Time is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Time.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.CompareTo(Nalco.Numerics.SI.Time)">
            <summary>
            Compares the current Time with another Time.
            </summary>
            <param name="other">Time to compare with this Time.</param>
            <returns>Less than zero when this Time is less than the other parameter.
            Zero when this Time is equal to the other parameter.
            Greater than zero when this Time is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Time.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.Abs(Nalco.Numerics.SI.Time)">
            <summary>
            Returns the absolute value of a Time.
            </summary>
            <param name="value">A Time.</param>
            <returns>A Time that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.Round(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Time)">
            <summary>
            Returns a Time rounded to the nearest interval.
            </summary>
            <param name="value">A Time.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Time rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.Round(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Time,System.MidpointRounding)">
            <summary>
            Returns a Time rounded to the nearest interval.
            </summary>
            <param name="value">A Time.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Time rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.Floor(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Time)">
            <summary>
            Returns a Time rounded down to the nearest interval.
            </summary>
            <param name="value">A Time.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Time rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.Ceiling(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Time)">
            <summary>
            Returns a Time rounded up to the nearest interval.
            </summary>
            <param name="value">A Time.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Time rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Equality(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Time)">
            <summary>
            Determines whether two Times are equal.
            </summary>
            <param name="l">Left Time.</param>
            <param name="r">Right Time.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Inequality(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Time)">
            <summary>
            Determines whether two Times are not equal.
            </summary>
            <param name="l">Left Time.</param>
            <param name="r">Right Time.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_LessThan(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Time)">
            <summary>
            Determines if the left Time is less than the right Time.
            </summary>
            <param name="l">Left Time.</param>
            <param name="r">Right Time.</param>
            <returns>True if the left Time is less than the right Time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_LessThanOrEqual(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Time)">
            <summary>
            Determines if the left Time is less than or equal to the right Time.
            </summary>
            <param name="l">Left Time.</param>
            <param name="r">Right Time.</param>
            <returns>True if the left Time is less than or equal to the right Time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_GreaterThanOrEqual(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Time)">
            <summary>
            Determines if the left Time is greater than or equal to the right Time.
            </summary>
            <param name="l">Left Time.</param>
            <param name="r">Right Time.</param>
            <returns>True if the left Time is greater than or equal to the right Time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_GreaterThan(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Time)">
            <summary>
            Determines if the left Time is greater than the right Time.
            </summary>
            <param name="l">Left Time.</param>
            <param name="r">Right Time.</param>
            <returns>True if the left Time is greater than the right Time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Addition(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Time)">
            <summary>
            Add two Times together.
            </summary>
            <param name="l">Left Time.</param>
            <param name="r">Right Time.</param>
            <returns>Sum of Times.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_UnaryNegation(Nalco.Numerics.SI.Time)">
            <summary>
            Negate a Time.
            </summary>
            <param name="l">Left Time.</param>
            <returns>Negative Time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Subtraction(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Time)">
            <summary>
            Subtract two Times.
            </summary>
            <param name="l">Left Time.</param>
            <param name="r">Right Time.</param>
            <returns>Difference of Times.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Multiply(Nalco.Numerics.SI.Time,System.Double)">
            <summary>
            Multiply a Time with a double.
            </summary>
            <param name="l">Left Time.</param>
            <param name="r">Double value.</param>
            <returns>Time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Multiply(System.Double,Nalco.Numerics.SI.Time)">
            <summary>
            Multiply a Time with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Time.</param>
            <returns>Time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Division(Nalco.Numerics.SI.Time,System.Double)">
            <summary>
            Divide a Time by a double.
            </summary>
            <param name="l">Left Time.</param>
            <param name="r">Double value.</param>
            <returns>Time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Division(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Time)">
            <summary>
            Divide a Time by another Time.
            </summary>
            <param name="l">Left Time.</param>
            <param name="r">Right Time.</param>
            <returns>Ratio of the two Times.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Modulus(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Time)">
            <summary>
            Divide a Time by another Time and return the remainder.
            </summary>
            <param name="l">Left Time.</param>
            <param name="r">Right Time.</param>
            <returns>Remainder after a Time is divided by a Time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Explicit(Nalco.Numerics.SI.Time)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Time into a weakly typed Scalar.
            </summary>
            <param name="l">Time.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Time">
            <summary>
            Explicitly convert the weakly typed Scalar into a Time.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Time.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Time.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Time.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Time.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.#ctor(System.Double)">
            <summary>
            Construct a new Time with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Implicit(System.TimeSpan)~Nalco.Numerics.SI.Time">
            <summary>
            Implicitly convert the TimeSpan into a Time.
            </summary>
            <param name="l">TimeSpan.</param>
            <returns>Time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Implicit(Nalco.Numerics.SI.Time)~System.TimeSpan">
            <summary>
            Implicitly convert the Time into a TimeSpan.
            </summary>
            <param name="l">Time.</param>
            <returns>TimeSpan.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Multiply(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Multiply a time with a volume rate.
            </summary>
            <param name="l">Left time.</param>
            <param name="r">Right volume rate.</param>
            <returns>Volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Multiply(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.MassRate)">
            <summary>
            Multiply a time with a mass rate.
            </summary>
            <param name="l">Left time.</param>
            <param name="r">Right mass rate.</param>
            <returns>Mass.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Multiply(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Frequency)">
            <summary>
            Multiply a Time by a Frequency.
            </summary>
            <param name="l">Left Time.</param>
            <param name="r">Right Frequency.</param>
            <returns>Double.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Division(System.Double,Nalco.Numerics.SI.Time)">
            <summary>
            Divide a count by a time.
            </summary>
            <param name="l">Left count.</param>
            <param name="r">Right time.</param>
            <returns>Frequency.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Multiply(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Power)">
            <summary>
            Multiply a Time by a Power.
            </summary>
            <param name="l">A Time.</param>
            <param name="r">A Power.</param>
            <returns>An Energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Multiply(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Velocity)">
            <summary>
            Multiply a Time by a Velocity.
            </summary>
            <param name="l">A Time.</param>
            <param name="r">A Velocity.</param>
            <returns>A Length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Time.op_Multiply(Nalco.Numerics.SI.Time,Nalco.Numerics.SI.Acceleration)">
            <summary>
            Multiply a time by an acceleration.
            </summary>
            <param name="l">A Time.</param>
            <param name="r">An Acceleration.</param>
            <returns>A Velocity.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Volume">
            <summary>
            Volume (cubic meters).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Volume.Zero">
            <summary>
            Volume of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.#ctor(System.Double,Nalco.Numerics.SI.Volume.Subunit)">
            <summary>
            Construct a Volume with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.Volume.Item(Nalco.Numerics.SI.Volume.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.Volume.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.Abbreviation(Nalco.Numerics.SI.Volume.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.Description(Nalco.Numerics.SI.Volume.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.Volume.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.Parse(System.String)">
            <summary>
            Converts the string representation of a Volume to a Volume.
            </summary>
            <param name="s">A string that contains a Volume to convert.</param>
            <returns>A Volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Volume to a Volume.
            </summary>
            <param name="s">A string that contains a Volume to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A Volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a Volume to a Volume.
            </summary>
            <param name="s">A string that contains a Volume to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A Volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Volume.Subunit)">
            <summary>
            Converts the string representation of a Volume to a Volume.
            </summary>
            <param name="s">A string that contains a Volume to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A Volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.TryParse(System.String,Nalco.Numerics.SI.Volume@)">
            <summary>
            Converts the string representation of a Volume to a Volume. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Volume to convert.</param>
            <param name="result">When this method returns, contains the Volume, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.Volume@)">
            <summary>
            Converts the string representation of a Volume to a Volume. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Volume to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Volume, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Volume@)">
            <summary>
            Converts the string representation of a Volume to a Volume. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Volume to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the Volume, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.Volume.Subunit,Nalco.Numerics.SI.Volume@)">
            <summary>
            Converts the string representation of a Volume to a Volume. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a Volume to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the Volume, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.CompareTo(System.Object)">
            <summary>
            Compares the current Volume with another Volume.
            </summary>
            <param name="obj">Volume to compare with this Volume.</param>
            <returns>Less than zero when this Volume is less than the other parameter.
            Zero when this Volume is equal to the other parameter.
            Greater than zero when this Volume is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of Volume.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.CompareTo(Nalco.Numerics.SI.Volume)">
            <summary>
            Compares the current Volume with another Volume.
            </summary>
            <param name="other">Volume to compare with this Volume.</param>
            <returns>Less than zero when this Volume is less than the other parameter.
            Zero when this Volume is equal to the other parameter.
            Greater than zero when this Volume is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current Volume.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.Abs(Nalco.Numerics.SI.Volume)">
            <summary>
            Returns the absolute value of a Volume.
            </summary>
            <param name="value">A Volume.</param>
            <returns>A Volume that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.Round(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Volume)">
            <summary>
            Returns a Volume rounded to the nearest interval.
            </summary>
            <param name="value">A Volume.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Volume rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.Round(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Volume,System.MidpointRounding)">
            <summary>
            Returns a Volume rounded to the nearest interval.
            </summary>
            <param name="value">A Volume.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A Volume rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.Floor(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Volume)">
            <summary>
            Returns a Volume rounded down to the nearest interval.
            </summary>
            <param name="value">A Volume.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Volume rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.Ceiling(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Volume)">
            <summary>
            Returns a Volume rounded up to the nearest interval.
            </summary>
            <param name="value">A Volume.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A Volume rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Equality(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Volume)">
            <summary>
            Determines whether two Volumes are equal.
            </summary>
            <param name="l">Left Volume.</param>
            <param name="r">Right Volume.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Inequality(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Volume)">
            <summary>
            Determines whether two Volumes are not equal.
            </summary>
            <param name="l">Left Volume.</param>
            <param name="r">Right Volume.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_LessThan(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Volume)">
            <summary>
            Determines if the left Volume is less than the right Volume.
            </summary>
            <param name="l">Left Volume.</param>
            <param name="r">Right Volume.</param>
            <returns>True if the left Volume is less than the right Volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_LessThanOrEqual(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Volume)">
            <summary>
            Determines if the left Volume is less than or equal to the right Volume.
            </summary>
            <param name="l">Left Volume.</param>
            <param name="r">Right Volume.</param>
            <returns>True if the left Volume is less than or equal to the right Volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_GreaterThanOrEqual(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Volume)">
            <summary>
            Determines if the left Volume is greater than or equal to the right Volume.
            </summary>
            <param name="l">Left Volume.</param>
            <param name="r">Right Volume.</param>
            <returns>True if the left Volume is greater than or equal to the right Volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_GreaterThan(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Volume)">
            <summary>
            Determines if the left Volume is greater than the right Volume.
            </summary>
            <param name="l">Left Volume.</param>
            <param name="r">Right Volume.</param>
            <returns>True if the left Volume is greater than the right Volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Addition(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Volume)">
            <summary>
            Add two Volumes together.
            </summary>
            <param name="l">Left Volume.</param>
            <param name="r">Right Volume.</param>
            <returns>Sum of Volumes.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_UnaryNegation(Nalco.Numerics.SI.Volume)">
            <summary>
            Negate a Volume.
            </summary>
            <param name="l">Left Volume.</param>
            <returns>Negative Volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Subtraction(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Volume)">
            <summary>
            Subtract two Volumes.
            </summary>
            <param name="l">Left Volume.</param>
            <param name="r">Right Volume.</param>
            <returns>Difference of Volumes.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Multiply(Nalco.Numerics.SI.Volume,System.Double)">
            <summary>
            Multiply a Volume with a double.
            </summary>
            <param name="l">Left Volume.</param>
            <param name="r">Double value.</param>
            <returns>Volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Multiply(System.Double,Nalco.Numerics.SI.Volume)">
            <summary>
            Multiply a Volume with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right Volume.</param>
            <returns>Volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Division(Nalco.Numerics.SI.Volume,System.Double)">
            <summary>
            Divide a Volume by a double.
            </summary>
            <param name="l">Left Volume.</param>
            <param name="r">Double value.</param>
            <returns>Volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Division(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Volume)">
            <summary>
            Divide a Volume by another Volume.
            </summary>
            <param name="l">Left Volume.</param>
            <param name="r">Right Volume.</param>
            <returns>Ratio of the two Volumes.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Modulus(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Volume)">
            <summary>
            Divide a Volume by another Volume and return the remainder.
            </summary>
            <param name="l">Left Volume.</param>
            <param name="r">Right Volume.</param>
            <returns>Remainder after a Volume is divided by a Volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Explicit(Nalco.Numerics.SI.Volume)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the Volume into a weakly typed Scalar.
            </summary>
            <param name="l">Volume.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.Volume">
            <summary>
            Explicitly convert the weakly typed Scalar into a Volume.
            </summary>
            <param name="s">Scalar.</param>
            <returns>Volume.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Volume.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Volume.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Volume.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.#ctor(System.Double)">
            <summary>
            Construct a new Volume with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Division(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Length)">
            <summary>
            Divide a volume by a length.
            </summary>
            <param name="l">Left volume.</param>
            <param name="r">Right length.</param>
            <returns>Resulting area.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Division(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Area)">
            <summary>
            Divide a volume by an area.
            </summary>
            <param name="l">Left volume.</param>
            <param name="r">Right area.</param>
            <returns>Resulting length.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Division(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Time)">
            <summary>
            Divide a volume by a time.
            </summary>
            <param name="l">Left volume.</param>
            <param name="r">Right time.</param>
            <returns>Resulting volume rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Division(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Divide a volume by a volume rate.
            </summary>
            <param name="l">Left volume.</param>
            <param name="r">Right volume rate.</param>
            <returns>Resulting time.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Division(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Mass)">
            <summary>
            Divide a volume by a mass.
            </summary>
            <param name="l">Left volume.</param>
            <param name="r">Right mass.</param>
            <returns>Resulting specific volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Multiply(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Pressure)">
            <summary>
            Multiply a volume by a pressure.
            </summary>
            <param name="l">Left volume.</param>
            <param name="r">Right pressure.</param>
            <returns>Resulting energy.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.Volume.op_Multiply(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.Density)">
            <summary>
            Multiply a volume by a density
            </summary>
            <param name="l">Left volume.</param>
            <param name="r">Right density.</param>
            <returns>Resulting mass.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.VolumeFlux">
            <summary>
            Volume flux (cubic meters per second per square meter).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.VolumeFlux.Zero">
            <summary>
            VolumeFlux of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.#ctor(System.Double,Nalco.Numerics.SI.VolumeFlux.Subunit)">
            <summary>
            Construct a VolumeFlux with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.VolumeFlux.Item(Nalco.Numerics.SI.VolumeFlux.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.VolumeFlux.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.Abbreviation(Nalco.Numerics.SI.VolumeFlux.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.Description(Nalco.Numerics.SI.VolumeFlux.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.VolumeFlux.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.Parse(System.String)">
            <summary>
            Converts the string representation of a VolumeFlux to a VolumeFlux.
            </summary>
            <param name="s">A string that contains a VolumeFlux to convert.</param>
            <returns>A VolumeFlux.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a VolumeFlux to a VolumeFlux.
            </summary>
            <param name="s">A string that contains a VolumeFlux to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A VolumeFlux.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a VolumeFlux to a VolumeFlux.
            </summary>
            <param name="s">A string that contains a VolumeFlux to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A VolumeFlux.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.VolumeFlux.Subunit)">
            <summary>
            Converts the string representation of a VolumeFlux to a VolumeFlux.
            </summary>
            <param name="s">A string that contains a VolumeFlux to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A VolumeFlux.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.TryParse(System.String,Nalco.Numerics.SI.VolumeFlux@)">
            <summary>
            Converts the string representation of a VolumeFlux to a VolumeFlux. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a VolumeFlux to convert.</param>
            <param name="result">When this method returns, contains the VolumeFlux, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.VolumeFlux@)">
            <summary>
            Converts the string representation of a VolumeFlux to a VolumeFlux. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a VolumeFlux to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the VolumeFlux, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.VolumeFlux@)">
            <summary>
            Converts the string representation of a VolumeFlux to a VolumeFlux. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a VolumeFlux to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the VolumeFlux, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.VolumeFlux.Subunit,Nalco.Numerics.SI.VolumeFlux@)">
            <summary>
            Converts the string representation of a VolumeFlux to a VolumeFlux. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a VolumeFlux to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the VolumeFlux, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.CompareTo(System.Object)">
            <summary>
            Compares the current VolumeFlux with another VolumeFlux.
            </summary>
            <param name="obj">VolumeFlux to compare with this VolumeFlux.</param>
            <returns>Less than zero when this VolumeFlux is less than the other parameter.
            Zero when this VolumeFlux is equal to the other parameter.
            Greater than zero when this VolumeFlux is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of VolumeFlux.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.CompareTo(Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Compares the current VolumeFlux with another VolumeFlux.
            </summary>
            <param name="other">VolumeFlux to compare with this VolumeFlux.</param>
            <returns>Less than zero when this VolumeFlux is less than the other parameter.
            Zero when this VolumeFlux is equal to the other parameter.
            Greater than zero when this VolumeFlux is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current VolumeFlux.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.Abs(Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Returns the absolute value of a VolumeFlux.
            </summary>
            <param name="value">A VolumeFlux.</param>
            <returns>A VolumeFlux that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.Round(Nalco.Numerics.SI.VolumeFlux,Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Returns a VolumeFlux rounded to the nearest interval.
            </summary>
            <param name="value">A VolumeFlux.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A VolumeFlux rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.Round(Nalco.Numerics.SI.VolumeFlux,Nalco.Numerics.SI.VolumeFlux,System.MidpointRounding)">
            <summary>
            Returns a VolumeFlux rounded to the nearest interval.
            </summary>
            <param name="value">A VolumeFlux.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A VolumeFlux rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.Floor(Nalco.Numerics.SI.VolumeFlux,Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Returns a VolumeFlux rounded down to the nearest interval.
            </summary>
            <param name="value">A VolumeFlux.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A VolumeFlux rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.Ceiling(Nalco.Numerics.SI.VolumeFlux,Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Returns a VolumeFlux rounded up to the nearest interval.
            </summary>
            <param name="value">A VolumeFlux.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A VolumeFlux rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_Equality(Nalco.Numerics.SI.VolumeFlux,Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Determines whether two VolumeFluxs are equal.
            </summary>
            <param name="l">Left VolumeFlux.</param>
            <param name="r">Right VolumeFlux.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_Inequality(Nalco.Numerics.SI.VolumeFlux,Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Determines whether two VolumeFluxs are not equal.
            </summary>
            <param name="l">Left VolumeFlux.</param>
            <param name="r">Right VolumeFlux.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_LessThan(Nalco.Numerics.SI.VolumeFlux,Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Determines if the left VolumeFlux is less than the right VolumeFlux.
            </summary>
            <param name="l">Left VolumeFlux.</param>
            <param name="r">Right VolumeFlux.</param>
            <returns>True if the left VolumeFlux is less than the right VolumeFlux.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_LessThanOrEqual(Nalco.Numerics.SI.VolumeFlux,Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Determines if the left VolumeFlux is less than or equal to the right VolumeFlux.
            </summary>
            <param name="l">Left VolumeFlux.</param>
            <param name="r">Right VolumeFlux.</param>
            <returns>True if the left VolumeFlux is less than or equal to the right VolumeFlux.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_GreaterThanOrEqual(Nalco.Numerics.SI.VolumeFlux,Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Determines if the left VolumeFlux is greater than or equal to the right VolumeFlux.
            </summary>
            <param name="l">Left VolumeFlux.</param>
            <param name="r">Right VolumeFlux.</param>
            <returns>True if the left VolumeFlux is greater than or equal to the right VolumeFlux.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_GreaterThan(Nalco.Numerics.SI.VolumeFlux,Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Determines if the left VolumeFlux is greater than the right VolumeFlux.
            </summary>
            <param name="l">Left VolumeFlux.</param>
            <param name="r">Right VolumeFlux.</param>
            <returns>True if the left VolumeFlux is greater than the right VolumeFlux.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_Addition(Nalco.Numerics.SI.VolumeFlux,Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Add two VolumeFluxs together.
            </summary>
            <param name="l">Left VolumeFlux.</param>
            <param name="r">Right VolumeFlux.</param>
            <returns>Sum of VolumeFluxs.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_UnaryNegation(Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Negate a VolumeFlux.
            </summary>
            <param name="l">Left VolumeFlux.</param>
            <returns>Negative VolumeFlux.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_Subtraction(Nalco.Numerics.SI.VolumeFlux,Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Subtract two VolumeFluxs.
            </summary>
            <param name="l">Left VolumeFlux.</param>
            <param name="r">Right VolumeFlux.</param>
            <returns>Difference of VolumeFluxs.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_Multiply(Nalco.Numerics.SI.VolumeFlux,System.Double)">
            <summary>
            Multiply a VolumeFlux with a double.
            </summary>
            <param name="l">Left VolumeFlux.</param>
            <param name="r">Double value.</param>
            <returns>VolumeFlux.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_Multiply(System.Double,Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Multiply a VolumeFlux with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right VolumeFlux.</param>
            <returns>VolumeFlux.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_Division(Nalco.Numerics.SI.VolumeFlux,System.Double)">
            <summary>
            Divide a VolumeFlux by a double.
            </summary>
            <param name="l">Left VolumeFlux.</param>
            <param name="r">Double value.</param>
            <returns>VolumeFlux.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_Division(Nalco.Numerics.SI.VolumeFlux,Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Divide a VolumeFlux by another VolumeFlux.
            </summary>
            <param name="l">Left VolumeFlux.</param>
            <param name="r">Right VolumeFlux.</param>
            <returns>Ratio of the two VolumeFluxs.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_Modulus(Nalco.Numerics.SI.VolumeFlux,Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Divide a VolumeFlux by another VolumeFlux and return the remainder.
            </summary>
            <param name="l">Left VolumeFlux.</param>
            <param name="r">Right VolumeFlux.</param>
            <returns>Remainder after a VolumeFlux is divided by a VolumeFlux.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_Explicit(Nalco.Numerics.SI.VolumeFlux)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the VolumeFlux into a weakly typed Scalar.
            </summary>
            <param name="l">VolumeFlux.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.VolumeFlux">
            <summary>
            Explicitly convert the weakly typed Scalar into a VolumeFlux.
            </summary>
            <param name="s">Scalar.</param>
            <returns>VolumeFlux.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.VolumeFlux.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.VolumeFlux.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.VolumeFlux.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.#ctor(System.Double)">
            <summary>
            Construct a new VolumeFlux with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeFlux.op_Multiply(Nalco.Numerics.SI.VolumeFlux,Nalco.Numerics.SI.Area)">
            <summary>
            Multiply a volume flux by an area.
            </summary>
            <param name="l">Left volume rate.</param>
            <param name="r">Right area.</param>
            <returns>Volume rate formed.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.VolumeRate">
            <summary>
            Volume rate (cubic meters per second).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.VolumeRate.Zero">
            <summary>
            VolumeRate of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.#ctor(System.Double,Nalco.Numerics.SI.VolumeRate.Subunit)">
            <summary>
            Construct a VolumeRate with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.VolumeRate.Item(Nalco.Numerics.SI.VolumeRate.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.VolumeRate.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.Abbreviation(Nalco.Numerics.SI.VolumeRate.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.Description(Nalco.Numerics.SI.VolumeRate.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.VolumeRate.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.Parse(System.String)">
            <summary>
            Converts the string representation of a VolumeRate to a VolumeRate.
            </summary>
            <param name="s">A string that contains a VolumeRate to convert.</param>
            <returns>A VolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a VolumeRate to a VolumeRate.
            </summary>
            <param name="s">A string that contains a VolumeRate to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A VolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a VolumeRate to a VolumeRate.
            </summary>
            <param name="s">A string that contains a VolumeRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A VolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.VolumeRate.Subunit)">
            <summary>
            Converts the string representation of a VolumeRate to a VolumeRate.
            </summary>
            <param name="s">A string that contains a VolumeRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A VolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.TryParse(System.String,Nalco.Numerics.SI.VolumeRate@)">
            <summary>
            Converts the string representation of a VolumeRate to a VolumeRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a VolumeRate to convert.</param>
            <param name="result">When this method returns, contains the VolumeRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.VolumeRate@)">
            <summary>
            Converts the string representation of a VolumeRate to a VolumeRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a VolumeRate to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the VolumeRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.VolumeRate@)">
            <summary>
            Converts the string representation of a VolumeRate to a VolumeRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a VolumeRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the VolumeRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.VolumeRate.Subunit,Nalco.Numerics.SI.VolumeRate@)">
            <summary>
            Converts the string representation of a VolumeRate to a VolumeRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a VolumeRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the VolumeRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.CompareTo(System.Object)">
            <summary>
            Compares the current VolumeRate with another VolumeRate.
            </summary>
            <param name="obj">VolumeRate to compare with this VolumeRate.</param>
            <returns>Less than zero when this VolumeRate is less than the other parameter.
            Zero when this VolumeRate is equal to the other parameter.
            Greater than zero when this VolumeRate is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of VolumeRate.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.CompareTo(Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Compares the current VolumeRate with another VolumeRate.
            </summary>
            <param name="other">VolumeRate to compare with this VolumeRate.</param>
            <returns>Less than zero when this VolumeRate is less than the other parameter.
            Zero when this VolumeRate is equal to the other parameter.
            Greater than zero when this VolumeRate is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current VolumeRate.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.Abs(Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Returns the absolute value of a VolumeRate.
            </summary>
            <param name="value">A VolumeRate.</param>
            <returns>A VolumeRate that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.Round(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Returns a VolumeRate rounded to the nearest interval.
            </summary>
            <param name="value">A VolumeRate.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A VolumeRate rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.Round(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.VolumeRate,System.MidpointRounding)">
            <summary>
            Returns a VolumeRate rounded to the nearest interval.
            </summary>
            <param name="value">A VolumeRate.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A VolumeRate rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.Floor(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Returns a VolumeRate rounded down to the nearest interval.
            </summary>
            <param name="value">A VolumeRate.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A VolumeRate rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.Ceiling(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Returns a VolumeRate rounded up to the nearest interval.
            </summary>
            <param name="value">A VolumeRate.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A VolumeRate rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Equality(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Determines whether two VolumeRates are equal.
            </summary>
            <param name="l">Left VolumeRate.</param>
            <param name="r">Right VolumeRate.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Inequality(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Determines whether two VolumeRates are not equal.
            </summary>
            <param name="l">Left VolumeRate.</param>
            <param name="r">Right VolumeRate.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_LessThan(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Determines if the left VolumeRate is less than the right VolumeRate.
            </summary>
            <param name="l">Left VolumeRate.</param>
            <param name="r">Right VolumeRate.</param>
            <returns>True if the left VolumeRate is less than the right VolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_LessThanOrEqual(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Determines if the left VolumeRate is less than or equal to the right VolumeRate.
            </summary>
            <param name="l">Left VolumeRate.</param>
            <param name="r">Right VolumeRate.</param>
            <returns>True if the left VolumeRate is less than or equal to the right VolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_GreaterThanOrEqual(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Determines if the left VolumeRate is greater than or equal to the right VolumeRate.
            </summary>
            <param name="l">Left VolumeRate.</param>
            <param name="r">Right VolumeRate.</param>
            <returns>True if the left VolumeRate is greater than or equal to the right VolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_GreaterThan(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Determines if the left VolumeRate is greater than the right VolumeRate.
            </summary>
            <param name="l">Left VolumeRate.</param>
            <param name="r">Right VolumeRate.</param>
            <returns>True if the left VolumeRate is greater than the right VolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Addition(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Add two VolumeRates together.
            </summary>
            <param name="l">Left VolumeRate.</param>
            <param name="r">Right VolumeRate.</param>
            <returns>Sum of VolumeRates.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_UnaryNegation(Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Negate a VolumeRate.
            </summary>
            <param name="l">Left VolumeRate.</param>
            <returns>Negative VolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Subtraction(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Subtract two VolumeRates.
            </summary>
            <param name="l">Left VolumeRate.</param>
            <param name="r">Right VolumeRate.</param>
            <returns>Difference of VolumeRates.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Multiply(Nalco.Numerics.SI.VolumeRate,System.Double)">
            <summary>
            Multiply a VolumeRate with a double.
            </summary>
            <param name="l">Left VolumeRate.</param>
            <param name="r">Double value.</param>
            <returns>VolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Multiply(System.Double,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Multiply a VolumeRate with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right VolumeRate.</param>
            <returns>VolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Division(Nalco.Numerics.SI.VolumeRate,System.Double)">
            <summary>
            Divide a VolumeRate by a double.
            </summary>
            <param name="l">Left VolumeRate.</param>
            <param name="r">Double value.</param>
            <returns>VolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Division(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Divide a VolumeRate by another VolumeRate.
            </summary>
            <param name="l">Left VolumeRate.</param>
            <param name="r">Right VolumeRate.</param>
            <returns>Ratio of the two VolumeRates.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Modulus(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.VolumeRate)">
            <summary>
            Divide a VolumeRate by another VolumeRate and return the remainder.
            </summary>
            <param name="l">Left VolumeRate.</param>
            <param name="r">Right VolumeRate.</param>
            <returns>Remainder after a VolumeRate is divided by a VolumeRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Explicit(Nalco.Numerics.SI.VolumeRate)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the VolumeRate into a weakly typed Scalar.
            </summary>
            <param name="l">VolumeRate.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.VolumeRate">
            <summary>
            Explicitly convert the weakly typed Scalar into a VolumeRate.
            </summary>
            <param name="s">Scalar.</param>
            <returns>VolumeRate.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.VolumeRate.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.VolumeRate.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.VolumeRate.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.#ctor(System.Double)">
            <summary>
            Construct a new VolumeRate with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Multiply(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.Time)">
            <summary>
            Multiply a volume rate with a time.
            </summary>
            <param name="l">Left volume rate.</param>
            <param name="r">Right time.</param>
            <returns>Volume.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Division(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.Area)">
            <summary>
            Divide a volume rate by an area.
            </summary>
            <param name="l">Left volume rate.</param>
            <param name="r">Right area.</param>
            <returns>Volume flux formed.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Division(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.Volume)">
            <summary>
            Divide a volume rate by a volume.
            </summary>
            <param name="l">Left volume rate.</param>
            <param name="r">Right volume.</param>
            <returns>Volume ratio rate formed.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Division(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.VolumeFlux)">
            <summary>
            Divide a volume rate by a volume flux.
            </summary>
            <param name="l">Left volume rate.</param>
            <param name="r">Right volume flux.</param>
            <returns>Area formed.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Division(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.Velocity)">
            <summary>
            Divide a volume rate by a velocity.
            </summary>
            <param name="l">Left volume rate.</param>
            <param name="r">Right velocity.</param>
            <returns>Area formed.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Multiply(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.Density)">
            <summary>
            Multiply a volume rate by a density.
            </summary>
            <param name="l">Left volume rate.</param>
            <param name="r">Right density.</param>
            <returns>Resulting mass rate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Multiply(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.Pressure)">
            <summary>
            Multiply a pressure by a volumeRate.
            </summary>
            <param name="l">VolumeRate.</param>
            <param name="r">Pressure.</param>
            <returns>Power produced.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Division(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.SpecificVolume)">
            <summary>
            Divide a volume rate by a specific volume.
            </summary>
            <param name="l">Left volume rate.</param>
            <param name="r">Right specific volume.</param>
            <returns>Mass rate formed.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRate.op_Multiply(Nalco.Numerics.SI.VolumeRate,Nalco.Numerics.SI.EnergyDensity)">
            <summary>
            Multiply a volume rate by an energy density.
            </summary>
            <param name="l">Left volume rate.</param>
            <param name="r">Right energy density.</param>
            <returns>Resulting power.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.VolumeRatioRate">
            <summary>
            Volume ratio rate (cubic meters per second per cubic meter).
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.VolumeRatioRate.Zero">
            <summary>
            VolumeRatioRate of zero.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.#ctor(System.Double,Nalco.Numerics.SI.VolumeRatioRate.Subunit)">
            <summary>
            Construct a VolumeRatioRate with a value in the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="subunit">Subunit.</param>
        </member>
        <member name="P:Nalco.Numerics.SI.VolumeRatioRate.Item(Nalco.Numerics.SI.VolumeRatioRate.Subunit)">
            <summary>
            Scalar value in the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Nalco.Numerics.SI.VolumeRatioRate.Name">
            <summary>
            Scalar name.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.Abbreviation(Nalco.Numerics.SI.VolumeRatioRate.Subunit)">
            <summary>
            Abbreviation for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Abbreviation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.Description(Nalco.Numerics.SI.VolumeRatioRate.Subunit)">
            <summary>
            Description for the given subunit.
            </summary>
            <param name="subunit">Subunit.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.ToString">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.ToString(System.String,System.IFormatProvider,Nalco.Numerics.SI.VolumeRatioRate.Subunit)">
            <summary>
            Converts the scalar value of this instance to its equivalent string
            representation.
            </summary>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.Parse(System.String)">
            <summary>
            Converts the string representation of a VolumeRatioRate to a VolumeRatioRate.
            </summary>
            <param name="s">A string that contains a VolumeRatioRate to convert.</param>
            <returns>A VolumeRatioRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a VolumeRatioRate to a VolumeRatioRate.
            </summary>
            <param name="s">A string that contains a VolumeRatioRate to convert.</param>
            <param name="provider">Format provider.</param>
            <returns>A VolumeRatioRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a VolumeRatioRate to a VolumeRatioRate.
            </summary>
            <param name="s">A string that contains a VolumeRatioRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <returns>A VolumeRatioRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.Parse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.VolumeRatioRate.Subunit)">
            <summary>
            Converts the string representation of a VolumeRatioRate to a VolumeRatioRate.
            </summary>
            <param name="s">A string that contains a VolumeRatioRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <returns>A VolumeRatioRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.TryParse(System.String,Nalco.Numerics.SI.VolumeRatioRate@)">
            <summary>
            Converts the string representation of a VolumeRatioRate to a VolumeRatioRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a VolumeRatioRate to convert.</param>
            <param name="result">When this method returns, contains the VolumeRatioRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.TryParse(System.String,System.IFormatProvider,Nalco.Numerics.SI.VolumeRatioRate@)">
            <summary>
            Converts the string representation of a VolumeRatioRate to a VolumeRatioRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a VolumeRatioRate to convert.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the VolumeRatioRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.VolumeRatioRate@)">
            <summary>
            Converts the string representation of a VolumeRatioRate to a VolumeRatioRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a VolumeRatioRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="result">When this method returns, contains the VolumeRatioRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.TryParse(System.String,System.String,System.IFormatProvider,Nalco.Numerics.SI.VolumeRatioRate.Subunit,Nalco.Numerics.SI.VolumeRatioRate@)">
            <summary>
            Converts the string representation of a VolumeRatioRate to a VolumeRatioRate. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="s">A string that contains a VolumeRatioRate to convert.</param>
            <param name="format">Format string.</param>
            <param name="provider">Format provider.</param>
            <param name="subunit">Subunit, overrides format string.</param>
            <param name="result">When this method returns, contains the VolumeRatioRate, or zero if the conversion failed.</param>
            <returns>True if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.CompareTo(System.Object)">
            <summary>
            Compares the current VolumeRatioRate with another VolumeRatioRate.
            </summary>
            <param name="obj">VolumeRatioRate to compare with this VolumeRatioRate.</param>
            <returns>Less than zero when this VolumeRatioRate is less than the other parameter.
            Zero when this VolumeRatioRate is equal to the other parameter.
            Greater than zero when this VolumeRatioRate is greater than the other parameter.</returns>
            <exception cref="T:System.ArgumentException">obj is not an instance of VolumeRatioRate.</exception>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.CompareTo(Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Compares the current VolumeRatioRate with another VolumeRatioRate.
            </summary>
            <param name="other">VolumeRatioRate to compare with this VolumeRatioRate.</param>
            <returns>Less than zero when this VolumeRatioRate is less than the other parameter.
            Zero when this VolumeRatioRate is equal to the other parameter.
            Greater than zero when this VolumeRatioRate is greater than the other parameter.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal to the current VolumeRatioRate.
            </summary>
            <param name="obj">Object to compare against.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.Abs(Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Returns the absolute value of a VolumeRatioRate.
            </summary>
            <param name="value">A VolumeRatioRate.</param>
            <returns>A VolumeRatioRate that is greater than or equal to zero.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.Round(Nalco.Numerics.SI.VolumeRatioRate,Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Returns a VolumeRatioRate rounded to the nearest interval.
            </summary>
            <param name="value">A VolumeRatioRate.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A VolumeRatioRate rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.Round(Nalco.Numerics.SI.VolumeRatioRate,Nalco.Numerics.SI.VolumeRatioRate,System.MidpointRounding)">
            <summary>
            Returns a VolumeRatioRate rounded to the nearest interval.
            </summary>
            <param name="value">A VolumeRatioRate.</param>
            <param name="interval">Interval to round to.</param>.
            <param name="mode">Rounding mode.</param>
            <returns>A VolumeRatioRate rounded to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.Floor(Nalco.Numerics.SI.VolumeRatioRate,Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Returns a VolumeRatioRate rounded down to the nearest interval.
            </summary>
            <param name="value">A VolumeRatioRate.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A VolumeRatioRate rounded down to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.Ceiling(Nalco.Numerics.SI.VolumeRatioRate,Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Returns a VolumeRatioRate rounded up to the nearest interval.
            </summary>
            <param name="value">A VolumeRatioRate.</param>
            <param name="interval">Interval to round to.</param>.
            <returns>A VolumeRatioRate rounded up to the nearest interval.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_Equality(Nalco.Numerics.SI.VolumeRatioRate,Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Determines whether two VolumeRatioRates are equal.
            </summary>
            <param name="l">Left VolumeRatioRate.</param>
            <param name="r">Right VolumeRatioRate.</param>
            <returns>True if values are equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_Inequality(Nalco.Numerics.SI.VolumeRatioRate,Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Determines whether two VolumeRatioRates are not equal.
            </summary>
            <param name="l">Left VolumeRatioRate.</param>
            <param name="r">Right VolumeRatioRate.</param>
            <returns>True if values are not equal.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_LessThan(Nalco.Numerics.SI.VolumeRatioRate,Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Determines if the left VolumeRatioRate is less than the right VolumeRatioRate.
            </summary>
            <param name="l">Left VolumeRatioRate.</param>
            <param name="r">Right VolumeRatioRate.</param>
            <returns>True if the left VolumeRatioRate is less than the right VolumeRatioRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_LessThanOrEqual(Nalco.Numerics.SI.VolumeRatioRate,Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Determines if the left VolumeRatioRate is less than or equal to the right VolumeRatioRate.
            </summary>
            <param name="l">Left VolumeRatioRate.</param>
            <param name="r">Right VolumeRatioRate.</param>
            <returns>True if the left VolumeRatioRate is less than or equal to the right VolumeRatioRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_GreaterThanOrEqual(Nalco.Numerics.SI.VolumeRatioRate,Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Determines if the left VolumeRatioRate is greater than or equal to the right VolumeRatioRate.
            </summary>
            <param name="l">Left VolumeRatioRate.</param>
            <param name="r">Right VolumeRatioRate.</param>
            <returns>True if the left VolumeRatioRate is greater than or equal to the right VolumeRatioRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_GreaterThan(Nalco.Numerics.SI.VolumeRatioRate,Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Determines if the left VolumeRatioRate is greater than the right VolumeRatioRate.
            </summary>
            <param name="l">Left VolumeRatioRate.</param>
            <param name="r">Right VolumeRatioRate.</param>
            <returns>True if the left VolumeRatioRate is greater than the right VolumeRatioRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_Addition(Nalco.Numerics.SI.VolumeRatioRate,Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Add two VolumeRatioRates together.
            </summary>
            <param name="l">Left VolumeRatioRate.</param>
            <param name="r">Right VolumeRatioRate.</param>
            <returns>Sum of VolumeRatioRates.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_UnaryNegation(Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Negate a VolumeRatioRate.
            </summary>
            <param name="l">Left VolumeRatioRate.</param>
            <returns>Negative VolumeRatioRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_Subtraction(Nalco.Numerics.SI.VolumeRatioRate,Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Subtract two VolumeRatioRates.
            </summary>
            <param name="l">Left VolumeRatioRate.</param>
            <param name="r">Right VolumeRatioRate.</param>
            <returns>Difference of VolumeRatioRates.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_Multiply(Nalco.Numerics.SI.VolumeRatioRate,System.Double)">
            <summary>
            Multiply a VolumeRatioRate with a double.
            </summary>
            <param name="l">Left VolumeRatioRate.</param>
            <param name="r">Double value.</param>
            <returns>VolumeRatioRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_Multiply(System.Double,Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Multiply a VolumeRatioRate with a double.
            </summary>
            <param name="l">Double value.</param>
            <param name="r">Right VolumeRatioRate.</param>
            <returns>VolumeRatioRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_Division(Nalco.Numerics.SI.VolumeRatioRate,System.Double)">
            <summary>
            Divide a VolumeRatioRate by a double.
            </summary>
            <param name="l">Left VolumeRatioRate.</param>
            <param name="r">Double value.</param>
            <returns>VolumeRatioRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_Division(Nalco.Numerics.SI.VolumeRatioRate,Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Divide a VolumeRatioRate by another VolumeRatioRate.
            </summary>
            <param name="l">Left VolumeRatioRate.</param>
            <param name="r">Right VolumeRatioRate.</param>
            <returns>Ratio of the two VolumeRatioRates.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_Modulus(Nalco.Numerics.SI.VolumeRatioRate,Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Divide a VolumeRatioRate by another VolumeRatioRate and return the remainder.
            </summary>
            <param name="l">Left VolumeRatioRate.</param>
            <param name="r">Right VolumeRatioRate.</param>
            <returns>Remainder after a VolumeRatioRate is divided by a VolumeRatioRate.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_Explicit(Nalco.Numerics.SI.VolumeRatioRate)~Nalco.Numerics.Scalar">
            <summary>
            Explicitly convert the VolumeRatioRate into a weakly typed Scalar.
            </summary>
            <param name="l">VolumeRatioRate.</param>
            <returns>Scalar.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_Explicit(Nalco.Numerics.Scalar)~Nalco.Numerics.SI.VolumeRatioRate">
            <summary>
            Explicitly convert the weakly typed Scalar into a VolumeRatioRate.
            </summary>
            <param name="s">Scalar.</param>
            <returns>VolumeRatioRate.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.VolumeRatioRate.Subunit">
            <summary>
            Subunit.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.VolumeRatioRate.Dimensions">
            <summary>
            Base SI dimensions.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.VolumeRatioRate.Conversions">
            <summary>
            Unit conversion operations.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.#ctor(System.Double)">
            <summary>
            Construct a new VolumeRatioRate with the given SI value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Nalco.Numerics.SI.VolumeRatioRate.op_Multiply(Nalco.Numerics.SI.Volume,Nalco.Numerics.SI.VolumeRatioRate)">
            <summary>
            Multiply a volume with a volume ratio rate.
            </summary>
            <param name="l">Left volume.</param>
            <param name="r">Right volume ratio rate.</param>
            <returns>Volume.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.IEnumerableExt">
            <summary>
            Provides a set of static methods for querying objects that implement
            System.Collections.Generic.IEnumerable&lt;T&gt;.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Acceleration})">
            <summary>
            Computes the sum of the sequence of Acceleration values.
            </summary>
            <param name="source">A sequence of Acceleration values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Acceleration})">
            <summary>
            Computes the geometric mean of the sequence of Acceleration values.
            </summary>
            <param name="source">A sequence of Acceleration values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Area})">
            <summary>
            Computes the sum of the sequence of Area values.
            </summary>
            <param name="source">A sequence of Area values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Area})">
            <summary>
            Computes the geometric mean of the sequence of Area values.
            </summary>
            <param name="source">A sequence of Area values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.AvailableEnergy})">
            <summary>
            Computes the sum of the sequence of AvailableEnergy values.
            </summary>
            <param name="source">A sequence of AvailableEnergy values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.AvailableEnergy})">
            <summary>
            Computes the geometric mean of the sequence of AvailableEnergy values.
            </summary>
            <param name="source">A sequence of AvailableEnergy values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ChemicalAmount})">
            <summary>
            Computes the sum of the sequence of ChemicalAmount values.
            </summary>
            <param name="source">A sequence of ChemicalAmount values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ChemicalAmount})">
            <summary>
            Computes the geometric mean of the sequence of ChemicalAmount values.
            </summary>
            <param name="source">A sequence of ChemicalAmount values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ConductivityElectrolytic})">
            <summary>
            Computes the sum of the sequence of ConductivityElectrolytic values.
            </summary>
            <param name="source">A sequence of ConductivityElectrolytic values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ConductivityElectrolytic})">
            <summary>
            Computes the geometric mean of the sequence of ConductivityElectrolytic values.
            </summary>
            <param name="source">A sequence of ConductivityElectrolytic values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Density})">
            <summary>
            Computes the sum of the sequence of Density values.
            </summary>
            <param name="source">A sequence of Density values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Density})">
            <summary>
            Computes the geometric mean of the sequence of Density values.
            </summary>
            <param name="source">A sequence of Density values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Efficiency})">
            <summary>
            Computes the sum of the sequence of Efficiency values.
            </summary>
            <param name="source">A sequence of Efficiency values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Efficiency})">
            <summary>
            Computes the geometric mean of the sequence of Efficiency values.
            </summary>
            <param name="source">A sequence of Efficiency values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ElectricCurrent})">
            <summary>
            Computes the sum of the sequence of ElectricCurrent values.
            </summary>
            <param name="source">A sequence of ElectricCurrent values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ElectricCurrent})">
            <summary>
            Computes the geometric mean of the sequence of ElectricCurrent values.
            </summary>
            <param name="source">A sequence of ElectricCurrent values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ElectricPotentialDifference})">
            <summary>
            Computes the sum of the sequence of ElectricPotentialDifference values.
            </summary>
            <param name="source">A sequence of ElectricPotentialDifference values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ElectricPotentialDifference})">
            <summary>
            Computes the geometric mean of the sequence of ElectricPotentialDifference values.
            </summary>
            <param name="source">A sequence of ElectricPotentialDifference values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.EmissionFactor})">
            <summary>
            Computes the sum of the sequence of EmissionFactor values.
            </summary>
            <param name="source">A sequence of EmissionFactor values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.EmissionFactor})">
            <summary>
            Computes the geometric mean of the sequence of EmissionFactor values.
            </summary>
            <param name="source">A sequence of EmissionFactor values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Energy})">
            <summary>
            Computes the sum of the sequence of Energy values.
            </summary>
            <param name="source">A sequence of Energy values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Energy})">
            <summary>
            Computes the geometric mean of the sequence of Energy values.
            </summary>
            <param name="source">A sequence of Energy values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.EnergyDensity})">
            <summary>
            Computes the sum of the sequence of EnergyDensity values.
            </summary>
            <param name="source">A sequence of EnergyDensity values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.EnergyDensity})">
            <summary>
            Computes the geometric mean of the sequence of EnergyDensity values.
            </summary>
            <param name="source">A sequence of EnergyDensity values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Frequency})">
            <summary>
            Computes the sum of the sequence of Frequency values.
            </summary>
            <param name="source">A sequence of Frequency values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Frequency})">
            <summary>
            Computes the geometric mean of the sequence of Frequency values.
            </summary>
            <param name="source">A sequence of Frequency values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Entropy})">
            <summary>
            Computes the sum of the sequence of Entropy values.
            </summary>
            <param name="source">A sequence of Entropy values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Entropy})">
            <summary>
            Computes the geometric mean of the sequence of Entropy values.
            </summary>
            <param name="source">A sequence of Entropy values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Force})">
            <summary>
            Computes the sum of the sequence of Force values.
            </summary>
            <param name="source">A sequence of Force values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Force})">
            <summary>
            Computes the geometric mean of the sequence of Force values.
            </summary>
            <param name="source">A sequence of Force values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.HeatDensity})">
            <summary>
            Computes the sum of the sequence of HeatDensity values.
            </summary>
            <param name="source">A sequence of HeatDensity values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.HeatDensity})">
            <summary>
            Computes the geometric mean of the sequence of HeatDensity values.
            </summary>
            <param name="source">A sequence of HeatDensity values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.HeatTransferCoefficient})">
            <summary>
            Computes the sum of the sequence of HeatTransferCoefficient values.
            </summary>
            <param name="source">A sequence of HeatTransferCoefficient values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.HeatTransferCoefficient})">
            <summary>
            Computes the geometric mean of the sequence of HeatTransferCoefficient values.
            </summary>
            <param name="source">A sequence of HeatTransferCoefficient values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Length})">
            <summary>
            Computes the sum of the sequence of Length values.
            </summary>
            <param name="source">A sequence of Length values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Length})">
            <summary>
            Computes the geometric mean of the sequence of Length values.
            </summary>
            <param name="source">A sequence of Length values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Mass})">
            <summary>
            Computes the sum of the sequence of Mass values.
            </summary>
            <param name="source">A sequence of Mass values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Mass})">
            <summary>
            Computes the geometric mean of the sequence of Mass values.
            </summary>
            <param name="source">A sequence of Mass values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.MassRate})">
            <summary>
            Computes the sum of the sequence of MassRate values.
            </summary>
            <param name="source">A sequence of MassRate values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.MassRate})">
            <summary>
            Computes the geometric mean of the sequence of MassRate values.
            </summary>
            <param name="source">A sequence of MassRate values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.MolalConcentration})">
            <summary>
            Computes the sum of the sequence of MolalConcentration values.
            </summary>
            <param name="source">A sequence of MolalConcentration values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.MolalConcentration})">
            <summary>
            Computes the geometric mean of the sequence of MolalConcentration values.
            </summary>
            <param name="source">A sequence of MolalConcentration values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.MolarConcentration})">
            <summary>
            Computes the sum of the sequence of MolarConcentration values.
            </summary>
            <param name="source">A sequence of MolarConcentration values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.MolarConcentration})">
            <summary>
            Computes the geometric mean of the sequence of MolarConcentration values.
            </summary>
            <param name="source">A sequence of MolarConcentration values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.MolarEntropy})">
            <summary>
            Computes the sum of the sequence of MolarEntropy values.
            </summary>
            <param name="source">A sequence of MolarEntropy values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.MolarEntropy})">
            <summary>
            Computes the geometric mean of the sequence of MolarEntropy values.
            </summary>
            <param name="source">A sequence of MolarEntropy values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.MolarHeatCapacity})">
            <summary>
            Computes the sum of the sequence of MolarHeatCapacity values.
            </summary>
            <param name="source">A sequence of MolarHeatCapacity values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.MolarHeatCapacity})">
            <summary>
            Computes the geometric mean of the sequence of MolarHeatCapacity values.
            </summary>
            <param name="source">A sequence of MolarHeatCapacity values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.MolarMass})">
            <summary>
            Computes the sum of the sequence of MolarMass values.
            </summary>
            <param name="source">A sequence of MolarMass values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.MolarMass})">
            <summary>
            Computes the geometric mean of the sequence of MolarMass values.
            </summary>
            <param name="source">A sequence of MolarMass values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.NormalizedVolumeRate})">
            <summary>
            Computes the sum of the sequence of NormalizedVolumeRate values.
            </summary>
            <param name="source">A sequence of NormalizedVolumeRate values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.NormalizedVolumeRate})">
            <summary>
            Computes the geometric mean of the sequence of NormalizedVolumeRate values.
            </summary>
            <param name="source">A sequence of NormalizedVolumeRate values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Percentage})">
            <summary>
            Computes the sum of the sequence of Percentage values.
            </summary>
            <param name="source">A sequence of Percentage values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Percentage})">
            <summary>
            Computes the geometric mean of the sequence of Percentage values.
            </summary>
            <param name="source">A sequence of Percentage values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Power})">
            <summary>
            Computes the sum of the sequence of Power values.
            </summary>
            <param name="source">A sequence of Power values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Power})">
            <summary>
            Computes the geometric mean of the sequence of Power values.
            </summary>
            <param name="source">A sequence of Power values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.PowerEfficiency})">
            <summary>
            Computes the sum of the sequence of PowerEfficiency values.
            </summary>
            <param name="source">A sequence of PowerEfficiency values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.PowerEfficiency})">
            <summary>
            Computes the geometric mean of the sequence of PowerEfficiency values.
            </summary>
            <param name="source">A sequence of PowerEfficiency values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Pressure})">
            <summary>
            Computes the sum of the sequence of Pressure values.
            </summary>
            <param name="source">A sequence of Pressure values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Pressure})">
            <summary>
            Computes the geometric mean of the sequence of Pressure values.
            </summary>
            <param name="source">A sequence of Pressure values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ReciprocalEnergy})">
            <summary>
            Computes the sum of the sequence of ReciprocalEnergy values.
            </summary>
            <param name="source">A sequence of ReciprocalEnergy values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ReciprocalEnergy})">
            <summary>
            Computes the geometric mean of the sequence of ReciprocalEnergy values.
            </summary>
            <param name="source">A sequence of ReciprocalEnergy values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ReciprocalLength})">
            <summary>
            Computes the sum of the sequence of ReciprocalLength values.
            </summary>
            <param name="source">A sequence of ReciprocalLength values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ReciprocalLength})">
            <summary>
            Computes the geometric mean of the sequence of ReciprocalLength values.
            </summary>
            <param name="source">A sequence of ReciprocalLength values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ReciprocalMass})">
            <summary>
            Computes the sum of the sequence of ReciprocalMass values.
            </summary>
            <param name="source">A sequence of ReciprocalMass values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ReciprocalMass})">
            <summary>
            Computes the geometric mean of the sequence of ReciprocalMass values.
            </summary>
            <param name="source">A sequence of ReciprocalMass values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ReciprocalVolume})">
            <summary>
            Computes the sum of the sequence of ReciprocalVolume values.
            </summary>
            <param name="source">A sequence of ReciprocalVolume values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ReciprocalVolume})">
            <summary>
            Computes the geometric mean of the sequence of ReciprocalVolume values.
            </summary>
            <param name="source">A sequence of ReciprocalVolume values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.RelativeHumidity})">
            <summary>
            Computes the sum of the sequence of RelativeHumidity values.
            </summary>
            <param name="source">A sequence of RelativeHumidity values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.RelativeHumidity})">
            <summary>
            Computes the geometric mean of the sequence of RelativeHumidity values.
            </summary>
            <param name="source">A sequence of RelativeHumidity values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.SpecificEnthalpy})">
            <summary>
            Computes the sum of the sequence of SpecificEnthalpy values.
            </summary>
            <param name="source">A sequence of SpecificEnthalpy values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.SpecificEnthalpy})">
            <summary>
            Computes the geometric mean of the sequence of SpecificEnthalpy values.
            </summary>
            <param name="source">A sequence of SpecificEnthalpy values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.SpecificEntropy})">
            <summary>
            Computes the sum of the sequence of SpecificEntropy values.
            </summary>
            <param name="source">A sequence of SpecificEntropy values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.SpecificEntropy})">
            <summary>
            Computes the geometric mean of the sequence of SpecificEntropy values.
            </summary>
            <param name="source">A sequence of SpecificEntropy values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.SpecificHeatCapacity})">
            <summary>
            Computes the sum of the sequence of SpecificHeatCapacity values.
            </summary>
            <param name="source">A sequence of SpecificHeatCapacity values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.SpecificHeatCapacity})">
            <summary>
            Computes the geometric mean of the sequence of SpecificHeatCapacity values.
            </summary>
            <param name="source">A sequence of SpecificHeatCapacity values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.SpecificHumidity})">
            <summary>
            Computes the sum of the sequence of SpecificHumidity values.
            </summary>
            <param name="source">A sequence of SpecificHumidity values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.SpecificHumidity})">
            <summary>
            Computes the geometric mean of the sequence of SpecificHumidity values.
            </summary>
            <param name="source">A sequence of SpecificHumidity values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.SpecificVolume})">
            <summary>
            Computes the sum of the sequence of SpecificVolume values.
            </summary>
            <param name="source">A sequence of SpecificVolume values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.SpecificVolume})">
            <summary>
            Computes the geometric mean of the sequence of SpecificVolume values.
            </summary>
            <param name="source">A sequence of SpecificVolume values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.TemperatureInterval})">
            <summary>
            Computes the sum of the sequence of TemperatureInterval values.
            </summary>
            <param name="source">A sequence of TemperatureInterval values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.TemperatureInterval})">
            <summary>
            Computes the geometric mean of the sequence of TemperatureInterval values.
            </summary>
            <param name="source">A sequence of TemperatureInterval values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.TemperatureLapseRate})">
            <summary>
            Computes the sum of the sequence of TemperatureLapseRate values.
            </summary>
            <param name="source">A sequence of TemperatureLapseRate values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.TemperatureLapseRate})">
            <summary>
            Computes the geometric mean of the sequence of TemperatureLapseRate values.
            </summary>
            <param name="source">A sequence of TemperatureLapseRate values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ThermalInsulance})">
            <summary>
            Computes the sum of the sequence of ThermalInsulance values.
            </summary>
            <param name="source">A sequence of ThermalInsulance values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.ThermalInsulance})">
            <summary>
            Computes the geometric mean of the sequence of ThermalInsulance values.
            </summary>
            <param name="source">A sequence of ThermalInsulance values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Time})">
            <summary>
            Computes the sum of the sequence of Time values.
            </summary>
            <param name="source">A sequence of Time values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Time})">
            <summary>
            Computes the geometric mean of the sequence of Time values.
            </summary>
            <param name="source">A sequence of Time values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.TimePerMass})">
            <summary>
            Computes the sum of the sequence of TimePerMass values.
            </summary>
            <param name="source">A sequence of TimePerMass values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.TimePerMass})">
            <summary>
            Computes the geometric mean of the sequence of TimePerMass values.
            </summary>
            <param name="source">A sequence of TimePerMass values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Velocity})">
            <summary>
            Computes the sum of the sequence of Velocity values.
            </summary>
            <param name="source">A sequence of Velocity values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Velocity})">
            <summary>
            Computes the geometric mean of the sequence of Velocity values.
            </summary>
            <param name="source">A sequence of Velocity values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Viscosity})">
            <summary>
            Computes the sum of the sequence of Viscosity values.
            </summary>
            <param name="source">A sequence of Viscosity values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Viscosity})">
            <summary>
            Computes the geometric mean of the sequence of Viscosity values.
            </summary>
            <param name="source">A sequence of Viscosity values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Volume})">
            <summary>
            Computes the sum of the sequence of Volume values.
            </summary>
            <param name="source">A sequence of Volume values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.Volume})">
            <summary>
            Computes the geometric mean of the sequence of Volume values.
            </summary>
            <param name="source">A sequence of Volume values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.VolumeFlux})">
            <summary>
            Computes the sum of the sequence of VolumeFlux values.
            </summary>
            <param name="source">A sequence of VolumeFlux values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.VolumeFlux})">
            <summary>
            Computes the geometric mean of the sequence of VolumeFlux values.
            </summary>
            <param name="source">A sequence of VolumeFlux values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.VolumeRate})">
            <summary>
            Computes the sum of the sequence of VolumeRate values.
            </summary>
            <param name="source">A sequence of VolumeRate values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.VolumeRate})">
            <summary>
            Computes the geometric mean of the sequence of VolumeRate values.
            </summary>
            <param name="source">A sequence of VolumeRate values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Sum(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.VolumeRatioRate})">
            <summary>
            Computes the sum of the sequence of VolumeRatioRate values.
            </summary>
            <param name="source">A sequence of VolumeRatioRate values to calculate the
            sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.IEnumerableExt.Mean(System.Collections.Generic.IEnumerable{Nalco.Numerics.SI.VolumeRatioRate})">
            <summary>
            Computes the geometric mean of the sequence of VolumeRatioRate values.
            </summary>
            <param name="source">A sequence of VolumeRatioRate values to calculate the
            geometric mean of.</param>
            <returns>The geometric mean of the values in the sequence.</returns>
        </member>
        <member name="T:Nalco.Numerics.SI.Descriptions">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.acceleration_of_free_fall_standard">
            <summary>
              Looks up a localized string similar to acceleration of free fall, standard.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.acre">
            <summary>
              Looks up a localized string similar to acres.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.amp">
            <summary>
              Looks up a localized string similar to amperes.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Angstrom">
            <summary>
              Looks up a localized string similar to Ångström.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.astronomica_unit">
            <summary>
              Looks up a localized string similar to astronomica unit.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.atmosphere">
            <summary>
              Looks up a localized string similar to atmospheres.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.attogram">
            <summary>
              Looks up a localized string similar to attograms.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.attogram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to attograms per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.attogram_per_second">
            <summary>
              Looks up a localized string similar to attograms per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.attohertz">
            <summary>
              Looks up a localized string similar to attohertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.attojoule_per_square_meter">
            <summary>
              Looks up a localized string similar to attojoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.attometer">
            <summary>
              Looks up a localized string similar to attometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.attometer_per_second">
            <summary>
              Looks up a localized string similar to attometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.attometer_per_second_squared">
            <summary>
              Looks up a localized string similar to attometers per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.attonewton">
            <summary>
              Looks up a localized string similar to attonewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.attopascal">
            <summary>
              Looks up a localized string similar to attopascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.attosecond">
            <summary>
              Looks up a localized string similar to attoseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.bar">
            <summary>
              Looks up a localized string similar to bars.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_IT">
            <summary>
              Looks up a localized string similar to British thermal units (IT).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_IT_foot_per_hour_square_foot_Fahrenheit">
            <summary>
              Looks up a localized string similar to British thermal units (IT) foot per hour square foot degree Fahrenheit.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_IT_inch_per_hour_square_foot_Fahrenheit">
            <summary>
              Looks up a localized string similar to British thermal units (IT) inch per hour square foot degree Fahrenheit.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_IT_inch_per_second_square_foot_Fahrenheit">
            <summary>
              Looks up a localized string similar to British thermal units (IT) inch per second square foot degree Fahrenheit.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_IT_per_Fahrenheit">
            <summary>
              Looks up a localized string similar to British thermal units (IT) per degree Fahrenheit.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_IT_per_hour">
            <summary>
              Looks up a localized string similar to British thermal units (IT) per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_IT_per_hour_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to British thermal units (IT) per hour per ton of refrigeration.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_IT_per_hour_square_foot_Fahrenheit">
            <summary>
              Looks up a localized string similar to British thermal units (IT) per hour square foot degree Fahrenheit.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_IT_per_kilowatt_hour">
            <summary>
              Looks up a localized string similar to British thermal units (IT) per kilowatt hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_IT_per_pound">
            <summary>
              Looks up a localized string similar to British thermal units (IT) per pound.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_IT_per_pound_Fahrenheit">
            <summary>
              Looks up a localized string similar to British thermal units (IT) per pound degree Fahrenheit.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_IT_per_pound_Rankine">
            <summary>
              Looks up a localized string similar to British thermal units (IT) per pound degree Rankine.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_IT_per_Rankine">
            <summary>
              Looks up a localized string similar to British thermal units (IT) per degree Rankine.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_IT_per_second">
            <summary>
              Looks up a localized string similar to British thermal units (IT) per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_IT_per_second_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to British thermal units (IT) per second per ton of refrigeration.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_IT_per_square_foot">
            <summary>
              Looks up a localized string similar to British thermal units (IT) per square foot.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_th">
            <summary>
              Looks up a localized string similar to British thermal units.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_th_foot_per_hour_square_foot_Fahrenheit">
            <summary>
              Looks up a localized string similar to British thermal units foot per hour square foot degree Fahrenheit.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_th_inch_per_hour_square_foot_Fahrenheit">
            <summary>
              Looks up a localized string similar to British thermal units inch per hour square foot degree Fahrenheit.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_th_inch_per_second_square_foot_Fahrenheit">
            <summary>
              Looks up a localized string similar to British thermal units inch per second square foot degree Fahrenheit.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_th_per_Fahrenheit">
            <summary>
              Looks up a localized string similar to British thermal units per degree Fahrenheit.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_th_per_hour">
            <summary>
              Looks up a localized string similar to British thermal units per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_th_per_hour_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to British thermal units per hour per ton of refrigeration.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_th_per_minute">
            <summary>
              Looks up a localized string similar to British thermal units per minute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_th_per_pound">
            <summary>
              Looks up a localized string similar to British thermal units per pound.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_th_per_pound_Fahrenheit">
            <summary>
              Looks up a localized string similar to British thermal units per pound degree Fahrenheit.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_th_per_pound_Rankine">
            <summary>
              Looks up a localized string similar to British thermal units per pound degree Rankine.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_th_per_Rankine">
            <summary>
              Looks up a localized string similar to British thermal units per degree Rankine.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_th_per_second">
            <summary>
              Looks up a localized string similar to British thermal units per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_th_per_second_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to British thermal units per second per ton of refrigeration.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_th_per_square_foot">
            <summary>
              Looks up a localized string similar to British thermal units per square foot.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Btu_th_per_year">
            <summary>
              Looks up a localized string similar to British thermal units per year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.bushel">
            <summary>
              Looks up a localized string similar to bushels.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.calorie_IT">
            <summary>
              Looks up a localized string similar to calories (IT).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.calorie_IT_per_gram">
            <summary>
              Looks up a localized string similar to calories (IT) per pound.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.calorie_IT_per_gram_Celsius">
            <summary>
              Looks up a localized string similar to calories (IT) per gram degree Celsius.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.calorie_IT_per_gram_kelvin">
            <summary>
              Looks up a localized string similar to calories (IT) per gram kelvin.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.calorie_IT_per_square_centimeter">
            <summary>
              Looks up a localized string similar to calories (IT) per square centimeter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.calorie_th">
            <summary>
              Looks up a localized string similar to calories.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.calorie_th_per_centimeter_second_Celsius">
            <summary>
              Looks up a localized string similar to calories per centimeter second degree Celsius.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.calorie_th_per_gram">
            <summary>
              Looks up a localized string similar to calories per pound.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.calorie_th_per_gram_Celsius">
            <summary>
              Looks up a localized string similar to calories per gram degree Celsius.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.calorie_th_per_gram_kelvin">
            <summary>
              Looks up a localized string similar to calories per gram kelvin.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.calorie_th_per_minute">
            <summary>
              Looks up a localized string similar to calories per minute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.calorie_th_per_second">
            <summary>
              Looks up a localized string similar to calories per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.calorie_th_per_square_centimeter">
            <summary>
              Looks up a localized string similar to calories per square centimeter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.carat">
            <summary>
              Looks up a localized string similar to carats.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Celsius">
            <summary>
              Looks up a localized string similar to degrees Celsius.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Celsius_per_kilometer">
            <summary>
              Looks up a localized string similar to degrees Celsius per kilometer.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Celsius_per_meter">
            <summary>
              Looks up a localized string similar to degrees Celsius per meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.centigram">
            <summary>
              Looks up a localized string similar to centigrams.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.centigram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to centigrams per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.centigram_per_second">
            <summary>
              Looks up a localized string similar to centigrams per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.centihertz">
            <summary>
              Looks up a localized string similar to centihertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.centijoule_per_square_meter">
            <summary>
              Looks up a localized string similar to centijoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.centimeter">
            <summary>
              Looks up a localized string similar to centimeters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.centimeter_per_day">
            <summary>
              Looks up a localized string similar to centimeters per day.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.centimeter_per_second">
            <summary>
              Looks up a localized string similar to centimeters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.centimeter_per_second_squared">
            <summary>
              Looks up a localized string similar to centimeters per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.centimeter_per_year">
            <summary>
              Looks up a localized string similar to centimeters per year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.centinewton">
            <summary>
              Looks up a localized string similar to centinewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.centipascal">
            <summary>
              Looks up a localized string similar to centipascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.centipoise">
            <summary>
              Looks up a localized string similar to centipoise.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.centisecond">
            <summary>
              Looks up a localized string similar to centiseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.chain">
            <summary>
              Looks up a localized string similar to chains.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cord">
            <summary>
              Looks up a localized string similar to cords.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_attometer">
            <summary>
              Looks up a localized string similar to cubic attometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_attometer_per_second">
            <summary>
              Looks up a localized string similar to cubic attometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_centimeter">
            <summary>
              Looks up a localized string similar to cubic centimeters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_centimeter_per_gram">
            <summary>
              Looks up a localized string similar to cubic centimeters per gram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_centimeter_per_second">
            <summary>
              Looks up a localized string similar to cubic centimeters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_decameter">
            <summary>
              Looks up a localized string similar to cubic decameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_decameter_per_second">
            <summary>
              Looks up a localized string similar to cubic decameters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_decimeter">
            <summary>
              Looks up a localized string similar to cubic decimeters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_decimeter_per_second">
            <summary>
              Looks up a localized string similar to cubic decimeters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_exameter">
            <summary>
              Looks up a localized string similar to cubic exameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_exameter_per_second">
            <summary>
              Looks up a localized string similar to cubic exameters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_femtometer">
            <summary>
              Looks up a localized string similar to cubic femtometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_femtometer_per_second">
            <summary>
              Looks up a localized string similar to cubic femtometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_foot">
            <summary>
              Looks up a localized string similar to cubic feet.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_foot_per_grain">
            <summary>
              Looks up a localized string similar to cubic feet per grain.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_foot_per_hour">
            <summary>
              Looks up a localized string similar to cubic feet per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_foot_per_minute">
            <summary>
              Looks up a localized string similar to cubic feet per minute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_foot_per_pound">
            <summary>
              Looks up a localized string similar to cubic feet per pound.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_foot_per_second">
            <summary>
              Looks up a localized string similar to cubic feet per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_foot_per_slug">
            <summary>
              Looks up a localized string similar to cubic feet per slug.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_gigameter">
            <summary>
              Looks up a localized string similar to cubic gigameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_gigameter_per_second">
            <summary>
              Looks up a localized string similar to cubic gigameters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_hectometer">
            <summary>
              Looks up a localized string similar to cubic hectometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_hectometer_per_second">
            <summary>
              Looks up a localized string similar to cubic hectometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_inch">
            <summary>
              Looks up a localized string similar to cubic inches.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_inch_per_minute">
            <summary>
              Looks up a localized string similar to cubic inches per minute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_inch_per_ounce">
            <summary>
              Looks up a localized string similar to cubic inches per ounce.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_inch_per_pound">
            <summary>
              Looks up a localized string similar to cubic inches per pound.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_kilometer">
            <summary>
              Looks up a localized string similar to cubic kilometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_kilometer_per_second">
            <summary>
              Looks up a localized string similar to cubic kilometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_megameter">
            <summary>
              Looks up a localized string similar to cubic megameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_megameter_per_second">
            <summary>
              Looks up a localized string similar to cubic megameters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_meter">
            <summary>
              Looks up a localized string similar to cubic meters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_meter_per_day">
            <summary>
              Looks up a localized string similar to cubic meters per day.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_meter_per_gram">
            <summary>
              Looks up a localized string similar to cubic meters per gram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_meter_per_hour">
            <summary>
              Looks up a localized string similar to cubic meters per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_meter_per_hour_per_cubic_meter">
            <summary>
              Looks up a localized string similar to cubic meters per hour per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_meter_per_hour_per_square_meter">
            <summary>
              Looks up a localized string similar to cubic meters per hour per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_meter_per_kilogram">
            <summary>
              Looks up a localized string similar to cubic meters per kilogram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_meter_per_minute">
            <summary>
              Looks up a localized string similar to cubic meters per minute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_meter_per_second">
            <summary>
              Looks up a localized string similar to cubic meters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_meter_per_second_per_cubic_meter">
            <summary>
              Looks up a localized string similar to cubic meters per second per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_meter_per_second_per_square_meter">
            <summary>
              Looks up a localized string similar to cubic meters per second per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_meter_per_year">
            <summary>
              Looks up a localized string similar to cubic meters per year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_micrometer">
            <summary>
              Looks up a localized string similar to cubic micrometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_micrometer_per_second">
            <summary>
              Looks up a localized string similar to cubic micrometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_mile">
            <summary>
              Looks up a localized string similar to cubic miles.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_millimeter">
            <summary>
              Looks up a localized string similar to cubic millimeters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_millimeter_per_second">
            <summary>
              Looks up a localized string similar to cubic millimeters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_nanometer">
            <summary>
              Looks up a localized string similar to cubic nanometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_nanometer_per_second">
            <summary>
              Looks up a localized string similar to cubic nanometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_petameter">
            <summary>
              Looks up a localized string similar to cubic petameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_petameter_per_second">
            <summary>
              Looks up a localized string similar to cubic petameters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_picometer">
            <summary>
              Looks up a localized string similar to cubic picometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_picometer_per_second">
            <summary>
              Looks up a localized string similar to cubic picometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_terameter">
            <summary>
              Looks up a localized string similar to cubic terameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_terameter_per_second">
            <summary>
              Looks up a localized string similar to cubic terameters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_yard">
            <summary>
              Looks up a localized string similar to cubic yards.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_yard_per_minute">
            <summary>
              Looks up a localized string similar to cubic yards per minute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_yard_per_pound">
            <summary>
              Looks up a localized string similar to cubic yards per pound.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_yard_per_ton">
            <summary>
              Looks up a localized string similar to cubic yards per ton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_yoctometer">
            <summary>
              Looks up a localized string similar to cubic yoctometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_yoctometer_per_second">
            <summary>
              Looks up a localized string similar to cubic yoctometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_yottameter">
            <summary>
              Looks up a localized string similar to cubic yottameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_yottameter_per_second">
            <summary>
              Looks up a localized string similar to cubic yottameters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_zeptometer">
            <summary>
              Looks up a localized string similar to cubic zeptometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_zeptometer_per_second">
            <summary>
              Looks up a localized string similar to cubic zeptometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_zettameter">
            <summary>
              Looks up a localized string similar to cubic zettameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cubic_zettameter_per_second">
            <summary>
              Looks up a localized string similar to cubic zettameters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cup">
            <summary>
              Looks up a localized string similar to cups.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cycles_per_day">
            <summary>
              Looks up a localized string similar to cycles per day.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cycles_per_hour">
            <summary>
              Looks up a localized string similar to cycles per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cycles_per_minute">
            <summary>
              Looks up a localized string similar to cycles per minute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.cycles_per_year">
            <summary>
              Looks up a localized string similar to cycles per year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.dalton">
            <summary>
              Looks up a localized string similar to daltons.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.day">
            <summary>
              Looks up a localized string similar to days.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.day_per_kilogram">
            <summary>
              Looks up a localized string similar to days per kilogram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.day_per_pound">
            <summary>
              Looks up a localized string similar to days per pound.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.day_per_ton">
            <summary>
              Looks up a localized string similar to days per ton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decagram">
            <summary>
              Looks up a localized string similar to decagrams.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decagram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to decagrams per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decagram_per_second">
            <summary>
              Looks up a localized string similar to decagrams per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decahertz">
            <summary>
              Looks up a localized string similar to decahertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decajoule_per_square_meter">
            <summary>
              Looks up a localized string similar to decajoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decameter">
            <summary>
              Looks up a localized string similar to decameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decameter_per_second">
            <summary>
              Looks up a localized string similar to decameters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decameter_per_second_squared">
            <summary>
              Looks up a localized string similar to decameters per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decanewton">
            <summary>
              Looks up a localized string similar to decanewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decapascal">
            <summary>
              Looks up a localized string similar to decapascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decasecond">
            <summary>
              Looks up a localized string similar to decaseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decigram">
            <summary>
              Looks up a localized string similar to decigrams.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decigram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to decigrams per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decigram_per_second">
            <summary>
              Looks up a localized string similar to decigrams per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decihertz">
            <summary>
              Looks up a localized string similar to decihertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decijoule_per_square_meter">
            <summary>
              Looks up a localized string similar to decijoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decimeter">
            <summary>
              Looks up a localized string similar to decimeters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decimeter_per_second">
            <summary>
              Looks up a localized string similar to decimeters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decimeter_per_second_squared">
            <summary>
              Looks up a localized string similar to decimeters per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decinewton">
            <summary>
              Looks up a localized string similar to decinewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decipascal">
            <summary>
              Looks up a localized string similar to decipascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.decisecond">
            <summary>
              Looks up a localized string similar to deciseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.dyne">
            <summary>
              Looks up a localized string similar to dyne.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.equivalents_per_liter">
            <summary>
              Looks up a localized string similar to equivalents per liter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.erg_per_second">
            <summary>
              Looks up a localized string similar to ergs per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.exagram">
            <summary>
              Looks up a localized string similar to exagrams.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.exagram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to exagrams per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.exagram_per_second">
            <summary>
              Looks up a localized string similar to exagrams per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.exahertz">
            <summary>
              Looks up a localized string similar to exahertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.exajoule_per_square_meter">
            <summary>
              Looks up a localized string similar to exajoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.exameter">
            <summary>
              Looks up a localized string similar to exameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.exameter_per_second">
            <summary>
              Looks up a localized string similar to exameters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.exameter_per_second_squared">
            <summary>
              Looks up a localized string similar to exameters per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.exanewton">
            <summary>
              Looks up a localized string similar to exanewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.exapascal">
            <summary>
              Looks up a localized string similar to exapascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.exasecond">
            <summary>
              Looks up a localized string similar to exaseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Fahrenheit">
            <summary>
              Looks up a localized string similar to degrees Fahrenheit.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Fahrenheit_hour_square_foot_per_Btu_IT">
            <summary>
              Looks up a localized string similar to degrees Fahrenheit hour square foot per British thermal unit (IT).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Fahrenheit_per_foot">
            <summary>
              Looks up a localized string similar to degrees Fahrenheit per foot.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Fahrenheit_per_mile">
            <summary>
              Looks up a localized string similar to degrees Fahrenheit per mile.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.fathom">
            <summary>
              Looks up a localized string similar to fathoms.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.femtogram">
            <summary>
              Looks up a localized string similar to femtograms.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.femtogram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to femtograms per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.femtogram_per_second">
            <summary>
              Looks up a localized string similar to femtograms per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.femtohertz">
            <summary>
              Looks up a localized string similar to femtohertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.femtojoule_per_square_meter">
            <summary>
              Looks up a localized string similar to femtojoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.femtometer">
            <summary>
              Looks up a localized string similar to femotmeters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.femtometer_per_second">
            <summary>
              Looks up a localized string similar to femtometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.femtometer_per_second_squared">
            <summary>
              Looks up a localized string similar to femtometers per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.femtonewton">
            <summary>
              Looks up a localized string similar to femtonewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.femtopascal">
            <summary>
              Looks up a localized string similar to femtopascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.femtosecond">
            <summary>
              Looks up a localized string similar to femtoseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.fluid_ounce">
            <summary>
              Looks up a localized string similar to fluid ounces.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.fluid_ounce_imperial">
            <summary>
              Looks up a localized string similar to fluid ounces (Imperial).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.foot">
            <summary>
              Looks up a localized string similar to feet.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.foot_of_water_20C">
            <summary>
              Looks up a localized string similar to feet of water (20 °C).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.foot_per_hour">
            <summary>
              Looks up a localized string similar to feet per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.foot_per_minute">
            <summary>
              Looks up a localized string similar to feet per minute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.foot_per_second">
            <summary>
              Looks up a localized string similar to feet per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.foot_per_second_squared">
            <summary>
              Looks up a localized string similar to feet per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.foot_pound_force_per_hour">
            <summary>
              Looks up a localized string similar to foot pounds-force per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.foot_pound_force_per_minute">
            <summary>
              Looks up a localized string similar to foot pounds-force per minute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.foot_pound_force_per_second">
            <summary>
              Looks up a localized string similar to foot pounds-force per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gal">
            <summary>
              Looks up a localized string similar to gal.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gallon">
            <summary>
              Looks up a localized string similar to gallons.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gallon_imperial">
            <summary>
              Looks up a localized string similar to gallons (Imperial).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gallon_imperial_per_ounce">
            <summary>
              Looks up a localized string similar to gallons (Imperial) per ounce.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gallon_imperial_per_pound">
            <summary>
              Looks up a localized string similar to gallons (Imperial) per pound.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gallon_per_day">
            <summary>
              Looks up a localized string similar to gallons per day.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gallon_per_day_per_square_foot">
            <summary>
              Looks up a localized string similar to gallons per day per square foot.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gallon_per_grain">
            <summary>
              Looks up a localized string similar to gallons per grain.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gallon_per_minute">
            <summary>
              Looks up a localized string similar to gallons per minute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gallon_per_minute_per_cubic_foot">
            <summary>
              Looks up a localized string similar to gallons per minute per cubic foot.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gallon_per_minute_per_square_foot">
            <summary>
              Looks up a localized string similar to gallons per minute per square foot.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gallon_per_ounce">
            <summary>
              Looks up a localized string similar to gallons per ounce.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gallon_per_pound">
            <summary>
              Looks up a localized string similar to gallons per pound.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gallon_per_year">
            <summary>
              Looks up a localized string similar to gallons per year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gigagram">
            <summary>
              Looks up a localized string similar to gigagrams.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gigagram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to gigagrams per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gigagram_per_second">
            <summary>
              Looks up a localized string similar to gigagrams per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gigahertz">
            <summary>
              Looks up a localized string similar to gigahertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gigajoule">
            <summary>
              Looks up a localized string similar to gigajoules.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gigajoule_per_hour">
            <summary>
              Looks up a localized string similar to gigajoules per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gigajoule_per_square_meter">
            <summary>
              Looks up a localized string similar to gigajoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gigameter">
            <summary>
              Looks up a localized string similar to gigameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gigameter_per_second">
            <summary>
              Looks up a localized string similar to gigameters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gigameter_per_second_squared">
            <summary>
              Looks up a localized string similar to gigameters per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.giganewton">
            <summary>
              Looks up a localized string similar to giganewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gigapascal">
            <summary>
              Looks up a localized string similar to gigapascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gigasecond">
            <summary>
              Looks up a localized string similar to gigaseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gigawatt">
            <summary>
              Looks up a localized string similar to gigawatts.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.grain">
            <summary>
              Looks up a localized string similar to grains.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.grain_per_cubic_foot">
            <summary>
              Looks up a localized string similar to grains per cubic foot.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.grain_per_gallon">
            <summary>
              Looks up a localized string similar to grains per gallon.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.grain_per_pound">
            <summary>
              Looks up a localized string similar to grains per pound.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gram">
            <summary>
              Looks up a localized string similar to grams.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gram_per_cubic_centimeter">
            <summary>
              Looks up a localized string similar to grams per cubic centimeter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to grams per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gram_per_kilogram">
            <summary>
              Looks up a localized string similar to grams per kilogram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gram_per_liter">
            <summary>
              Looks up a localized string similar to grams per liter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gram_per_mole">
            <summary>
              Looks up a localized string similar to grams per mole.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.gram_per_second">
            <summary>
              Looks up a localized string similar to grams per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hectare">
            <summary>
              Looks up a localized string similar to hectares.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hectogram">
            <summary>
              Looks up a localized string similar to hectograms.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hectogram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to hectograms per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hectogram_per_second">
            <summary>
              Looks up a localized string similar to hectograms per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hectohertz">
            <summary>
              Looks up a localized string similar to hectohertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hectojoule_per_square_meter">
            <summary>
              Looks up a localized string similar to hectojoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hectoliter">
            <summary>
              Looks up a localized string similar to hectoliters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hectometer">
            <summary>
              Looks up a localized string similar to hectometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hectometer_per_second">
            <summary>
              Looks up a localized string similar to hectometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hectometer_per_second_squared">
            <summary>
              Looks up a localized string similar to hectometers per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hectonewton">
            <summary>
              Looks up a localized string similar to hectonewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hectopascal">
            <summary>
              Looks up a localized string similar to hectopascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hectosecond">
            <summary>
              Looks up a localized string similar to hectoseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hertz">
            <summary>
              Looks up a localized string similar to hertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.horsepower">
            <summary>
              Looks up a localized string similar to horsepower (550 ft · lbf/s).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.horsepower_boiler">
            <summary>
              Looks up a localized string similar to horsepower (boiler).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.horsepower_electric">
            <summary>
              Looks up a localized string similar to horsepower (electric).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.horsepower_metric">
            <summary>
              Looks up a localized string similar to horsepower (metric).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.horsepower_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to horsepower per ton of refrigeration.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.horsepower_uk">
            <summary>
              Looks up a localized string similar to horsepower (U.K.).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.horsepower_water">
            <summary>
              Looks up a localized string similar to horsepower (water).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hour">
            <summary>
              Looks up a localized string similar to hours.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hour_per_kilogram">
            <summary>
              Looks up a localized string similar to hours per kilogram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hour_per_megagram">
            <summary>
              Looks up a localized string similar to hours per megagram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hour_per_pound">
            <summary>
              Looks up a localized string similar to hours per pound.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.hour_per_ton">
            <summary>
              Looks up a localized string similar to hours per ton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.inch">
            <summary>
              Looks up a localized string similar to inches.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.inch_of_mercury">
            <summary>
              Looks up a localized string similar to inches of mercury.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.inch_of_water_20C">
            <summary>
              Looks up a localized string similar to inches of water (20 °C).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.inch_per_day">
            <summary>
              Looks up a localized string similar to inches per day.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.inch_per_second">
            <summary>
              Looks up a localized string similar to inches per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.inch_per_second_squared">
            <summary>
              Looks up a localized string similar to inches per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.inch_per_year">
            <summary>
              Looks up a localized string similar to inches per year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.joule">
            <summary>
              Looks up a localized string similar to joules.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.joule_per_cubic_meter">
            <summary>
              Looks up a localized string similar to joules per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.joule_per_joule">
            <summary>
              Looks up a localized string similar to joules per joule.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.joule_per_kelvin">
            <summary>
              Looks up a localized string similar to joules per kelvin.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.joule_per_kilogram">
            <summary>
              Looks up a localized string similar to joules per kilogram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.joule_per_kilogram_kelvin">
            <summary>
              Looks up a localized string similar to joules per kilogram kelvin.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.joule_per_mole_kelvin">
            <summary>
              Looks up a localized string similar to joules per mole kelvin.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.joule_per_square_centimeter">
            <summary>
              Looks up a localized string similar to joules per square centimeter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.joule_per_square_meter">
            <summary>
              Looks up a localized string similar to joules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kelvin">
            <summary>
              Looks up a localized string similar to kelvin.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kelvin_per_kilometer">
            <summary>
              Looks up a localized string similar to kelvins per kilometer.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kelvin_per_meter">
            <summary>
              Looks up a localized string similar to kelvins per meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kiloamp">
            <summary>
              Looks up a localized string similar to kiloamperes.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilocalorie_th_per_hour_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to kilocalories per hour per ton of refrigeration.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilocalorie_th_per_minute">
            <summary>
              Looks up a localized string similar to kilocalories per minute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilocalorie_th_per_second">
            <summary>
              Looks up a localized string similar to kilocalories per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilocalorie_th_per_second_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to kilocalories per second per ton of refrigeration.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilogram">
            <summary>
              Looks up a localized string similar to kilograms.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilogram_force">
            <summary>
              Looks up a localized string similar to kilogram force.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilogram_force_per_square_centimeter">
            <summary>
              Looks up a localized string similar to kilogram-force per square centimeter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilogram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to kilograms per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilogram_per_day">
            <summary>
              Looks up a localized string similar to kilograms per day.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilogram_per_hour">
            <summary>
              Looks up a localized string similar to kilograms per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilogram_per_joule">
            <summary>
              Looks up a localized string similar to kilograms per joule.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilogram_per_kilogram">
            <summary>
              Looks up a localized string similar to kilograms per kilogram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilogram_per_liter">
            <summary>
              Looks up a localized string similar to kilograms per liter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilogram_per_megajoule">
            <summary>
              Looks up a localized string similar to kilograms per megajoule.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilogram_per_MillionBtu_IT">
            <summary>
              Looks up a localized string similar to kilograms per million British thermal unit (IT).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilogram_per_MillionBtu_th">
            <summary>
              Looks up a localized string similar to kilograms per million British thermal unit.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilogram_per_minute">
            <summary>
              Looks up a localized string similar to kilograms per minute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilogram_per_mole">
            <summary>
              Looks up a localized string similar to kilograms per mole.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilogram_per_second">
            <summary>
              Looks up a localized string similar to kilograms per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilogram_per_year">
            <summary>
              Looks up a localized string similar to kilograms per year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilohertz">
            <summary>
              Looks up a localized string similar to kilohertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilojoule">
            <summary>
              Looks up a localized string similar to kilojoules.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilojoule_per_hour">
            <summary>
              Looks up a localized string similar to kilojoules per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilojoule_per_kilogram">
            <summary>
              Looks up a localized string similar to kilojoules per kilogram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilojoule_per_kilogram_kelvin">
            <summary>
              Looks up a localized string similar to kilojoules per kilogram kelvin.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilojoule_per_kilowatt_hour">
            <summary>
              Looks up a localized string similar to kilojoules per kilowatt hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilojoule_per_square_meter">
            <summary>
              Looks up a localized string similar to kilojoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilometer">
            <summary>
              Looks up a localized string similar to kilometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilometer_per_hour">
            <summary>
              Looks up a localized string similar to kilometers per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilometer_per_second">
            <summary>
              Looks up a localized string similar to kilometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilometer_per_second_squared">
            <summary>
              Looks up a localized string similar to kilometers per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilonewton">
            <summary>
              Looks up a localized string similar to kilonewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilonewton_per_meter">
            <summary>
              Looks up a localized string similar to kilonewtons per meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilopascal">
            <summary>
              Looks up a localized string similar to kilopascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilopond">
            <summary>
              Looks up a localized string similar to kilopond.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilosecond">
            <summary>
              Looks up a localized string similar to kiloseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilovolt">
            <summary>
              Looks up a localized string similar to kilovolts.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilowatt">
            <summary>
              Looks up a localized string similar to kilowatts.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilowatt_hour">
            <summary>
              Looks up a localized string similar to kilowatt hours.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilowatt_hour_per_square_meter">
            <summary>
              Looks up a localized string similar to kilowatt hours per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilowatt_hour_per_year">
            <summary>
              Looks up a localized string similar to kilowatt hours per year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilowatt_per_meter_kelvin">
            <summary>
              Looks up a localized string similar to kilowatts per meter kelvin.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilowatt_per_square_meter_Celsius">
            <summary>
              Looks up a localized string similar to kilowatts per square meter degree Celsius.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kilowatt_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to kilowatts per ton of refrigeration.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.kip">
            <summary>
              Looks up a localized string similar to kip.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.knot">
            <summary>
              Looks up a localized string similar to knots.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.langley">
            <summary>
              Looks up a localized string similar to langleys.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.light_year">
            <summary>
              Looks up a localized string similar to light year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.liter">
            <summary>
              Looks up a localized string similar to liters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.liter_per_gram">
            <summary>
              Looks up a localized string similar to liters per gram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.liter_per_hour">
            <summary>
              Looks up a localized string similar to liters per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.liter_per_hour_per_square_meter">
            <summary>
              Looks up a localized string similar to liters per hour per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.liter_per_milligram">
            <summary>
              Looks up a localized string similar to liters per milligram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.liter_per_minute">
            <summary>
              Looks up a localized string similar to liters per minute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.liter_per_second">
            <summary>
              Looks up a localized string similar to liters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megaamp">
            <summary>
              Looks up a localized string similar to megaamperes.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megagram">
            <summary>
              Looks up a localized string similar to megagrams.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megagram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to megagrams per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megagram_per_second">
            <summary>
              Looks up a localized string similar to megagrams per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megahertz">
            <summary>
              Looks up a localized string similar to megahertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megajoule">
            <summary>
              Looks up a localized string similar to megajoules.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megajoule_per_gallon">
            <summary>
              Looks up a localized string similar to megajoules per gallon.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megajoule_per_hour">
            <summary>
              Looks up a localized string similar to megajoules per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megajoule_per_kilogram">
            <summary>
              Looks up a localized string similar to megajoules per kilogram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megajoule_per_oil_barrel">
            <summary>
              Looks up a localized string similar to megajoules per oil barrel.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megajoule_per_square_meter">
            <summary>
              Looks up a localized string similar to megajoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megajoule_per_thousand_cubic_foot">
            <summary>
              Looks up a localized string similar to megajoules per thousand cubic foot.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megameter">
            <summary>
              Looks up a localized string similar to megameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megameter_per_second">
            <summary>
              Looks up a localized string similar to megameters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megameter_per_second_squared">
            <summary>
              Looks up a localized string similar to megameters per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.meganewton">
            <summary>
              Looks up a localized string similar to meganewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megapascal">
            <summary>
              Looks up a localized string similar to megapascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megasecond">
            <summary>
              Looks up a localized string similar to megaseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megavolt">
            <summary>
              Looks up a localized string similar to megavolts.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megawatt">
            <summary>
              Looks up a localized string similar to megawatts.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megawatt_hour_per_year">
            <summary>
              Looks up a localized string similar to megawatt hours per year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megawatt_per_meter_kelvin">
            <summary>
              Looks up a localized string similar to megawatts per meter kelvin.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.megawatt_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to megawatts per ton of refrigeration.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.meter">
            <summary>
              Looks up a localized string similar to meters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.meter_per_minute">
            <summary>
              Looks up a localized string similar to meters per minute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.meter_per_second">
            <summary>
              Looks up a localized string similar to meters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.meter_per_second_squared">
            <summary>
              Looks up a localized string similar to meters per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.microamp">
            <summary>
              Looks up a localized string similar to microamperes.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.microgram">
            <summary>
              Looks up a localized string similar to micrograms.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.microgram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to micrograms per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.microgram_per_second">
            <summary>
              Looks up a localized string similar to micrograms per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.microhertz">
            <summary>
              Looks up a localized string similar to microhertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.microinch">
            <summary>
              Looks up a localized string similar to microinches.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.microjoule">
            <summary>
              Looks up a localized string similar to microjoules.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.microjoule_per_kilogram">
            <summary>
              Looks up a localized string similar to microjoules per kilogram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.microjoule_per_square_meter">
            <summary>
              Looks up a localized string similar to microjoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.micrometer">
            <summary>
              Looks up a localized string similar to micrometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.micrometer_per_second">
            <summary>
              Looks up a localized string similar to micrometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.micrometer_per_second_squared">
            <summary>
              Looks up a localized string similar to micrometers per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.micronewton">
            <summary>
              Looks up a localized string similar to micronewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.micropascal">
            <summary>
              Looks up a localized string similar to micropascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.microsecond">
            <summary>
              Looks up a localized string similar to microseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.microSiemens_per_centimeter">
            <summary>
              Looks up a localized string similar to microSiemens per centimeter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.microSiemens_per_meter">
            <summary>
              Looks up a localized string similar to microSiemens per meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.microvolt">
            <summary>
              Looks up a localized string similar to microvolts.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.mil">
            <summary>
              Looks up a localized string similar to mils.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.mil_per_year">
            <summary>
              Looks up a localized string similar to mils per year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.mile">
            <summary>
              Looks up a localized string similar to miles.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.mile_per_day">
            <summary>
              Looks up a localized string similar to miles per day.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.mile_per_hour">
            <summary>
              Looks up a localized string similar to miles per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.mile_per_minute">
            <summary>
              Looks up a localized string similar to miles per minute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.mile_per_second">
            <summary>
              Looks up a localized string similar to miles per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.milliamp">
            <summary>
              Looks up a localized string similar to milliamperes.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.millibar">
            <summary>
              Looks up a localized string similar to millibars.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.milligram">
            <summary>
              Looks up a localized string similar to milligrams.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.milligram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to milligrams per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.milligram_per_liter">
            <summary>
              Looks up a localized string similar to milligrams per liter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.milligram_per_second">
            <summary>
              Looks up a localized string similar to milligrams per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.millihertz">
            <summary>
              Looks up a localized string similar to millihertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.millijoule">
            <summary>
              Looks up a localized string similar to millijoules.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.millijoule_per_kilogram">
            <summary>
              Looks up a localized string similar to millijoules per kilogram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.millijoule_per_square_meter">
            <summary>
              Looks up a localized string similar to millijoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.millimeter">
            <summary>
              Looks up a localized string similar to millimeters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.millimeter_of_mercury">
            <summary>
              Looks up a localized string similar to millimeters of mercury.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.millimeter_per_second">
            <summary>
              Looks up a localized string similar to millimeters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.millimeter_per_second_squared">
            <summary>
              Looks up a localized string similar to millimeters per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.millimeter_per_year">
            <summary>
              Looks up a localized string similar to millimeters per year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.millinewton">
            <summary>
              Looks up a localized string similar to millinewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.millinewton_per_meter">
            <summary>
              Looks up a localized string similar to millinewtons per meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.million_pounds_per_hour">
            <summary>
              Looks up a localized string similar to million pounds per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.MillionBtu_IT_per_gallon">
            <summary>
              Looks up a localized string similar to million British thermal units (IT) per gallon.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.MillionBtu_IT_per_hour">
            <summary>
              Looks up a localized string similar to million British thermal units (IT) per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.MillionBtu_IT_per_hour_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to million British thermal units (IT) per hour per ton of refrigeration.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.MillionBtu_IT_per_oil_barrel">
            <summary>
              Looks up a localized string similar to million British thermal units (IT) per oil barrel.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.MillionBtu_IT_per_thousand_cubic_foot">
            <summary>
              Looks up a localized string similar to million British thermal units (IT) per thousand cubic foot.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.MillionBtu_th_per_gallon">
            <summary>
              Looks up a localized string similar to million British thermal units per gallon.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.MillionBtu_th_per_hour">
            <summary>
              Looks up a localized string similar to million British thermal units per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.MillionBtu_th_per_hour_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to million British thermal units per hour per ton of refrigeration.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.MillionBtu_th_per_oil_barrel">
            <summary>
              Looks up a localized string similar to million British thermal units per oil barrel.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.MillionBtu_th_per_thousand_cubic_foot">
            <summary>
              Looks up a localized string similar to million British thermal units per thousand cubic foot.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.MillionBtu_th_per_year">
            <summary>
              Looks up a localized string similar to million British thermal units per year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.millipascal">
            <summary>
              Looks up a localized string similar to millipascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.millipascal_second">
            <summary>
              Looks up a localized string similar to milipascal seconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.millisecond">
            <summary>
              Looks up a localized string similar to milliseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.milliSiemens_per_centimeter">
            <summary>
              Looks up a localized string similar to milliSiemens per centimeter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.milliSiemens_per_meter">
            <summary>
              Looks up a localized string similar to miliSiemens per meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.millivolt">
            <summary>
              Looks up a localized string similar to millivolts.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.minute">
            <summary>
              Looks up a localized string similar to minutes.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.minute_per_kilogram">
            <summary>
              Looks up a localized string similar to minutes per kilogram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.minute_per_pound">
            <summary>
              Looks up a localized string similar to minutes per pound.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.minute_per_ton">
            <summary>
              Looks up a localized string similar to minutes per ton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.molal">
            <summary>
              Looks up a localized string similar to molal.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.molar">
            <summary>
              Looks up a localized string similar to molar.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.mole">
            <summary>
              Looks up a localized string similar to moles.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.mole_per_cubic_decimeter">
            <summary>
              Looks up a localized string similar to moles per cubic decimeter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.mole_per_cubic_meter">
            <summary>
              Looks up a localized string similar to moles per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.mole_per_gram">
            <summary>
              Looks up a localized string similar to moles per gram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.mole_per_kilogram">
            <summary>
              Looks up a localized string similar to moles per kilogram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.mole_per_liter">
            <summary>
              Looks up a localized string similar to moles per liter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.nanogram">
            <summary>
              Looks up a localized string similar to nanograms.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.nanogram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to nanograms per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.nanogram_per_second">
            <summary>
              Looks up a localized string similar to nanograms per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.nanohertz">
            <summary>
              Looks up a localized string similar to nanohertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.nanojoule_per_square_meter">
            <summary>
              Looks up a localized string similar to nanojoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.nanometer">
            <summary>
              Looks up a localized string similar to nanometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.nanometer_per_second">
            <summary>
              Looks up a localized string similar to nanometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.nanometer_per_second_squared">
            <summary>
              Looks up a localized string similar to nanometers per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.nanonewton">
            <summary>
              Looks up a localized string similar to nanonewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.nanopascal">
            <summary>
              Looks up a localized string similar to nanopascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.nanosecond">
            <summary>
              Looks up a localized string similar to nanoseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.nautical_mile">
            <summary>
              Looks up a localized string similar to nautical miles.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.newton">
            <summary>
              Looks up a localized string similar to newton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.newton_per_meter">
            <summary>
              Looks up a localized string similar to newtons per meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.normal_cubic_meter_per_second_20C_1atm_dry">
            <summary>
              Looks up a localized string similar to normal cubic meters per second (20 °C 1 atm, dry).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.oil_barrel">
            <summary>
              Looks up a localized string similar to oil barrel.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.oil_barrels_per_day">
            <summary>
              Looks up a localized string similar to barrels per day (oil).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ounce">
            <summary>
              Looks up a localized string similar to ounces.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ounce_force">
            <summary>
              Looks up a localized string similar to ounce force.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ounce_per_cubic_inch">
            <summary>
              Looks up a localized string similar to ounces per cubic inch.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ounce_per_gallon">
            <summary>
              Looks up a localized string similar to ounces per gallon.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ounce_per_gallon_imperial">
            <summary>
              Looks up a localized string similar to ounces per gallon (Imperial).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ounce_troy">
            <summary>
              Looks up a localized string similar to ounces (troy).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.parsec">
            <summary>
              Looks up a localized string similar to parsecs.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pascal">
            <summary>
              Looks up a localized string similar to pascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pascal_per_pascal">
            <summary>
              Looks up a localized string similar to pascals per pascal.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pascal_second">
            <summary>
              Looks up a localized string similar to pascal seconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.peck">
            <summary>
              Looks up a localized string similar to pecks.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.percent">
            <summary>
              Looks up a localized string similar to percent.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.petagram">
            <summary>
              Looks up a localized string similar to petagrams.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.petagram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to petagrams per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.petagram_per_second">
            <summary>
              Looks up a localized string similar to petagrams per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.petahertz">
            <summary>
              Looks up a localized string similar to petahertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.petajoule_per_square_meter">
            <summary>
              Looks up a localized string similar to petajoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.petameter">
            <summary>
              Looks up a localized string similar to petameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.petameter_per_second">
            <summary>
              Looks up a localized string similar to petameters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.petameter_per_second_squared">
            <summary>
              Looks up a localized string similar to petameters per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.petanewton">
            <summary>
              Looks up a localized string similar to petanewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.petapascal">
            <summary>
              Looks up a localized string similar to petapascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.petasecond">
            <summary>
              Looks up a localized string similar to petaseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pica_computer">
            <summary>
              Looks up a localized string similar to picas (computer).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pica_print">
            <summary>
              Looks up a localized string similar to picas (printer&apos;s).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.picogram">
            <summary>
              Looks up a localized string similar to picograms.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.picogram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to picograms per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.picogram_per_second">
            <summary>
              Looks up a localized string similar to picograms per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.picohertz">
            <summary>
              Looks up a localized string similar to picohertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.picojoule_per_square_meter">
            <summary>
              Looks up a localized string similar to picojoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.picometer">
            <summary>
              Looks up a localized string similar to picometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.picometer_per_second">
            <summary>
              Looks up a localized string similar to picometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.picometer_per_second_squared">
            <summary>
              Looks up a localized string similar to picometers per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.piconewton">
            <summary>
              Looks up a localized string similar to piconewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.picopascal">
            <summary>
              Looks up a localized string similar to picopascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.picosecond">
            <summary>
              Looks up a localized string similar to picoseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pint_dry">
            <summary>
              Looks up a localized string similar to dry pints.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pint_liquid">
            <summary>
              Looks up a localized string similar to liquid pints.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.point_computer">
            <summary>
              Looks up a localized string similar to points (computer).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.point_print">
            <summary>
              Looks up a localized string similar to points (printer&apos;s).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.poise">
            <summary>
              Looks up a localized string similar to poise.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound">
            <summary>
              Looks up a localized string similar to pounds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_force">
            <summary>
              Looks up a localized string similar to pound force.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_cubic_foot">
            <summary>
              Looks up a localized string similar to pounds per cubic foot.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_cubic_inch">
            <summary>
              Looks up a localized string similar to pounds per cubic inch.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_cubic_yard">
            <summary>
              Looks up a localized string similar to pounds per cubic yard.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_day">
            <summary>
              Looks up a localized string similar to pounds per day.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_gallon">
            <summary>
              Looks up a localized string similar to pounds per gallon.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_gallon_imperial">
            <summary>
              Looks up a localized string similar to pounds per gallon (Imperial).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_hour">
            <summary>
              Looks up a localized string similar to pounds per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_megajoule">
            <summary>
              Looks up a localized string similar to pounds per megajoule.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_MillionBtu_IT">
            <summary>
              Looks up a localized string similar to pounds per million British thermal unit (IT).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_MillionBtu_th">
            <summary>
              Looks up a localized string similar to pounds per million British thermal unit.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_minute">
            <summary>
              Looks up a localized string similar to pounds per minute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_pound">
            <summary>
              Looks up a localized string similar to pounds per pound.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_second">
            <summary>
              Looks up a localized string similar to pounds per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_square_inch">
            <summary>
              Looks up a localized string similar to pounds per square inch.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_square_inch_a">
            <summary>
              Looks up a localized string similar to pounds per square inch absolute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_square_inch_a_per_pound_per_square_inch_a">
            <summary>
              Looks up a localized string similar to pounds per square inch gauge per pound per square inch gauge.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_square_inch_g">
            <summary>
              Looks up a localized string similar to pounds per square inch gauge.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_square_inch_g_per_pound_per_square_inch_g">
            <summary>
              Looks up a localized string similar to pounds per square inch absolute per pound per square inch absolute.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_thousand_oil_barrels">
            <summary>
              Looks up a localized string similar to pounds per thousand barrels (oil).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_per_year">
            <summary>
              Looks up a localized string similar to pounds per year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.pound_troy">
            <summary>
              Looks up a localized string similar to pounds (troy).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.poundal">
            <summary>
              Looks up a localized string similar to poundal.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.quart_dry">
            <summary>
              Looks up a localized string similar to dry quarts.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.quart_liquid">
            <summary>
              Looks up a localized string similar to liq quarts.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Rankine">
            <summary>
              Looks up a localized string similar to degrees Rankine.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Rankine_per_kilometer">
            <summary>
              Looks up a localized string similar to degrees Rankine per kilometer.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Rankine_per_meter">
            <summary>
              Looks up a localized string similar to degrees Rankine per meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ratio">
            <summary>
              Looks up a localized string similar to ratio.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.reciprocal_100_cubic_foot">
            <summary>
              Looks up a localized string similar to per 100 cubic feet.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.reciprocal_1000_gallon">
            <summary>
              Looks up a localized string similar to per 1000 gallons.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.reciprocal_centimeter">
            <summary>
              Looks up a localized string similar to reciprocal centimeters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.reciprocal_cubic_meter">
            <summary>
              Looks up a localized string similar to per cubic meters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.reciprocal_foot">
            <summary>
              Looks up a localized string similar to reciprocal feet.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.reciprocal_inch">
            <summary>
              Looks up a localized string similar to reciprocal inches.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.reciprocal_joule">
            <summary>
              Looks up a localized string similar to per joules.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.reciprocal_kilogram">
            <summary>
              Looks up a localized string similar to reciprocal kilograms.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.reciprocal_kilowatt_hour">
            <summary>
              Looks up a localized string similar to per kilowatt hours.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.reciprocal_meter">
            <summary>
              Looks up a localized string similar to reciprocal meters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.reciprocal_MillionBtu_th">
            <summary>
              Looks up a localized string similar to per million British thermal units.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.reciprocal_pound">
            <summary>
              Looks up a localized string similar to reciprocal pounds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.rod">
            <summary>
              Looks up a localized string similar to rods.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.second">
            <summary>
              Looks up a localized string similar to seconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.second_per_kilogram">
            <summary>
              Looks up a localized string similar to seconds per kilogram.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.second_per_pound">
            <summary>
              Looks up a localized string similar to seconds per pound.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.second_per_ton">
            <summary>
              Looks up a localized string similar to seconds per ton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Siemens_per_centimeter">
            <summary>
              Looks up a localized string similar to Siemens per centimeter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.Siemens_per_meter">
            <summary>
              Looks up a localized string similar to Siemens per meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.slug_per_cubic_foot">
            <summary>
              Looks up a localized string similar to slugs per cubic foot.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_attometer">
            <summary>
              Looks up a localized string similar to square attometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_centimeter">
            <summary>
              Looks up a localized string similar to square centimeters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_decameter">
            <summary>
              Looks up a localized string similar to square decameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_decimeter">
            <summary>
              Looks up a localized string similar to square decimeters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_exameter">
            <summary>
              Looks up a localized string similar to square exameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_femtometer">
            <summary>
              Looks up a localized string similar to square femtometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_foot">
            <summary>
              Looks up a localized string similar to square feet.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_gigameter">
            <summary>
              Looks up a localized string similar to square gigameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_hectometer">
            <summary>
              Looks up a localized string similar to square hectometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_inch">
            <summary>
              Looks up a localized string similar to square inches.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_kilometer">
            <summary>
              Looks up a localized string similar to square kilometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_megameter">
            <summary>
              Looks up a localized string similar to square megameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_meter">
            <summary>
              Looks up a localized string similar to square meters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_meter_Celsius_per_kilowatt">
            <summary>
              Looks up a localized string similar to square meters degree Celsius per kilowatt.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_meter_kelvin_per_watt">
            <summary>
              Looks up a localized string similar to square meters kelvin per watt.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_micrometer">
            <summary>
              Looks up a localized string similar to square micrometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_mile">
            <summary>
              Looks up a localized string similar to square miles.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_millimeter">
            <summary>
              Looks up a localized string similar to square millimeters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_nanometer">
            <summary>
              Looks up a localized string similar to square nanometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_petameter">
            <summary>
              Looks up a localized string similar to square petameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_picometer">
            <summary>
              Looks up a localized string similar to square picometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_terameter">
            <summary>
              Looks up a localized string similar to square terameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_yard">
            <summary>
              Looks up a localized string similar to square yards.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_yoctometer">
            <summary>
              Looks up a localized string similar to square yoctometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_yottameter">
            <summary>
              Looks up a localized string similar to square yottameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_zeptometer">
            <summary>
              Looks up a localized string similar to square zeptometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.square_zettameter">
            <summary>
              Looks up a localized string similar to square zettameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.standard_cubic_feet_per_minute_68F_1atm_dry">
            <summary>
              Looks up a localized string similar to standard cubic feet per minute (68 °F 1 atm, dry).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.stone_per_cubic_light_year">
            <summary>
              Looks up a localized string similar to stone per cubic light year.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.tablespoon">
            <summary>
              Looks up a localized string similar to tablespoons.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.teaspoon">
            <summary>
              Looks up a localized string similar to teaspoons.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.teragram">
            <summary>
              Looks up a localized string similar to teragrams.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.teragram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to teragrams per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.teragram_per_second">
            <summary>
              Looks up a localized string similar to teragrams per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.terahertz">
            <summary>
              Looks up a localized string similar to terahertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.terajoule_per_square_meter">
            <summary>
              Looks up a localized string similar to terajoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.terameter">
            <summary>
              Looks up a localized string similar to terameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.terameter_per_second">
            <summary>
              Looks up a localized string similar to terameters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.terameter_per_second_squared">
            <summary>
              Looks up a localized string similar to terameters per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.teranewton">
            <summary>
              Looks up a localized string similar to teranewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.terapascal">
            <summary>
              Looks up a localized string similar to terapascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.terasecond">
            <summary>
              Looks up a localized string similar to teraseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.thousand_pounds_per_hour">
            <summary>
              Looks up a localized string similar to thousand pounds per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ton">
            <summary>
              Looks up a localized string similar to tons.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ton_assay">
            <summary>
              Looks up a localized string similar to tons (assay).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ton_force">
            <summary>
              Looks up a localized string similar to ton force.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ton_metric">
            <summary>
              Looks up a localized string similar to tons (metric).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ton_of_refridgeration">
            <summary>
              Looks up a localized string similar to tons of refridgeration.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ton_per_cubic_yard">
            <summary>
              Looks up a localized string similar to tons per cubic yard.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ton_per_day">
            <summary>
              Looks up a localized string similar to tons per day.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ton_per_day_metric">
            <summary>
              Looks up a localized string similar to tons per day metric.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ton_per_hour">
            <summary>
              Looks up a localized string similar to tons per hour.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.ton_per_hour_metric">
            <summary>
              Looks up a localized string similar to tons per hour (metric).
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.volt">
            <summary>
              Looks up a localized string similar to volts.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.watt">
            <summary>
              Looks up a localized string similar to watts.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.watt_per_meter_kelvin">
            <summary>
              Looks up a localized string similar to watts per meter kelvin.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.watt_per_square_meter_Celsius">
            <summary>
              Looks up a localized string similar to watts per square meter degree Celsius.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.watt_per_square_meter_kelvin">
            <summary>
              Looks up a localized string similar to watts per square meter kelvin.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.watt_per_ton_of_refrigeration">
            <summary>
              Looks up a localized string similar to watts per ton of refrigeration.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.watt_per_watt">
            <summary>
              Looks up a localized string similar to watts per watt.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yard">
            <summary>
              Looks up a localized string similar to yards.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.year">
            <summary>
              Looks up a localized string similar to years.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yoctogram">
            <summary>
              Looks up a localized string similar to yoctograms.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yoctogram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to yoctograms per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yoctogram_per_second">
            <summary>
              Looks up a localized string similar to yoctograms per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yoctohertz">
            <summary>
              Looks up a localized string similar to yoctohertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yoctojoule_per_square_meter">
            <summary>
              Looks up a localized string similar to yoctojoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yoctometer">
            <summary>
              Looks up a localized string similar to yoctometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yoctometer_per_second">
            <summary>
              Looks up a localized string similar to yoctometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yoctometer_per_second_squared">
            <summary>
              Looks up a localized string similar to yoctometers per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yoctonewton">
            <summary>
              Looks up a localized string similar to yoctonewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yoctopascal">
            <summary>
              Looks up a localized string similar to yoctopascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yoctosecond">
            <summary>
              Looks up a localized string similar to yoctoseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yottagram">
            <summary>
              Looks up a localized string similar to yottagrams.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yottagram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to yottagrams per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yottagram_per_second">
            <summary>
              Looks up a localized string similar to yottagrams per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yottahertz">
            <summary>
              Looks up a localized string similar to yottahertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yottajoule_per_square_meter">
            <summary>
              Looks up a localized string similar to yottajoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yottameter">
            <summary>
              Looks up a localized string similar to yottameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yottameter_per_second">
            <summary>
              Looks up a localized string similar to yottameters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yottameter_per_second_squared">
            <summary>
              Looks up a localized string similar to yottameters per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yottanewton">
            <summary>
              Looks up a localized string similar to yottanewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yottapascal">
            <summary>
              Looks up a localized string similar to yottapascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.yottasecond">
            <summary>
              Looks up a localized string similar to yottaseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zeptogram">
            <summary>
              Looks up a localized string similar to zeptograms.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zeptogram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to zeptograms per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zeptogram_per_second">
            <summary>
              Looks up a localized string similar to zeptograms per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zeptohertz">
            <summary>
              Looks up a localized string similar to zeptohertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zeptojoule_per_square_meter">
            <summary>
              Looks up a localized string similar to zeptojoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zeptometer">
            <summary>
              Looks up a localized string similar to zeptometers.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zeptometer_per_second">
            <summary>
              Looks up a localized string similar to zeptometers per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zeptometer_per_second_squared">
            <summary>
              Looks up a localized string similar to zeptometers per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zeptonewton">
            <summary>
              Looks up a localized string similar to zeptonewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zeptopascal">
            <summary>
              Looks up a localized string similar to zeptopascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zeptosecond">
            <summary>
              Looks up a localized string similar to zeptoseconds.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zettagram">
            <summary>
              Looks up a localized string similar to zettagrams.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zettagram_per_cubic_meter">
            <summary>
              Looks up a localized string similar to zettagrams per cubic meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zettagram_per_second">
            <summary>
              Looks up a localized string similar to zettagrams per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zettahertz">
            <summary>
              Looks up a localized string similar to zettahertz.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zettajoule_per_square_meter">
            <summary>
              Looks up a localized string similar to zettajoules per square meter.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zettameter">
            <summary>
              Looks up a localized string similar to zettameters.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zettameter_per_second">
            <summary>
              Looks up a localized string similar to zettameters per second.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zettameter_per_second_squared">
            <summary>
              Looks up a localized string similar to zettameters per second squared.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zettanewton">
            <summary>
              Looks up a localized string similar to zettanewton.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zettapascal">
            <summary>
              Looks up a localized string similar to zettapascals.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Descriptions.zettasecond">
            <summary>
              Looks up a localized string similar to zettaseconds.
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.Names">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Acceleration">
            <summary>
              Looks up a localized string similar to Acceleration.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Area">
            <summary>
              Looks up a localized string similar to Area.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.AvailableEnergy">
            <summary>
              Looks up a localized string similar to Available energy.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.ChemicalAmount">
            <summary>
              Looks up a localized string similar to Chemical amount.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.ConductivityElectrolytic">
            <summary>
              Looks up a localized string similar to Conductivity electrolytic.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Density">
            <summary>
              Looks up a localized string similar to Density.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Efficiency">
            <summary>
              Looks up a localized string similar to Efficiency.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.ElectricCurrent">
            <summary>
              Looks up a localized string similar to Electric current.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.ElectricPotentialDifference">
            <summary>
              Looks up a localized string similar to Electric potential difference.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.EmissionFactor">
            <summary>
              Looks up a localized string similar to Emission factor.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Energy">
            <summary>
              Looks up a localized string similar to Energy.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.EnergyDensity">
            <summary>
              Looks up a localized string similar to Energy density.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Entropy">
            <summary>
              Looks up a localized string similar to Entropy.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Force">
            <summary>
              Looks up a localized string similar to Force.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Frequency">
            <summary>
              Looks up a localized string similar to Frequency.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.HeatDensity">
            <summary>
              Looks up a localized string similar to Heat density.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.HeatTransferCoefficient">
            <summary>
              Looks up a localized string similar to Heat transfer coefficient.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Length">
            <summary>
              Looks up a localized string similar to Length.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Mass">
            <summary>
              Looks up a localized string similar to Mass.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.MassRate">
            <summary>
              Looks up a localized string similar to Mass rate.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.MolalConcentration">
            <summary>
              Looks up a localized string similar to Molal concentration.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.MolarConcentration">
            <summary>
              Looks up a localized string similar to Molar concentration.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.MolarEntropy">
            <summary>
              Looks up a localized string similar to Molar entropy.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.MolarHeatCapacity">
            <summary>
              Looks up a localized string similar to Molar heat capacity.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.MolarMass">
            <summary>
              Looks up a localized string similar to Molar mass.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.NormalizedVolumeRate">
            <summary>
              Looks up a localized string similar to Normalized volume rate.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Percentage">
            <summary>
              Looks up a localized string similar to Percentage.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Power">
            <summary>
              Looks up a localized string similar to Power.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.PowerEfficiency">
            <summary>
              Looks up a localized string similar to Power efficiency.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Pressure">
            <summary>
              Looks up a localized string similar to Pressure.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.ReciprocalEnergy">
            <summary>
              Looks up a localized string similar to Reciprocal energy.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.ReciprocalLength">
            <summary>
              Looks up a localized string similar to Reciprocal length.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.ReciprocalMass">
            <summary>
              Looks up a localized string similar to Reciprocal mass.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.ReciprocalVolume">
            <summary>
              Looks up a localized string similar to Reciprocal volume.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.RelativeHumidity">
            <summary>
              Looks up a localized string similar to Relative humidity.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.SpecificEnthalpy">
            <summary>
              Looks up a localized string similar to Specific enthalpy.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.SpecificEntropy">
            <summary>
              Looks up a localized string similar to Specific entropy.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.SpecificHeatCapacity">
            <summary>
              Looks up a localized string similar to Specific heat capacity.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.SpecificHumidity">
            <summary>
              Looks up a localized string similar to Specific humidity.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.SpecificVolume">
            <summary>
              Looks up a localized string similar to Specific volume.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.SurfaceTension">
            <summary>
              Looks up a localized string similar to Surface tension.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Temperature">
            <summary>
              Looks up a localized string similar to Temperature.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.TemperatureInterval">
            <summary>
              Looks up a localized string similar to Temperature interval.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.TemperatureLapseRate">
            <summary>
              Looks up a localized string similar to Temperature lapse rate.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.ThermalConductivity">
            <summary>
              Looks up a localized string similar to Thermal conductivity.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.ThermalInsulance">
            <summary>
              Looks up a localized string similar to Thermal insulance.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Time">
            <summary>
              Looks up a localized string similar to Time.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.TimePerMass">
            <summary>
              Looks up a localized string similar to Time per mass.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Velocity">
            <summary>
              Looks up a localized string similar to Velocity.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Viscosity">
            <summary>
              Looks up a localized string similar to Viscosity.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.Volume">
            <summary>
              Looks up a localized string similar to Volume.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.VolumeFlux">
            <summary>
              Looks up a localized string similar to Volume flux.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.VolumeRate">
            <summary>
              Looks up a localized string similar to Volume rate.
            </summary>
        </member>
        <member name="P:Nalco.Numerics.SI.Names.VolumeRatioRate">
            <summary>
              Looks up a localized string similar to Volume ratio rate.
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.Prefix">
            <summary>
            SI prefix conversion factors.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.yotta">
            <summary>
            Yotta prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.zetta">
            <summary>
            Zetta prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.exa">
            <summary>
            Exa prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.peta">
            <summary>
            Peta prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.tera">
            <summary>
            Tera prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.giga">
            <summary>
            Giga prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.mega">
            <summary>
            Mega prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.kilo">
            <summary>
            Kilo prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.hecto">
            <summary>
            Hecto prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.deca">
            <summary>
            Deca prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.deci">
            <summary>
            Deci prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.centi">
            <summary>
            Centi prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.milli">
            <summary>
            Milli prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.micro">
            <summary>
            Micro prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.nano">
            <summary>
            Nano prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.pico">
            <summary>
            Pico prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.femto">
            <summary>
            Femto prefix
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.atto">
            <summary>
            Atto prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.zepto">
            <summary>
            Zepto prefix.
            </summary>
        </member>
        <member name="F:Nalco.Numerics.SI.Prefix.yocto">
            <summary>
            Yocto prefix.
            </summary>
        </member>
        <member name="T:Nalco.Numerics.SI.TemperatureConversion">
            <summary>
            Conversion implementation for temperatures.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureConversion.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureConversion.ToBase(System.Double,System.Int32)">
            <summary>
            Convert the value from the given subunit to the base subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="from">Original subunit.</param>
            <returns>Value in the base subunit.</returns>
        </member>
        <member name="M:Nalco.Numerics.SI.TemperatureConversion.FromBase(System.Double,System.Int32)">
            <summary>
            Convert the value from the base subunit to the given subunit.
            </summary>
            <param name="value">Value.</param>
            <param name="to">Result subunit.</param>
            <returns>Value in the result subunit.</returns>
        </member>
        <member name="T:Nalco.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.CannotDeepCloneComplexArray">
            <summary>
              Looks up a localized string similar to Cannot deep clone higher-rank or non-zero based arrays..
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.CannotDeepCloneDelegate">
            <summary>
              Looks up a localized string similar to Cannot deep clone delegates..
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.ChildAlreadyHasParent">
            <summary>
              Looks up a localized string similar to Cannot assign HierarchyNode a child that already has a parant..
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.DimensionalMismatch">
            <summary>
              Looks up a localized string similar to Dimensional mismatch..
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.EndElementMustBeGreaterThanStartElementAndEithinTheBoundsOfTheArray">
            <summary>
              Looks up a localized string similar to End element must be greater than or equal to start element and within the bounds of the array..
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.ErrorExecutingExternalProcess120ExitCode300stdout400stderr5">
            <summary>
              Looks up a localized string similar to Error executing external process: {1} {2}{0}Exit Code: {3}{0}{0}stdout: {4}{0}{0}stderr: {5}.
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.InvalidFormatError">
            <summary>
              Looks up a localized string similar to The format of {0} is invalid..
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.InvalidHexFormat">
            <summary>
              Looks up a localized string similar to Invalid hexidecimal format..
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.InvalidReplacementString">
            <summary>
              Looks up a localized string similar to Replacement string cannot contain invalid characters..
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.MustBeOfType">
            <summary>
              Looks up a localized string similar to Object must be of type {0}..
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.NegativeValueInMean">
            <summary>
              Looks up a localized string similar to Negative value in mean calculation..
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.PollForFilesNetworkFailure">
            <summary>
              Looks up a localized string similar to {0} consecutive network failures in PollForFiles..
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.Scalar">
            <summary>
              Looks up a localized string similar to Scalar.
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.SequenceContainsInsufficientElements">
            <summary>
              Looks up a localized string similar to Sequence contains insufficient elements..
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.StartElementMustBeWithinTheBoundsOfTheArray">
            <summary>
              Looks up a localized string similar to Start element must be within the bounds of the array..
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.SubunitDetailsOutOfRange">
            <summary>
              Looks up a localized string similar to Subunit details out of range..
            </summary>
        </member>
        <member name="P:Nalco.Properties.Resources.TheSourceDirectoryDoesNotExist">
            <summary>
              Looks up a localized string similar to The source directory, {0}, does not exist..
            </summary>
        </member>
    </members>
</doc>
